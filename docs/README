To maintain documentation, the process is like this:

	* Pull MonoTouch-based documentation (since they share some of it)

	* Update the docs based on the latest dll

	* Populate the docs with stubs:
	    (a) for common constructors and patterns that can be inferred.
	    (b) for data that requires the original contract API

	* Commit changes

	* Optionally: Mashup data with Apple's docs.

* Pull MonoTouch-based documentation

	Use "make fetch-shared-docs" to pull shared documentation from
	MonoTouch into this directory.   This might override any local
	changes.   Eventually we should host those in maccore

* Update docs based on the latest DLL

	This is basically the use of mdoc for maintenance purposes, just run
	the "make update-docs" command.

* Populate the docs with stubs

	This is a two-step process because one step can work on the
	XML files directly, while the second step requires the
	original contract file generated by bmac/btouch to determine
	how to document certain components.

	The first step is done with "make populate"

	The second step is done with "make dgc"

* Mashup the data

  	"make run" will do the first pass at mashing up and identifying problems in the API (runs docfixer)

	"make run2" will mashup the data and leave it in the "deploy" directory

* Uploading the docs

	"make push" uploads the docs