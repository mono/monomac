<Type Name="Vector2" FullName="MonoMac.OpenGL.Vector2">
  <TypeSignature Language="C#" Value="public struct Vector2 : IEquatable&lt;MonoMac.OpenGL.Vector2&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Vector2 extends System.ValueType implements class System.IEquatable`1&lt;valuetype MonoMac.OpenGL.Vector2&gt;" />
  <AssemblyInfo>
    <AssemblyName>MonoMac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;MonoMac.OpenGL.Vector2&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents a 2D vector using two single-precision floating-point numbers.</summary>
    <remarks>
            The Vector2 structure is suitable for interoperation with unmanaged code requiring two consecutive floats.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector2 (MonoMac.OpenGL.Vector2 v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype MonoMac.OpenGL.Vector2 v) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="v">The Vector2 to copy components from.</param>
        <summary>
            Constructs a new Vector2 from the given Vector2.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector2 (MonoMac.OpenGL.Vector3 v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype MonoMac.OpenGL.Vector3 v) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector3" />
      </Parameters>
      <Docs>
        <param name="v">The Vector3 to copy components from. Z is discarded.</param>
        <summary>
            Constructs a new Vector2 from the given Vector3.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector2 (MonoMac.OpenGL.Vector4 v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype MonoMac.OpenGL.Vector4 v) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector4" />
      </Parameters>
      <Docs>
        <param name="v">The Vector4 to copy components from. Z and W are discarded.</param>
        <summary>
            Constructs a new Vector2 from the given Vector4.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector2 (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value that will initialize this instance.</param>
        <summary>
            Constructs a new instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector2 (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 x, float32 y) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">The x coordinate of the net Vector2.</param>
        <param name="y">The y coordinate of the net Vector2.</param>
        <summary>
            Constructs a new Vector2.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (MonoMac.OpenGL.Vector2 right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(valuetype MonoMac.OpenGL.Vector2 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Add() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="right">Right operand. This parameter is only read from.</param>
        <summary>Add the Vector passed as parameter to this instance.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (ref MonoMac.OpenGL.Vector2 right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(valuetype MonoMac.OpenGL.Vector2 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Add() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="right">Right operand. This parameter is only read from.</param>
        <summary>Add the Vector passed as parameter to this instance.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 Add (MonoMac.OpenGL.Vector2 a, MonoMac.OpenGL.Vector2 b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 Add(valuetype MonoMac.OpenGL.Vector2 a, valuetype MonoMac.OpenGL.Vector2 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="a">Left operand.</param>
        <param name="b">Right operand.</param>
        <summary>
            Adds two vectors.
            </summary>
        <returns>Result of operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static void Add (ref MonoMac.OpenGL.Vector2 a, ref MonoMac.OpenGL.Vector2 b, out MonoMac.OpenGL.Vector2 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Add(valuetype MonoMac.OpenGL.Vector2 a, valuetype MonoMac.OpenGL.Vector2 b, valuetype MonoMac.OpenGL.Vector2 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">Left operand.</param>
        <param name="b">Right operand.</param>
        <param name="result">Result of operation.</param>
        <summary>
            Adds two vectors.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaryCentric">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 BaryCentric (MonoMac.OpenGL.Vector2 a, MonoMac.OpenGL.Vector2 b, MonoMac.OpenGL.Vector2 c, float u, float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 BaryCentric(valuetype MonoMac.OpenGL.Vector2 a, valuetype MonoMac.OpenGL.Vector2 b, valuetype MonoMac.OpenGL.Vector2 c, float32 u, float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="c" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="u" Type="System.Single" />
        <Parameter Name="v" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">First input Vector</param>
        <param name="b">Second input Vector</param>
        <param name="c">Third input Vector</param>
        <param name="u">First Barycentric Coordinate</param>
        <param name="v">Second Barycentric Coordinate</param>
        <summary>
            Interpolate 3 Vectors using Barycentric coordinates
            </summary>
        <returns>a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaryCentric">
      <MemberSignature Language="C#" Value="public static void BaryCentric (ref MonoMac.OpenGL.Vector2 a, ref MonoMac.OpenGL.Vector2 b, ref MonoMac.OpenGL.Vector2 c, float u, float v, out MonoMac.OpenGL.Vector2 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BaryCentric(valuetype MonoMac.OpenGL.Vector2 a, valuetype MonoMac.OpenGL.Vector2 b, valuetype MonoMac.OpenGL.Vector2 c, float32 u, float32 v, valuetype MonoMac.OpenGL.Vector2 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="c" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="u" Type="System.Single" />
        <Parameter Name="v" Type="System.Single" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">First input Vector.</param>
        <param name="b">Second input Vector.</param>
        <param name="c">Third input Vector.</param>
        <param name="u">First Barycentric Coordinate.</param>
        <param name="v">Second Barycentric Coordinate.</param>
        <param name="result">Output Vector. a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</param>
        <summary>Interpolate 3 Vectors using Barycentric coordinates</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 Clamp (MonoMac.OpenGL.Vector2 vec, MonoMac.OpenGL.Vector2 min, MonoMac.OpenGL.Vector2 max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 Clamp(valuetype MonoMac.OpenGL.Vector2 vec, valuetype MonoMac.OpenGL.Vector2 min, valuetype MonoMac.OpenGL.Vector2 max) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="min" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="max" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="vec">Input vector</param>
        <param name="min">Minimum vector</param>
        <param name="max">Maximum vector</param>
        <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
        <returns>The clamped vector</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static void Clamp (ref MonoMac.OpenGL.Vector2 vec, ref MonoMac.OpenGL.Vector2 min, ref MonoMac.OpenGL.Vector2 max, out MonoMac.OpenGL.Vector2 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clamp(valuetype MonoMac.OpenGL.Vector2 vec, valuetype MonoMac.OpenGL.Vector2 min, valuetype MonoMac.OpenGL.Vector2 max, valuetype MonoMac.OpenGL.Vector2 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="min" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="max" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vec">Input vector</param>
        <param name="min">Minimum vector</param>
        <param name="max">Maximum vector</param>
        <param name="result">The clamped vector</param>
        <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentMax">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 ComponentMax (MonoMac.OpenGL.Vector2 a, MonoMac.OpenGL.Vector2 b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 ComponentMax(valuetype MonoMac.OpenGL.Vector2 a, valuetype MonoMac.OpenGL.Vector2 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="a">First operand</param>
        <param name="b">Second operand</param>
        <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
        <returns>The component-wise maximum</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentMax">
      <MemberSignature Language="C#" Value="public static void ComponentMax (ref MonoMac.OpenGL.Vector2 a, ref MonoMac.OpenGL.Vector2 b, out MonoMac.OpenGL.Vector2 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComponentMax(valuetype MonoMac.OpenGL.Vector2 a, valuetype MonoMac.OpenGL.Vector2 b, valuetype MonoMac.OpenGL.Vector2 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">First operand</param>
        <param name="b">Second operand</param>
        <param name="result">The component-wise maximum</param>
        <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentMin">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 ComponentMin (MonoMac.OpenGL.Vector2 a, MonoMac.OpenGL.Vector2 b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 ComponentMin(valuetype MonoMac.OpenGL.Vector2 a, valuetype MonoMac.OpenGL.Vector2 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="a">First operand</param>
        <param name="b">Second operand</param>
        <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
        <returns>The component-wise minimum</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentMin">
      <MemberSignature Language="C#" Value="public static void ComponentMin (ref MonoMac.OpenGL.Vector2 a, ref MonoMac.OpenGL.Vector2 b, out MonoMac.OpenGL.Vector2 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComponentMin(valuetype MonoMac.OpenGL.Vector2 a, valuetype MonoMac.OpenGL.Vector2 b, valuetype MonoMac.OpenGL.Vector2 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">First operand</param>
        <param name="b">Second operand</param>
        <param name="result">The component-wise minimum</param>
        <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Div">
      <MemberSignature Language="C#" Value="public void Div (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Div(float32 f) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Divide() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f">Scalar operand.</param>
        <summary>Divide this instance by a scalar.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Div">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 Div (MonoMac.OpenGL.Vector2 a, float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 Div(valuetype MonoMac.OpenGL.Vector2 a, float32 f) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Divide() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">Vector operand</param>
        <param name="f">Scalar operand</param>
        <summary>
            Divide a vector by a scalar
            </summary>
        <returns>Result of the division</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Div">
      <MemberSignature Language="C#" Value="public static void Div (ref MonoMac.OpenGL.Vector2 a, float f, out MonoMac.OpenGL.Vector2 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Div(valuetype MonoMac.OpenGL.Vector2 a, float32 f, valuetype MonoMac.OpenGL.Vector2 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Divide() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="f" Type="System.Single" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">Vector operand</param>
        <param name="f">Scalar operand</param>
        <param name="result">Result of the division</param>
        <summary>
            Divide a vector by a scalar
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 Divide (MonoMac.OpenGL.Vector2 vector, MonoMac.OpenGL.Vector2 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 Divide(valuetype MonoMac.OpenGL.Vector2 vector, valuetype MonoMac.OpenGL.Vector2 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="scale" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="vector">Left operand.</param>
        <param name="scale">Right operand.</param>
        <summary>
            Divides a vector by the components of a vector (scale).
            </summary>
        <returns>Result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 Divide (MonoMac.OpenGL.Vector2 vector, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 Divide(valuetype MonoMac.OpenGL.Vector2 vector, float32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="vector">Left operand.</param>
        <param name="scale">Right operand.</param>
        <summary>
            Divides a vector by a scalar.
            </summary>
        <returns>Result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static void Divide (ref MonoMac.OpenGL.Vector2 vector, ref MonoMac.OpenGL.Vector2 scale, out MonoMac.OpenGL.Vector2 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Divide(valuetype MonoMac.OpenGL.Vector2 vector, valuetype MonoMac.OpenGL.Vector2 scale, valuetype MonoMac.OpenGL.Vector2 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="scale" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vector">Left operand.</param>
        <param name="scale">Right operand.</param>
        <param name="result">Result of the operation.</param>
        <summary>
            Divide a vector by the components of a vector (scale).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static void Divide (ref MonoMac.OpenGL.Vector2 vector, float scale, out MonoMac.OpenGL.Vector2 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Divide(valuetype MonoMac.OpenGL.Vector2 vector, float32 scale, valuetype MonoMac.OpenGL.Vector2 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="scale" Type="System.Single" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vector">Left operand.</param>
        <param name="scale">Right operand.</param>
        <param name="result">Result of the operation.</param>
        <summary>
            Divides a vector by a scalar.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dot">
      <MemberSignature Language="C#" Value="public static float Dot (MonoMac.OpenGL.Vector2 left, MonoMac.OpenGL.Vector2 right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Dot(valuetype MonoMac.OpenGL.Vector2 left, valuetype MonoMac.OpenGL.Vector2 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="left">First operand</param>
        <param name="right">Second operand</param>
        <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
        <returns>The dot product of the two inputs</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dot">
      <MemberSignature Language="C#" Value="public static void Dot (ref MonoMac.OpenGL.Vector2 left, ref MonoMac.OpenGL.Vector2 right, out float result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Dot(valuetype MonoMac.OpenGL.Vector2 left, valuetype MonoMac.OpenGL.Vector2 right, float32 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="result" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="left">First operand</param>
        <param name="right">Second operand</param>
        <param name="result">The dot product of the two inputs</param>
        <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (MonoMac.OpenGL.Vector2 other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype MonoMac.OpenGL.Vector2 other) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="other">A vector to compare with this vector.</param>
        <summary>Indicates whether the current vector is equal to another vector.</summary>
        <returns>true if the current vector is equal to the vector parameter; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare to.</param>
        <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
        <returns>True if the instances are equal; false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the hashcode for this instance.
            </summary>
        <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public float Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the length (magnitude) of the vector.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <see cref="P:MonoMac.OpenGL.Vector2.LengthFast" />
        <altmember cref="P:MonoMac.OpenGL.Vector2.LengthSquared" />
      </Docs>
    </Member>
    <Member MemberName="LengthFast">
      <MemberSignature Language="C#" Value="public float LengthFast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LengthFast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an approximation of the vector length (magnitude).
            </summary>
        <value>To be added.</value>
        <remarks>
            This property uses an approximation of the square root function to calculate vector magnitude, with
            an upper error bound of 0.001.
            </remarks>
        <see cref="P:MonoMac.OpenGL.Vector2.Length" />
        <altmember cref="P:MonoMac.OpenGL.Vector2.LengthSquared" />
      </Docs>
    </Member>
    <Member MemberName="LengthSquared">
      <MemberSignature Language="C#" Value="public float LengthSquared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LengthSquared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the square of the vector length (magnitude).
            </summary>
        <value>To be added.</value>
        <remarks>
            This property avoids the costly square root operation required by the Length property. This makes it more suitable
            for comparisons.
            </remarks>
        <see cref="P:MonoMac.OpenGL.Vector2.Length" />
        <altmember cref="P:MonoMac.OpenGL.Vector2.LengthFast" />
      </Docs>
    </Member>
    <Member MemberName="Lerp">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 Lerp (MonoMac.OpenGL.Vector2 a, MonoMac.OpenGL.Vector2 b, float blend);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 Lerp(valuetype MonoMac.OpenGL.Vector2 a, valuetype MonoMac.OpenGL.Vector2 b, float32 blend) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="blend" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">First input vector</param>
        <param name="b">Second input vector</param>
        <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
        <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
        <returns>a when blend=0, b when blend=1, and a linear combination otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lerp">
      <MemberSignature Language="C#" Value="public static void Lerp (ref MonoMac.OpenGL.Vector2 a, ref MonoMac.OpenGL.Vector2 b, float blend, out MonoMac.OpenGL.Vector2 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Lerp(valuetype MonoMac.OpenGL.Vector2 a, valuetype MonoMac.OpenGL.Vector2 b, float32 blend, valuetype MonoMac.OpenGL.Vector2 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="blend" Type="System.Single" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">First input vector</param>
        <param name="b">Second input vector</param>
        <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
        <param name="result">a when blend=0, b when blend=1, and a linear combination otherwise</param>
        <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 Max (MonoMac.OpenGL.Vector2 left, MonoMac.OpenGL.Vector2 right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 Max(valuetype MonoMac.OpenGL.Vector2 left, valuetype MonoMac.OpenGL.Vector2 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="left">Left operand</param>
        <param name="right">Right operand</param>
        <summary>
            Returns the Vector3 with the minimum magnitude
            </summary>
        <returns>The minimum Vector3</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 Min (MonoMac.OpenGL.Vector2 left, MonoMac.OpenGL.Vector2 right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 Min(valuetype MonoMac.OpenGL.Vector2 left, valuetype MonoMac.OpenGL.Vector2 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="left">Left operand</param>
        <param name="right">Right operand</param>
        <summary>
            Returns the Vector3 with the minimum magnitude
            </summary>
        <returns>The minimum Vector3</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mult">
      <MemberSignature Language="C#" Value="public void Mult (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Mult(float32 f) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Multiply() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f">Scalar operand.</param>
        <summary>Multiply this instance by a scalar.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mult">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 Mult (MonoMac.OpenGL.Vector2 a, float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 Mult(valuetype MonoMac.OpenGL.Vector2 a, float32 f) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Multiply() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">Vector operand</param>
        <param name="f">Scalar operand</param>
        <summary>
            Multiply a vector and a scalar
            </summary>
        <returns>Result of the multiplication</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mult">
      <MemberSignature Language="C#" Value="public static void Mult (ref MonoMac.OpenGL.Vector2 a, float f, out MonoMac.OpenGL.Vector2 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Mult(valuetype MonoMac.OpenGL.Vector2 a, float32 f, valuetype MonoMac.OpenGL.Vector2 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Multiply() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="f" Type="System.Single" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">Vector operand</param>
        <param name="f">Scalar operand</param>
        <param name="result">Result of the multiplication</param>
        <summary>
            Multiply a vector and a scalar
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 Multiply (MonoMac.OpenGL.Vector2 vector, MonoMac.OpenGL.Vector2 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 Multiply(valuetype MonoMac.OpenGL.Vector2 vector, valuetype MonoMac.OpenGL.Vector2 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="scale" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="vector">Left operand.</param>
        <param name="scale">Right operand.</param>
        <summary>
            Multiplies a vector by the components a vector (scale).
            </summary>
        <returns>Result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 Multiply (MonoMac.OpenGL.Vector2 vector, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 Multiply(valuetype MonoMac.OpenGL.Vector2 vector, float32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="vector">Left operand.</param>
        <param name="scale">Right operand.</param>
        <summary>
            Multiplies a vector by a scalar.
            </summary>
        <returns>Result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static void Multiply (ref MonoMac.OpenGL.Vector2 vector, ref MonoMac.OpenGL.Vector2 scale, out MonoMac.OpenGL.Vector2 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Multiply(valuetype MonoMac.OpenGL.Vector2 vector, valuetype MonoMac.OpenGL.Vector2 scale, valuetype MonoMac.OpenGL.Vector2 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="scale" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vector">Left operand.</param>
        <param name="scale">Right operand.</param>
        <param name="result">Result of the operation.</param>
        <summary>
            Multiplies a vector by the components of a vector (scale).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static void Multiply (ref MonoMac.OpenGL.Vector2 vector, float scale, out MonoMac.OpenGL.Vector2 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Multiply(valuetype MonoMac.OpenGL.Vector2 vector, float32 scale, valuetype MonoMac.OpenGL.Vector2 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="scale" Type="System.Single" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vector">Left operand.</param>
        <param name="scale">Right operand.</param>
        <param name="result">Result of the operation.</param>
        <summary>
            Multiplies a vector by a scalar.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public void Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Normalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Scales the Vector2 to unit length.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 Normalize (MonoMac.OpenGL.Vector2 vec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 Normalize(valuetype MonoMac.OpenGL.Vector2 vec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="vec">The input vector</param>
        <summary>
            Scale a vector to unit length
            </summary>
        <returns>The normalized vector</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static void Normalize (ref MonoMac.OpenGL.Vector2 vec, out MonoMac.OpenGL.Vector2 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normalize(valuetype MonoMac.OpenGL.Vector2 vec, valuetype MonoMac.OpenGL.Vector2 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vec">The input vector</param>
        <param name="result">The normalized vector</param>
        <summary>
            Scale a vector to unit length
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeFast">
      <MemberSignature Language="C#" Value="public void NormalizeFast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NormalizeFast() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Scales the Vector2 to approximately unit length.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeFast">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 NormalizeFast (MonoMac.OpenGL.Vector2 vec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 NormalizeFast(valuetype MonoMac.OpenGL.Vector2 vec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="vec">The input vector</param>
        <summary>
            Scale a vector to approximately unit length
            </summary>
        <returns>The normalized vector</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeFast">
      <MemberSignature Language="C#" Value="public static void NormalizeFast (ref MonoMac.OpenGL.Vector2 vec, out MonoMac.OpenGL.Vector2 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NormalizeFast(valuetype MonoMac.OpenGL.Vector2 vec, valuetype MonoMac.OpenGL.Vector2 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vec">The input vector</param>
        <param name="result">The normalized vector</param>
        <summary>
            Scale a vector to approximately unit length
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static readonly MonoMac.OpenGL.Vector2 One;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype MonoMac.OpenGL.Vector2 One" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Defines an instance with all components set to 1.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 op_Addition (MonoMac.OpenGL.Vector2 left, MonoMac.OpenGL.Vector2 right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype MonoMac.OpenGL.Vector2 op_Addition(valuetype MonoMac.OpenGL.Vector2 left, valuetype MonoMac.OpenGL.Vector2 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="left">Left operand.</param>
        <param name="right">Right operand.</param>
        <summary>
            Adds the specified instances.
            </summary>
        <returns>Result of addition.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 op_Division (MonoMac.OpenGL.Vector2 vec, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype MonoMac.OpenGL.Vector2 op_Division(valuetype MonoMac.OpenGL.Vector2 vec, float32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="vec">Left operand</param>
        <param name="scale">Right operand</param>
        <summary>
            Divides the specified instance by a scalar.
            </summary>
        <returns>Result of the division.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (MonoMac.OpenGL.Vector2 left, MonoMac.OpenGL.Vector2 right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype MonoMac.OpenGL.Vector2 left, valuetype MonoMac.OpenGL.Vector2 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="left">Left operand.</param>
        <param name="right">Right operand.</param>
        <summary>
            Compares the specified instances for equality.
            </summary>
        <returns>True if both instances are equal; false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (MonoMac.OpenGL.Vector2 left, MonoMac.OpenGL.Vector2 right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype MonoMac.OpenGL.Vector2 left, valuetype MonoMac.OpenGL.Vector2 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="left">Left operand.</param>
        <param name="right">Right operand.</param>
        <summary>
            Compares the specified instances for inequality.
            </summary>
        <returns>True if both instances are not equal; false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 op_Multiply (MonoMac.OpenGL.Vector2 vec, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype MonoMac.OpenGL.Vector2 op_Multiply(valuetype MonoMac.OpenGL.Vector2 vec, float32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="vec">Left operand.</param>
        <param name="scale">Right operand.</param>
        <summary>
            Multiplies the specified instance by a scalar.
            </summary>
        <returns>Result of multiplication.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 op_Multiply (float scale, MonoMac.OpenGL.Vector2 vec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype MonoMac.OpenGL.Vector2 op_Multiply(float32 scale, valuetype MonoMac.OpenGL.Vector2 vec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="System.Single" />
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="scale">Left operand.</param>
        <param name="vec">Right operand.</param>
        <summary>
            Multiplies the specified instance by a scalar.
            </summary>
        <returns>Result of multiplication.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 op_Subtraction (MonoMac.OpenGL.Vector2 left, MonoMac.OpenGL.Vector2 right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype MonoMac.OpenGL.Vector2 op_Subtraction(valuetype MonoMac.OpenGL.Vector2 left, valuetype MonoMac.OpenGL.Vector2 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="left">Left operand.</param>
        <param name="right">Right operand.</param>
        <summary>
            Subtracts the specified instances.
            </summary>
        <returns>Result of subtraction.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 op_UnaryNegation (MonoMac.OpenGL.Vector2 vec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype MonoMac.OpenGL.Vector2 op_UnaryNegation(valuetype MonoMac.OpenGL.Vector2 vec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="vec">Operand.</param>
        <summary>
            Negates the specified instance.
            </summary>
        <returns>Result of negation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerpendicularLeft">
      <MemberSignature Language="C#" Value="public MonoMac.OpenGL.Vector2 PerpendicularLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoMac.OpenGL.Vector2 PerpendicularLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the perpendicular vector on the left side of this vector.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerpendicularRight">
      <MemberSignature Language="C#" Value="public MonoMac.OpenGL.Vector2 PerpendicularRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoMac.OpenGL.Vector2 PerpendicularRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the perpendicular vector on the right side of this vector.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (MonoMac.OpenGL.Vector2 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(valuetype MonoMac.OpenGL.Vector2 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Multiply() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="scale">The scaling of the individual components.</param>
        <summary>Scales this instance by the given parameter.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (ref MonoMac.OpenGL.Vector2 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(valuetype MonoMac.OpenGL.Vector2 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Multiply() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="scale">The scaling of the individual components.</param>
        <summary>Scales this instance by the given parameter.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 sx, float32 sy) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Multiply() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx">The scale of the X component.</param>
        <param name="sy">The scale of the Y component.</param>
        <summary>
            Scales the current Vector2 by the given amounts.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeInBytes">
      <MemberSignature Language="C#" Value="public static readonly int SizeInBytes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SizeInBytes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Defines the size of the Vector2 struct in bytes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sub">
      <MemberSignature Language="C#" Value="public void Sub (MonoMac.OpenGL.Vector2 right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sub(valuetype MonoMac.OpenGL.Vector2 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Subtract() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="right">Right operand. This parameter is only read from.</param>
        <summary>Subtract the Vector passed as parameter from this instance.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sub">
      <MemberSignature Language="C#" Value="public void Sub (ref MonoMac.OpenGL.Vector2 right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sub(valuetype MonoMac.OpenGL.Vector2 right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Subtract() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="right">Right operand. This parameter is only read from.</param>
        <summary>Subtract the Vector passed as parameter from this instance.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sub">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 Sub (MonoMac.OpenGL.Vector2 a, MonoMac.OpenGL.Vector2 b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 Sub(valuetype MonoMac.OpenGL.Vector2 a, valuetype MonoMac.OpenGL.Vector2 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Subtract() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="a">First operand</param>
        <param name="b">Second operand</param>
        <summary>
            Subtract one Vector from another
            </summary>
        <returns>Result of subtraction</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sub">
      <MemberSignature Language="C#" Value="public static void Sub (ref MonoMac.OpenGL.Vector2 a, ref MonoMac.OpenGL.Vector2 b, out MonoMac.OpenGL.Vector2 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sub(valuetype MonoMac.OpenGL.Vector2 a, valuetype MonoMac.OpenGL.Vector2 b, valuetype MonoMac.OpenGL.Vector2 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Subtract() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">First operand</param>
        <param name="b">Second operand</param>
        <param name="result">Result of subtraction</param>
        <summary>
            Subtract one Vector from another
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 Subtract (MonoMac.OpenGL.Vector2 a, MonoMac.OpenGL.Vector2 b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 Subtract(valuetype MonoMac.OpenGL.Vector2 a, valuetype MonoMac.OpenGL.Vector2 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="a">First operand</param>
        <param name="b">Second operand</param>
        <summary>
            Subtract one Vector from another
            </summary>
        <returns>Result of subtraction</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static void Subtract (ref MonoMac.OpenGL.Vector2 a, ref MonoMac.OpenGL.Vector2 b, out MonoMac.OpenGL.Vector2 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Subtract(valuetype MonoMac.OpenGL.Vector2 a, valuetype MonoMac.OpenGL.Vector2 b, valuetype MonoMac.OpenGL.Vector2 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">First operand</param>
        <param name="b">Second operand</param>
        <param name="result">Result of subtraction</param>
        <summary>
            Subtract one Vector from another
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a System.String that represents the current Vector2.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 Transform (MonoMac.OpenGL.Vector2 vec, MonoMac.OpenGL.Quaternion quat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2 Transform(valuetype MonoMac.OpenGL.Vector2 vec, valuetype MonoMac.OpenGL.Quaternion quat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2" />
        <Parameter Name="quat" Type="MonoMac.OpenGL.Quaternion" />
      </Parameters>
      <Docs>
        <param name="vec">The vector to transform.</param>
        <param name="quat">The quaternion to rotate the vector by.</param>
        <summary>
            Transforms a vector by a quaternion rotation.
            </summary>
        <returns>The result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (ref MonoMac.OpenGL.Vector2 vec, ref MonoMac.OpenGL.Quaternion quat, out MonoMac.OpenGL.Vector2 result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(valuetype MonoMac.OpenGL.Vector2 vec, valuetype MonoMac.OpenGL.Quaternion quat, valuetype MonoMac.OpenGL.Vector2 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
        <Parameter Name="quat" Type="MonoMac.OpenGL.Quaternion&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vec">The vector to transform.</param>
        <param name="quat">The quaternion to rotate the vector by.</param>
        <param name="result">The result of the operation.</param>
        <summary>
            Transforms a vector by a quaternion rotation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnitX">
      <MemberSignature Language="C#" Value="public static readonly MonoMac.OpenGL.Vector2 UnitX;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype MonoMac.OpenGL.Vector2 UnitX" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Defines a unit-length Vector2 that points towards the X-axis.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnitY">
      <MemberSignature Language="C#" Value="public static readonly MonoMac.OpenGL.Vector2 UnitY;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype MonoMac.OpenGL.Vector2 UnitY" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Defines a unit-length Vector2 that points towards the Y-axis.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public float X;" />
      <MemberSignature Language="ILAsm" Value=".field public float32 X" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The X component of the Vector2.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public float Y;" />
      <MemberSignature Language="ILAsm" Value=".field public float32 Y" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The Y component of the Vector2.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static readonly MonoMac.OpenGL.Vector2 Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype MonoMac.OpenGL.Vector2 Zero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Defines a zero-length Vector2.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
