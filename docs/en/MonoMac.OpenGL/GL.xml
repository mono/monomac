<Type Name="GL" FullName="MonoMac.OpenGL.GL">
  <TypeSignature Language="C#" Value="public sealed class GL" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed GL extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>MonoMac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            OpenGL bindings for .NET, implementing the full OpenGL API, including extensions.
            </summary>
    <remarks>
      <para>
            This class contains all OpenGL enums and functions defined in the latest OpenGL specification.
            The official .spec files can be found at: http://opengl.org/registry/.
            </para>
      <para> A valid OpenGL context must be created before calling any OpenGL function.</para>
      <para>
            Use the GL.Load and GL.LoadAll methods to prepare function entry points prior to use. To maintain
            cross-platform compatibility, this must be done for both core and extension functions. The GameWindow
            and the GLControl class will take care of this automatically.
            </para>
      <para>
            You can use the GL.SupportsExtension method to check whether any given category of extension functions
            exists in the current OpenGL context. Keep in mind that different OpenGL contexts may support different
            extensions, and under different entry points. Always check if all required extensions are still supported
            when changing visuals or pixel formats.
            </para>
      <para>
            You may retrieve the entry point for an OpenGL function using the GL.GetDelegate method.
            </para>
    </remarks>
    <see href="http://opengl.org/registry/" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GL ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accum">
      <MemberSignature Language="C#" Value="public static void Accum (MonoMac.OpenGL.AccumOp op, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Accum(valuetype MonoMac.OpenGL.AccumOp op, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="op" Type="MonoMac.OpenGL.AccumOp" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="op">
          <para>
            Specifies the accumulation buffer operation. Symbolic constants GL_ACCUM, GL_LOAD, GL_ADD, GL_MULT, and GL_RETURN are accepted.
            </para>
        </param>
        <param name="value">
          <para>
            Specifies a floating-point value used in the accumulation buffer operation. op determines how value is used.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Operate on the accumulation buffer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveTexture">
      <MemberSignature Language="C#" Value="public static void ActiveTexture (MonoMac.OpenGL.TextureUnit texture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ActiveTexture(valuetype MonoMac.OpenGL.TextureUnit texture) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="MonoMac.OpenGL.TextureUnit" />
      </Parameters>
      <Docs>
        <param name="texture">
          <para>
            Specifies which texture unit to make active. The number of texture units is implementation dependent, but must be at least two. texture must be one of GL_TEXTUREi, where i ranges from 0 (GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1). The initial value is GL_TEXTURE0.
            </para>
        </param>
        <summary>[requires: v1.3]
            Select active texture unit
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlphaFunc">
      <MemberSignature Language="C#" Value="public static void AlphaFunc (MonoMac.OpenGL.AlphaFunction func, float ref);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AlphaFunc(valuetype MonoMac.OpenGL.AlphaFunction func, float32 ref) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="func" Type="MonoMac.OpenGL.AlphaFunction" />
        <Parameter Name="ref" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="func">
          <para>
            Specifies the alpha comparison function. Symbolic constants GL_NEVER, GL_LESS, GL_EQUAL, GL_LEQUAL, GL_GREATER, GL_NOTEQUAL, GL_GEQUAL, and GL_ALWAYS are accepted. The initial value is GL_ALWAYS.
            </para>
        </param>
        <param name="ref">
          <para>
            Specifies the reference value that incoming alpha values are compared to. This value is clamped to the range [0,1], where 0 represents the lowest possible alpha value and 1 the highest possible value. The initial reference value is 0.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the alpha test function
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreTexturesResident">
      <MemberSignature Language="C#" Value="public static bool AreTexturesResident (int n, int[] textures, bool[] residences);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreTexturesResident(int32 n, int32[] textures, bool[] residences) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.Int32[]" />
        <Parameter Name="residences" Type="System.Boolean[]" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of textures to be queried.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array containing the names of the textures to be queried.
            </para>
        </param>
        <param name="residences">
          <para>
            Specifies an array in which the texture residence status is returned. The residence status of a texture named by an element of textures is returned in the corresponding element of residences.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Determine if textures are loaded in texture memory
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayElement">
      <MemberSignature Language="C#" Value="public static void ArrayElement (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ArrayElement(int32 i) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <para>
            Specifies an index into the enabled vertex data arrays.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Render a vertex using the specified vertex array element
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachShader">
      <MemberSignature Language="C#" Value="public static void AttachShader (int program, int shader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AttachShader(int32 program, int32 shader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="shader" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to which a shader object will be attached.
            </para>
        </param>
        <param name="shader">
          <para>
            Specifies the shader object that is to be attached.
            </para>
        </param>
        <summary>[requires: v2.0]
            Attaches a shader object to a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachShader">
      <MemberSignature Language="C#" Value="public static void AttachShader (uint program, uint shader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AttachShader(unsigned int32 program, unsigned int32 shader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="shader" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to which a shader object will be attached.
            </para>
        </param>
        <param name="shader">
          <para>
            Specifies the shader object that is to be attached.
            </para>
        </param>
        <summary>[requires: v2.0]
            Attaches a shader object to a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public static void Begin (MonoMac.OpenGL.BeginMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Begin(valuetype MonoMac.OpenGL.BeginMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies the primitive or primitives that will be created from vertices presented between glBegin and the subsequent glEnd. Ten symbolic constants are accepted: GL_POINTS, GL_LINES, GL_LINE_STRIP, GL_LINE_LOOP, GL_TRIANGLES, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_QUADS, GL_QUAD_STRIP, and GL_POLYGON.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Delimit the vertices of a primitive or a group of like primitives
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginQuery">
      <MemberSignature Language="C#" Value="public static void BeginQuery (MonoMac.OpenGL.QueryTarget target, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginQuery(valuetype MonoMac.OpenGL.QueryTarget target, int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.QueryTarget" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target type of query object established between glBeginQuery and the subsequent glEndQuery. The symbolic constant must be one of GL_SAMPLES_PASSED, GL_ANY_SAMPLES_PASSED, GL_PRIMITIVES_GENERATED, GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN, or GL_TIME_ELAPSED.
            </para>
        </param>
        <param name="id">
          <para>
            Specifies the name of a query object.
            </para>
        </param>
        <summary>[requires: v1.5]
            Delimit the boundaries of a query object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginQuery">
      <MemberSignature Language="C#" Value="public static void BeginQuery (MonoMac.OpenGL.QueryTarget target, uint id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginQuery(valuetype MonoMac.OpenGL.QueryTarget target, unsigned int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.QueryTarget" />
        <Parameter Name="id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target type of query object established between glBeginQuery and the subsequent glEndQuery. The symbolic constant must be one of GL_SAMPLES_PASSED, GL_ANY_SAMPLES_PASSED, GL_PRIMITIVES_GENERATED, GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN, or GL_TIME_ELAPSED.
            </para>
        </param>
        <param name="id">
          <para>
            Specifies the name of a query object.
            </para>
        </param>
        <summary>[requires: v1.5]
            Delimit the boundaries of a query object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindAttribLocation">
      <MemberSignature Language="C#" Value="public static void BindAttribLocation (int program, int index, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BindAttribLocation(int32 program, int32 index, string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the handle of the program object in which the association is to be made.
            </para>
        </param>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be bound.
            </para>
        </param>
        <param name="name">
          <para>
            Specifies a null terminated string containing the name of the vertex shader attribute variable to which index is to be bound.
            </para>
        </param>
        <summary>[requires: v2.0]
            Associates a generic vertex attribute index with a named attribute variable
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindAttribLocation">
      <MemberSignature Language="C#" Value="public static void BindAttribLocation (uint program, uint index, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BindAttribLocation(unsigned int32 program, unsigned int32 index, string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the handle of the program object in which the association is to be made.
            </para>
        </param>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be bound.
            </para>
        </param>
        <param name="name">
          <para>
            Specifies a null terminated string containing the name of the vertex shader attribute variable to which index is to be bound.
            </para>
        </param>
        <summary>[requires: v2.0]
            Associates a generic vertex attribute index with a named attribute variable
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindBuffer">
      <MemberSignature Language="C#" Value="public static void BindBuffer (MonoMac.OpenGL.BufferTarget target, int buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BindBuffer(valuetype MonoMac.OpenGL.BufferTarget target, int32 buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="buffer" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target to which the buffer object is bound. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="buffer">
          <para>
            Specifies the name of a buffer object.
            </para>
        </param>
        <summary>[requires: v1.5]
            Bind a named buffer object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindBuffer">
      <MemberSignature Language="C#" Value="public static void BindBuffer (MonoMac.OpenGL.BufferTarget target, uint buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BindBuffer(valuetype MonoMac.OpenGL.BufferTarget target, unsigned int32 buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="buffer" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target to which the buffer object is bound. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="buffer">
          <para>
            Specifies the name of a buffer object.
            </para>
        </param>
        <summary>[requires: v1.5]
            Bind a named buffer object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindTexture">
      <MemberSignature Language="C#" Value="public static void BindTexture (MonoMac.OpenGL.TextureTarget target, int texture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BindTexture(valuetype MonoMac.OpenGL.TextureTarget target, int32 texture) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="texture" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target to which the texture is bound. Must be either GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, or GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, GL_TEXTURE_CUBE_MAP, GL_TEXTURE_2D_MULTISAMPLE or GL_TEXTURE_2D_MULTISAMPLE_ARRAY.
            </para>
        </param>
        <param name="texture">
          <para>
            Specifies the name of a texture.
            </para>
        </param>
        <summary>[requires: v1.1]
            Bind a named texture to a texturing target
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindTexture">
      <MemberSignature Language="C#" Value="public static void BindTexture (MonoMac.OpenGL.TextureTarget target, uint texture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BindTexture(valuetype MonoMac.OpenGL.TextureTarget target, unsigned int32 texture) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="texture" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target to which the texture is bound. Must be either GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, or GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, GL_TEXTURE_CUBE_MAP, GL_TEXTURE_2D_MULTISAMPLE or GL_TEXTURE_2D_MULTISAMPLE_ARRAY.
            </para>
        </param>
        <param name="texture">
          <para>
            Specifies the name of a texture.
            </para>
        </param>
        <summary>[requires: v1.1]
            Bind a named texture to a texturing target
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitmap">
      <MemberSignature Language="C#" Value="public static void Bitmap (int width, int height, float xorig, float yorig, float xmove, float ymove, ref byte bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Bitmap(int32 width, int32 height, float32 xorig, float32 yorig, float32 xmove, float32 ymove, unsigned int8 bitmap) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="xorig" Type="System.Single" />
        <Parameter Name="yorig" Type="System.Single" />
        <Parameter Name="xmove" Type="System.Single" />
        <Parameter Name="ymove" Type="System.Single" />
        <Parameter Name="bitmap" Type="System.Byte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="width">
          <para>
            Specify the pixel width and height of the bitmap image.
            </para>
        </param>
        <param name="height">To be added.</param>
        <param name="xorig">
          <para>
            Specify the location of the origin in the bitmap image. The origin is measured from the lower left corner of the bitmap, with right and up being the positive axes.
            </para>
        </param>
        <param name="yorig">To be added.</param>
        <param name="xmove">
          <para>
            Specify the x and y offsets to be added to the current raster position after the bitmap is drawn.
            </para>
        </param>
        <param name="ymove">To be added.</param>
        <param name="bitmap">
          <para>
            Specifies the address of the bitmap image.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a bitmap
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitmap">
      <MemberSignature Language="C#" Value="public static void Bitmap (int width, int height, float xorig, float yorig, float xmove, float ymove, byte* bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Bitmap(int32 width, int32 height, float32 xorig, float32 yorig, float32 xmove, float32 ymove, unsigned int8* bitmap) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="xorig" Type="System.Single" />
        <Parameter Name="yorig" Type="System.Single" />
        <Parameter Name="xmove" Type="System.Single" />
        <Parameter Name="ymove" Type="System.Single" />
        <Parameter Name="bitmap" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="width">
          <para>
            Specify the pixel width and height of the bitmap image.
            </para>
        </param>
        <param name="height">To be added.</param>
        <param name="xorig">
          <para>
            Specify the location of the origin in the bitmap image. The origin is measured from the lower left corner of the bitmap, with right and up being the positive axes.
            </para>
        </param>
        <param name="yorig">To be added.</param>
        <param name="xmove">
          <para>
            Specify the x and y offsets to be added to the current raster position after the bitmap is drawn.
            </para>
        </param>
        <param name="ymove">To be added.</param>
        <param name="bitmap">
          <para>
            Specifies the address of the bitmap image.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a bitmap
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitmap">
      <MemberSignature Language="C#" Value="public static void Bitmap (int width, int height, float xorig, float yorig, float xmove, float ymove, byte[] bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Bitmap(int32 width, int32 height, float32 xorig, float32 yorig, float32 xmove, float32 ymove, unsigned int8[] bitmap) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="xorig" Type="System.Single" />
        <Parameter Name="yorig" Type="System.Single" />
        <Parameter Name="xmove" Type="System.Single" />
        <Parameter Name="ymove" Type="System.Single" />
        <Parameter Name="bitmap" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="width">
          <para>
            Specify the pixel width and height of the bitmap image.
            </para>
        </param>
        <param name="height">To be added.</param>
        <param name="xorig">
          <para>
            Specify the location of the origin in the bitmap image. The origin is measured from the lower left corner of the bitmap, with right and up being the positive axes.
            </para>
        </param>
        <param name="yorig">To be added.</param>
        <param name="xmove">
          <para>
            Specify the x and y offsets to be added to the current raster position after the bitmap is drawn.
            </para>
        </param>
        <param name="ymove">To be added.</param>
        <param name="bitmap">
          <para>
            Specifies the address of the bitmap image.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a bitmap
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlendColor">
      <MemberSignature Language="C#" Value="public static void BlendColor (MonoMac.AppKit.NSColor color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BlendColor(class MonoMac.AppKit.NSColor color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="MonoMac.AppKit.NSColor" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlendColor">
      <MemberSignature Language="C#" Value="public static void BlendColor (MonoMac.OpenGL.Color4 color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BlendColor(valuetype MonoMac.OpenGL.Color4 color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="MonoMac.OpenGL.Color4" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlendColor">
      <MemberSignature Language="C#" Value="public static void BlendColor (System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BlendColor(valuetype System.Drawing.Color color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlendColor">
      <MemberSignature Language="C#" Value="public static void BlendColor (float red, float green, float blue, float alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BlendColor(float32 red, float32 green, float32 blue, float32 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Single" />
        <Parameter Name="green" Type="System.Single" />
        <Parameter Name="blue" Type="System.Single" />
        <Parameter Name="alpha" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            specify the components of GL_BLEND_COLOR
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <param name="alpha">To be added.</param>
        <summary>[requires: v1.2]
            Set the blend color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlendEquation">
      <MemberSignature Language="C#" Value="public static void BlendEquation (MonoMac.OpenGL.BlendEquationMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BlendEquation(valuetype MonoMac.OpenGL.BlendEquationMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BlendEquationMode" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            specifies how source and destination colors are combined. It must be GL_FUNC_ADD, GL_FUNC_SUBTRACT, GL_FUNC_REVERSE_SUBTRACT, GL_MIN, GL_MAX.
            </para>
        </param>
        <summary>[requires: v1.2]
            Specify the equation used for both the RGB blend equation and the Alpha blend equation
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlendEquationSeparate">
      <MemberSignature Language="C#" Value="public static void BlendEquationSeparate (MonoMac.OpenGL.BlendEquationMode modeRGB, MonoMac.OpenGL.BlendEquationMode modeAlpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BlendEquationSeparate(valuetype MonoMac.OpenGL.BlendEquationMode modeRGB, valuetype MonoMac.OpenGL.BlendEquationMode modeAlpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modeRGB" Type="MonoMac.OpenGL.BlendEquationMode" />
        <Parameter Name="modeAlpha" Type="MonoMac.OpenGL.BlendEquationMode" />
      </Parameters>
      <Docs>
        <param name="modeRGB">
          <para>
            specifies the RGB blend equation, how the red, green, and blue components of the source and destination colors are combined. It must be GL_FUNC_ADD, GL_FUNC_SUBTRACT, GL_FUNC_REVERSE_SUBTRACT, GL_MIN, GL_MAX.
            </para>
        </param>
        <param name="modeAlpha">
          <para>
            specifies the alpha blend equation, how the alpha component of the source and destination colors are combined. It must be GL_FUNC_ADD, GL_FUNC_SUBTRACT, GL_FUNC_REVERSE_SUBTRACT, GL_MIN, GL_MAX.
            </para>
        </param>
        <summary>[requires: v2.0]
            Set the RGB blend equation and the alpha blend equation separately
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlendFunc">
      <MemberSignature Language="C#" Value="public static void BlendFunc (MonoMac.OpenGL.BlendingFactorSrc sfactor, MonoMac.OpenGL.BlendingFactorDest dfactor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BlendFunc(valuetype MonoMac.OpenGL.BlendingFactorSrc sfactor, valuetype MonoMac.OpenGL.BlendingFactorDest dfactor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sfactor" Type="MonoMac.OpenGL.BlendingFactorSrc" />
        <Parameter Name="dfactor" Type="MonoMac.OpenGL.BlendingFactorDest" />
      </Parameters>
      <Docs>
        <param name="sfactor">
          <para>
            Specifies how the red, green, blue, and alpha source blending factors are computed. The initial value is GL_ONE.
            </para>
        </param>
        <param name="dfactor">
          <para>
            Specifies how the red, green, blue, and alpha destination blending factors are computed. The following symbolic constants are accepted: GL_ZERO, GL_ONE, GL_SRC_COLOR, GL_ONE_MINUS_SRC_COLOR, GL_DST_COLOR, GL_ONE_MINUS_DST_COLOR, GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA, GL_DST_ALPHA, GL_ONE_MINUS_DST_ALPHA. GL_CONSTANT_COLOR, GL_ONE_MINUS_CONSTANT_COLOR, GL_CONSTANT_ALPHA, and GL_ONE_MINUS_CONSTANT_ALPHA. The initial value is GL_ZERO.
            </para>
        </param>
        <summary>[requires: v1.0]
            Specify pixel arithmetic
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlendFuncSeparate">
      <MemberSignature Language="C#" Value="public static void BlendFuncSeparate (MonoMac.OpenGL.BlendingFactorSrc sfactorRGB, MonoMac.OpenGL.BlendingFactorDest dfactorRGB, MonoMac.OpenGL.BlendingFactorSrc sfactorAlpha, MonoMac.OpenGL.BlendingFactorDest dfactorAlpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BlendFuncSeparate(valuetype MonoMac.OpenGL.BlendingFactorSrc sfactorRGB, valuetype MonoMac.OpenGL.BlendingFactorDest dfactorRGB, valuetype MonoMac.OpenGL.BlendingFactorSrc sfactorAlpha, valuetype MonoMac.OpenGL.BlendingFactorDest dfactorAlpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sfactorRGB" Type="MonoMac.OpenGL.BlendingFactorSrc" />
        <Parameter Name="dfactorRGB" Type="MonoMac.OpenGL.BlendingFactorDest" />
        <Parameter Name="sfactorAlpha" Type="MonoMac.OpenGL.BlendingFactorSrc" />
        <Parameter Name="dfactorAlpha" Type="MonoMac.OpenGL.BlendingFactorDest" />
      </Parameters>
      <Docs>
        <param name="sfactorRGB">To be added.</param>
        <param name="dfactorRGB">To be added.</param>
        <param name="sfactorAlpha">To be added.</param>
        <param name="dfactorAlpha">To be added.</param>
        <summary>[requires: v1.4]
            Specify pixel arithmetic for RGB and alpha components separately
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferData">
      <MemberSignature Language="C#" Value="public static void BufferData (MonoMac.OpenGL.BufferTarget target, IntPtr size, IntPtr data, MonoMac.OpenGL.BufferUsageHint usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BufferData(valuetype MonoMac.OpenGL.BufferTarget target, native int size, native int data, valuetype MonoMac.OpenGL.BufferUsageHint usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="size" Type="System.IntPtr" />
        <Parameter Name="data" Type="System.IntPtr" />
        <Parameter Name="usage" Type="MonoMac.OpenGL.BufferUsageHint" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the size in bytes of the buffer object's new data store.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to data that will be copied into the data store for initialization, or NULL if no data is to be copied.
            </para>
        </param>
        <param name="usage">
          <para>
            Specifies the expected usage pattern of the data store. The symbolic constant must be GL_STREAM_DRAW, GL_STREAM_READ, GL_STREAM_COPY, GL_STATIC_DRAW, GL_STATIC_READ, GL_STATIC_COPY, GL_DYNAMIC_DRAW, GL_DYNAMIC_READ, or GL_DYNAMIC_COPY.
            </para>
        </param>
        <summary>[requires: v1.5]
            Creates and initializes a buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferData&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void BufferData&lt;T2&gt; (MonoMac.OpenGL.BufferTarget target, IntPtr size, out T2 data, MonoMac.OpenGL.BufferUsageHint usage) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BufferData&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.BufferTarget target, native int size, !!T2 data, valuetype MonoMac.OpenGL.BufferUsageHint usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="size" Type="System.IntPtr" />
        <Parameter Name="data" Type="T2&amp;" RefType="out" />
        <Parameter Name="usage" Type="MonoMac.OpenGL.BufferUsageHint" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the size in bytes of the buffer object's new data store.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to data that will be copied into the data store for initialization, or NULL if no data is to be copied.
            </para>
        </param>
        <param name="usage">
          <para>
            Specifies the expected usage pattern of the data store. The symbolic constant must be GL_STREAM_DRAW, GL_STREAM_READ, GL_STREAM_COPY, GL_STATIC_DRAW, GL_STATIC_READ, GL_STATIC_COPY, GL_DYNAMIC_DRAW, GL_DYNAMIC_READ, or GL_DYNAMIC_COPY.
            </para>
        </param>
        <summary>[requires: v1.5]
            Creates and initializes a buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferData&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void BufferData&lt;T2&gt; (MonoMac.OpenGL.BufferTarget target, IntPtr size, T2[,,] data, MonoMac.OpenGL.BufferUsageHint usage) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BufferData&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.BufferTarget target, native int size, !!T2[,,] data, valuetype MonoMac.OpenGL.BufferUsageHint usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="size" Type="System.IntPtr" />
        <Parameter Name="data" Type="T2[,,]" />
        <Parameter Name="usage" Type="MonoMac.OpenGL.BufferUsageHint" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the size in bytes of the buffer object's new data store.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to data that will be copied into the data store for initialization, or NULL if no data is to be copied.
            </para>
        </param>
        <param name="usage">
          <para>
            Specifies the expected usage pattern of the data store. The symbolic constant must be GL_STREAM_DRAW, GL_STREAM_READ, GL_STREAM_COPY, GL_STATIC_DRAW, GL_STATIC_READ, GL_STATIC_COPY, GL_DYNAMIC_DRAW, GL_DYNAMIC_READ, or GL_DYNAMIC_COPY.
            </para>
        </param>
        <summary>[requires: v1.5]
            Creates and initializes a buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferData&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void BufferData&lt;T2&gt; (MonoMac.OpenGL.BufferTarget target, IntPtr size, T2[,] data, MonoMac.OpenGL.BufferUsageHint usage) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BufferData&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.BufferTarget target, native int size, !!T2[,] data, valuetype MonoMac.OpenGL.BufferUsageHint usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="size" Type="System.IntPtr" />
        <Parameter Name="data" Type="T2[,]" />
        <Parameter Name="usage" Type="MonoMac.OpenGL.BufferUsageHint" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the size in bytes of the buffer object's new data store.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to data that will be copied into the data store for initialization, or NULL if no data is to be copied.
            </para>
        </param>
        <param name="usage">
          <para>
            Specifies the expected usage pattern of the data store. The symbolic constant must be GL_STREAM_DRAW, GL_STREAM_READ, GL_STREAM_COPY, GL_STATIC_DRAW, GL_STATIC_READ, GL_STATIC_COPY, GL_DYNAMIC_DRAW, GL_DYNAMIC_READ, or GL_DYNAMIC_COPY.
            </para>
        </param>
        <summary>[requires: v1.5]
            Creates and initializes a buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferData&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void BufferData&lt;T2&gt; (MonoMac.OpenGL.BufferTarget target, IntPtr size, T2[] data, MonoMac.OpenGL.BufferUsageHint usage) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BufferData&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.BufferTarget target, native int size, !!T2[] data, valuetype MonoMac.OpenGL.BufferUsageHint usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="size" Type="System.IntPtr" />
        <Parameter Name="data" Type="T2[]" />
        <Parameter Name="usage" Type="MonoMac.OpenGL.BufferUsageHint" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the size in bytes of the buffer object's new data store.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to data that will be copied into the data store for initialization, or NULL if no data is to be copied.
            </para>
        </param>
        <param name="usage">
          <para>
            Specifies the expected usage pattern of the data store. The symbolic constant must be GL_STREAM_DRAW, GL_STREAM_READ, GL_STREAM_COPY, GL_STATIC_DRAW, GL_STATIC_READ, GL_STATIC_COPY, GL_DYNAMIC_DRAW, GL_DYNAMIC_READ, or GL_DYNAMIC_COPY.
            </para>
        </param>
        <summary>[requires: v1.5]
            Creates and initializes a buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferSubData">
      <MemberSignature Language="C#" Value="public static void BufferSubData (MonoMac.OpenGL.BufferTarget target, IntPtr offset, IntPtr size, IntPtr data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BufferSubData(valuetype MonoMac.OpenGL.BufferTarget target, native int offset, native int size, native int data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="offset" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.IntPtr" />
        <Parameter Name="data" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="offset">
          <para>
            Specifies the offset into the buffer object's data store where data replacement will begin, measured in bytes.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the size in bytes of the data store region being replaced.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the new data that will be copied into the data store.
            </para>
        </param>
        <summary>[requires: v1.5]
            Updates a subset of a buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferSubData&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void BufferSubData&lt;T3&gt; (MonoMac.OpenGL.BufferTarget target, IntPtr offset, IntPtr size, out T3 data) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BufferSubData&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BufferTarget target, native int offset, native int size, !!T3 data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="offset" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.IntPtr" />
        <Parameter Name="data" Type="T3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="offset">
          <para>
            Specifies the offset into the buffer object's data store where data replacement will begin, measured in bytes.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the size in bytes of the data store region being replaced.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the new data that will be copied into the data store.
            </para>
        </param>
        <summary>[requires: v1.5]
            Updates a subset of a buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferSubData&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void BufferSubData&lt;T3&gt; (MonoMac.OpenGL.BufferTarget target, IntPtr offset, IntPtr size, T3[,,] data) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BufferSubData&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BufferTarget target, native int offset, native int size, !!T3[,,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="offset" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.IntPtr" />
        <Parameter Name="data" Type="T3[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="offset">
          <para>
            Specifies the offset into the buffer object's data store where data replacement will begin, measured in bytes.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the size in bytes of the data store region being replaced.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the new data that will be copied into the data store.
            </para>
        </param>
        <summary>[requires: v1.5]
            Updates a subset of a buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferSubData&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void BufferSubData&lt;T3&gt; (MonoMac.OpenGL.BufferTarget target, IntPtr offset, IntPtr size, T3[,] data) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BufferSubData&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BufferTarget target, native int offset, native int size, !!T3[,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="offset" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.IntPtr" />
        <Parameter Name="data" Type="T3[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="offset">
          <para>
            Specifies the offset into the buffer object's data store where data replacement will begin, measured in bytes.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the size in bytes of the data store region being replaced.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the new data that will be copied into the data store.
            </para>
        </param>
        <summary>[requires: v1.5]
            Updates a subset of a buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferSubData&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void BufferSubData&lt;T3&gt; (MonoMac.OpenGL.BufferTarget target, IntPtr offset, IntPtr size, T3[] data) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BufferSubData&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BufferTarget target, native int offset, native int size, !!T3[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="offset" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.IntPtr" />
        <Parameter Name="data" Type="T3[]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="offset">
          <para>
            Specifies the offset into the buffer object's data store where data replacement will begin, measured in bytes.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the size in bytes of the data store region being replaced.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the new data that will be copied into the data store.
            </para>
        </param>
        <summary>[requires: v1.5]
            Updates a subset of a buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallList">
      <MemberSignature Language="C#" Value="public static void CallList (int list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CallList(int32 list) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="list">
          <para>
            Specifies the integer name of the display list to be executed.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Execute a display list
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallList">
      <MemberSignature Language="C#" Value="public static void CallList (uint list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CallList(unsigned int32 list) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="list">
          <para>
            Specifies the integer name of the display list to be executed.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Execute a display list
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallLists">
      <MemberSignature Language="C#" Value="public static void CallLists (int n, MonoMac.OpenGL.ListNameType type, IntPtr lists);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CallLists(int32 n, valuetype MonoMac.OpenGL.ListNameType type, native int lists) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ListNameType" />
        <Parameter Name="lists" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of display lists to be executed.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of values in lists. Symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, GL_2_BYTES, GL_3_BYTES, and GL_4_BYTES are accepted.
            </para>
        </param>
        <param name="lists">
          <para>
            Specifies the address of an array of name offsets in the display list. The pointer type is void because the offsets can be bytes, shorts, ints, or floats, depending on the value of type.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Execute a list of display lists
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallLists&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void CallLists&lt;T2&gt; (int n, MonoMac.OpenGL.ListNameType type, out T2 lists) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CallLists&lt;struct .ctor (class System.ValueType) T2&gt;(int32 n, valuetype MonoMac.OpenGL.ListNameType type, !!T2 lists) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ListNameType" />
        <Parameter Name="lists" Type="T2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="n">
          <para>
            Specifies the number of display lists to be executed.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of values in lists. Symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, GL_2_BYTES, GL_3_BYTES, and GL_4_BYTES are accepted.
            </para>
        </param>
        <param name="lists">
          <para>
            Specifies the address of an array of name offsets in the display list. The pointer type is void because the offsets can be bytes, shorts, ints, or floats, depending on the value of type.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Execute a list of display lists
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallLists&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void CallLists&lt;T2&gt; (int n, MonoMac.OpenGL.ListNameType type, T2[,,] lists) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CallLists&lt;struct .ctor (class System.ValueType) T2&gt;(int32 n, valuetype MonoMac.OpenGL.ListNameType type, !!T2[,,] lists) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ListNameType" />
        <Parameter Name="lists" Type="T2[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="n">
          <para>
            Specifies the number of display lists to be executed.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of values in lists. Symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, GL_2_BYTES, GL_3_BYTES, and GL_4_BYTES are accepted.
            </para>
        </param>
        <param name="lists">
          <para>
            Specifies the address of an array of name offsets in the display list. The pointer type is void because the offsets can be bytes, shorts, ints, or floats, depending on the value of type.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Execute a list of display lists
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallLists&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void CallLists&lt;T2&gt; (int n, MonoMac.OpenGL.ListNameType type, T2[,] lists) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CallLists&lt;struct .ctor (class System.ValueType) T2&gt;(int32 n, valuetype MonoMac.OpenGL.ListNameType type, !!T2[,] lists) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ListNameType" />
        <Parameter Name="lists" Type="T2[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="n">
          <para>
            Specifies the number of display lists to be executed.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of values in lists. Symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, GL_2_BYTES, GL_3_BYTES, and GL_4_BYTES are accepted.
            </para>
        </param>
        <param name="lists">
          <para>
            Specifies the address of an array of name offsets in the display list. The pointer type is void because the offsets can be bytes, shorts, ints, or floats, depending on the value of type.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Execute a list of display lists
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallLists&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void CallLists&lt;T2&gt; (int n, MonoMac.OpenGL.ListNameType type, T2[] lists) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CallLists&lt;struct .ctor (class System.ValueType) T2&gt;(int32 n, valuetype MonoMac.OpenGL.ListNameType type, !!T2[] lists) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ListNameType" />
        <Parameter Name="lists" Type="T2[]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="n">
          <para>
            Specifies the number of display lists to be executed.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of values in lists. Symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, GL_2_BYTES, GL_3_BYTES, and GL_4_BYTES are accepted.
            </para>
        </param>
        <param name="lists">
          <para>
            Specifies the address of an array of name offsets in the display list. The pointer type is void because the offsets can be bytes, shorts, ints, or floats, depending on the value of type.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Execute a list of display lists
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear (MonoMac.OpenGL.ClearBufferMask mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear(valuetype MonoMac.OpenGL.ClearBufferMask mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="MonoMac.OpenGL.ClearBufferMask" />
      </Parameters>
      <Docs>
        <param name="mask">
          <para>
            Bitwise OR of masks that indicate the buffers to be cleared. The three masks are GL_COLOR_BUFFER_BIT, GL_DEPTH_BUFFER_BIT, and GL_STENCIL_BUFFER_BIT.
            </para>
        </param>
        <summary>[requires: v1.0]
            Clear buffers to preset values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAccum">
      <MemberSignature Language="C#" Value="public static void ClearAccum (float red, float green, float blue, float alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAccum(float32 red, float32 green, float32 blue, float32 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Single" />
        <Parameter Name="green" Type="System.Single" />
        <Parameter Name="blue" Type="System.Single" />
        <Parameter Name="alpha" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify the red, green, blue, and alpha values used when the accumulation buffer is cleared. The initial values are all 0.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <param name="alpha">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify clear values for the accumulation buffer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColor">
      <MemberSignature Language="C#" Value="public static void ClearColor (MonoMac.AppKit.NSColor color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearColor(class MonoMac.AppKit.NSColor color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="MonoMac.AppKit.NSColor" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColor">
      <MemberSignature Language="C#" Value="public static void ClearColor (MonoMac.OpenGL.Color4 color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearColor(valuetype MonoMac.OpenGL.Color4 color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="MonoMac.OpenGL.Color4" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColor">
      <MemberSignature Language="C#" Value="public static void ClearColor (System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearColor(valuetype System.Drawing.Color color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColor">
      <MemberSignature Language="C#" Value="public static void ClearColor (float red, float green, float blue, float alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearColor(float32 red, float32 green, float32 blue, float32 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Single" />
        <Parameter Name="green" Type="System.Single" />
        <Parameter Name="blue" Type="System.Single" />
        <Parameter Name="alpha" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify the red, green, blue, and alpha values used when the color buffers are cleared. The initial values are all 0.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <param name="alpha">To be added.</param>
        <summary>[requires: v1.0]
            Specify clear values for the color buffers
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearDepth">
      <MemberSignature Language="C#" Value="public static void ClearDepth (double depth);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearDepth(float64 depth) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="depth" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="depth">
          <para>
            Specifies the depth value used when the depth buffer is cleared. The initial value is 1.
            </para>
        </param>
        <summary>[requires: v1.0]
            Specify the clear value for the depth buffer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearIndex">
      <MemberSignature Language="C#" Value="public static void ClearIndex (float c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearIndex(float32 c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="c">
          <para>
            Specifies the index used when the color index buffers are cleared. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the clear value for the color index buffers
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearStencil">
      <MemberSignature Language="C#" Value="public static void ClearStencil (int s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearStencil(int32 s) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <para>
            Specifies the index used when the stencil buffer is cleared. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.0]
            Specify the clear value for the stencil buffer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientActiveTexture">
      <MemberSignature Language="C#" Value="public static void ClientActiveTexture (MonoMac.OpenGL.TextureUnit texture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClientActiveTexture(valuetype MonoMac.OpenGL.TextureUnit texture) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="MonoMac.OpenGL.TextureUnit" />
      </Parameters>
      <Docs>
        <param name="texture">
          <para>
            Specifies which texture unit to make active. The number of texture units is implementation dependent, but must be at least two. texture must be one of GL_TEXTURE, where i ranges from 0 to the value of GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value. The initial value is GL_TEXTURE0.
            </para>
        </param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Select active texture unit
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipPlane">
      <MemberSignature Language="C#" Value="public static void ClipPlane (MonoMac.OpenGL.ClipPlaneName plane, ref double equation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClipPlane(valuetype MonoMac.OpenGL.ClipPlaneName plane, float64 equation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plane" Type="MonoMac.OpenGL.ClipPlaneName" />
        <Parameter Name="equation" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="plane">
          <para>
            Specifies which clipping plane is being positioned. Symbolic names of the form GL_CLIP_PLANEi, where i is an integer between 0 and GL_MAX_CLIP_PLANES - 1, are accepted.
            </para>
        </param>
        <param name="equation">
          <para>
            Specifies the address of an array of four double-precision floating-point values. These values are interpreted as a plane equation.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a plane against which all geometry is clipped
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipPlane">
      <MemberSignature Language="C#" Value="public static void ClipPlane (MonoMac.OpenGL.ClipPlaneName plane, double* equation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClipPlane(valuetype MonoMac.OpenGL.ClipPlaneName plane, float64* equation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plane" Type="MonoMac.OpenGL.ClipPlaneName" />
        <Parameter Name="equation" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="plane">
          <para>
            Specifies which clipping plane is being positioned. Symbolic names of the form GL_CLIP_PLANEi, where i is an integer between 0 and GL_MAX_CLIP_PLANES - 1, are accepted.
            </para>
        </param>
        <param name="equation">
          <para>
            Specifies the address of an array of four double-precision floating-point values. These values are interpreted as a plane equation.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a plane against which all geometry is clipped
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipPlane">
      <MemberSignature Language="C#" Value="public static void ClipPlane (MonoMac.OpenGL.ClipPlaneName plane, double[] equation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClipPlane(valuetype MonoMac.OpenGL.ClipPlaneName plane, float64[] equation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plane" Type="MonoMac.OpenGL.ClipPlaneName" />
        <Parameter Name="equation" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="plane">
          <para>
            Specifies which clipping plane is being positioned. Symbolic names of the form GL_CLIP_PLANEi, where i is an integer between 0 and GL_MAX_CLIP_PLANES - 1, are accepted.
            </para>
        </param>
        <param name="equation">
          <para>
            Specifies the address of an array of four double-precision floating-point values. These values are interpreted as a plane equation.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a plane against which all geometry is clipped
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (MonoMac.AppKit.NSColor color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(class MonoMac.AppKit.NSColor color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="MonoMac.AppKit.NSColor" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (MonoMac.OpenGL.Vector3 color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(valuetype MonoMac.OpenGL.Vector3 color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="MonoMac.OpenGL.Vector3" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (ref byte v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(unsigned int8 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Byte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (byte* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(unsigned int8* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (byte[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(unsigned int8[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(valuetype System.Drawing.Color color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (ref sbyte v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(int8 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.SByte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (sbyte* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(int8* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (sbyte[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(int8[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.SByte[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (ref ushort v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(unsigned int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (ushort* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(unsigned int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (ushort[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(unsigned int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (ref uint v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(unsigned int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (uint* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(unsigned int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (uint[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(unsigned int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (byte red, byte green, byte blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(unsigned int8 red, unsigned int8 green, unsigned int8 blue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Byte" />
        <Parameter Name="green" Type="System.Byte" />
        <Parameter Name="blue" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (double red, double green, double blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(float64 red, float64 green, float64 blue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Double" />
        <Parameter Name="green" Type="System.Double" />
        <Parameter Name="blue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (short red, short green, short blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(int16 red, int16 green, int16 blue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Int16" />
        <Parameter Name="green" Type="System.Int16" />
        <Parameter Name="blue" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (int red, int green, int blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(int32 red, int32 green, int32 blue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Int32" />
        <Parameter Name="green" Type="System.Int32" />
        <Parameter Name="blue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (sbyte red, sbyte green, sbyte blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(int8 red, int8 green, int8 blue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.SByte" />
        <Parameter Name="green" Type="System.SByte" />
        <Parameter Name="blue" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (float red, float green, float blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(float32 red, float32 green, float32 blue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Single" />
        <Parameter Name="green" Type="System.Single" />
        <Parameter Name="blue" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (ushort red, ushort green, ushort blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(unsigned int16 red, unsigned int16 green, unsigned int16 blue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.UInt16" />
        <Parameter Name="green" Type="System.UInt16" />
        <Parameter Name="blue" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color3">
      <MemberSignature Language="C#" Value="public static void Color3 (uint red, uint green, uint blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color3(unsigned int32 red, unsigned int32 green, unsigned int32 blue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.UInt32" />
        <Parameter Name="green" Type="System.UInt32" />
        <Parameter Name="blue" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (MonoMac.AppKit.NSColor color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(class MonoMac.AppKit.NSColor color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="MonoMac.AppKit.NSColor" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (MonoMac.OpenGL.Color4 color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(valuetype MonoMac.OpenGL.Color4 color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="MonoMac.OpenGL.Color4" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (MonoMac.OpenGL.Vector4 color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(valuetype MonoMac.OpenGL.Vector4 color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="MonoMac.OpenGL.Vector4" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (ref byte v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(unsigned int8 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Byte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (byte* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(unsigned int8* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (byte[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(unsigned int8[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(valuetype System.Drawing.Color color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (ref sbyte v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(int8 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.SByte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (sbyte* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(int8* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (sbyte[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(int8[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.SByte[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (ref ushort v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(unsigned int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (ushort* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(unsigned int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (ushort[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(unsigned int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (ref uint v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(unsigned int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (uint* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(unsigned int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (uint[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(unsigned int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (byte red, byte green, byte blue, byte alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(unsigned int8 red, unsigned int8 green, unsigned int8 blue, unsigned int8 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Byte" />
        <Parameter Name="green" Type="System.Byte" />
        <Parameter Name="blue" Type="System.Byte" />
        <Parameter Name="alpha" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <param name="alpha">
          <para>
            Specifies a new alpha value for the current color. Included only in the four-argument glColor4 commands.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (double red, double green, double blue, double alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(float64 red, float64 green, float64 blue, float64 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Double" />
        <Parameter Name="green" Type="System.Double" />
        <Parameter Name="blue" Type="System.Double" />
        <Parameter Name="alpha" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <param name="alpha">
          <para>
            Specifies a new alpha value for the current color. Included only in the four-argument glColor4 commands.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (short red, short green, short blue, short alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(int16 red, int16 green, int16 blue, int16 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Int16" />
        <Parameter Name="green" Type="System.Int16" />
        <Parameter Name="blue" Type="System.Int16" />
        <Parameter Name="alpha" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <param name="alpha">
          <para>
            Specifies a new alpha value for the current color. Included only in the four-argument glColor4 commands.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (int red, int green, int blue, int alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(int32 red, int32 green, int32 blue, int32 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Int32" />
        <Parameter Name="green" Type="System.Int32" />
        <Parameter Name="blue" Type="System.Int32" />
        <Parameter Name="alpha" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <param name="alpha">
          <para>
            Specifies a new alpha value for the current color. Included only in the four-argument glColor4 commands.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (sbyte red, sbyte green, sbyte blue, sbyte alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(int8 red, int8 green, int8 blue, int8 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.SByte" />
        <Parameter Name="green" Type="System.SByte" />
        <Parameter Name="blue" Type="System.SByte" />
        <Parameter Name="alpha" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <param name="alpha">
          <para>
            Specifies a new alpha value for the current color. Included only in the four-argument glColor4 commands.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (float red, float green, float blue, float alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(float32 red, float32 green, float32 blue, float32 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Single" />
        <Parameter Name="green" Type="System.Single" />
        <Parameter Name="blue" Type="System.Single" />
        <Parameter Name="alpha" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <param name="alpha">
          <para>
            Specifies a new alpha value for the current color. Included only in the four-argument glColor4 commands.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (ushort red, ushort green, ushort blue, ushort alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(unsigned int16 red, unsigned int16 green, unsigned int16 blue, unsigned int16 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.UInt16" />
        <Parameter Name="green" Type="System.UInt16" />
        <Parameter Name="blue" Type="System.UInt16" />
        <Parameter Name="alpha" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <param name="alpha">
          <para>
            Specifies a new alpha value for the current color. Included only in the four-argument glColor4 commands.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color4">
      <MemberSignature Language="C#" Value="public static void Color4 (uint red, uint green, uint blue, uint alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Color4(unsigned int32 red, unsigned int32 green, unsigned int32 blue, unsigned int32 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.UInt32" />
        <Parameter Name="green" Type="System.UInt32" />
        <Parameter Name="blue" Type="System.UInt32" />
        <Parameter Name="alpha" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <param name="alpha">
          <para>
            Specifies a new alpha value for the current color. Included only in the four-argument glColor4 commands.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorMask">
      <MemberSignature Language="C#" Value="public static void ColorMask (bool red, bool green, bool blue, bool alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorMask(bool red, bool green, bool blue, bool alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Boolean" />
        <Parameter Name="green" Type="System.Boolean" />
        <Parameter Name="blue" Type="System.Boolean" />
        <Parameter Name="alpha" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify whether red, green, blue, and alpha can or cannot be written into the frame buffer. The initial values are all GL_TRUE, indicating that the color components can be written.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <param name="alpha">To be added.</param>
        <summary>[requires: v1.0]
            Enable and disable writing of frame buffer color components
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorMaterial">
      <MemberSignature Language="C#" Value="public static void ColorMaterial (MonoMac.OpenGL.MaterialFace face, MonoMac.OpenGL.ColorMaterialParameter mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorMaterial(valuetype MonoMac.OpenGL.MaterialFace face, valuetype MonoMac.OpenGL.ColorMaterialParameter mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.MaterialFace" />
        <Parameter Name="mode" Type="MonoMac.OpenGL.ColorMaterialParameter" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies whether front, back, or both front and back material parameters should track the current color. Accepted values are GL_FRONT, GL_BACK, and GL_FRONT_AND_BACK. The initial value is GL_FRONT_AND_BACK.
            </para>
        </param>
        <param name="mode">
          <para>
            Specifies which of several material parameters track the current color. Accepted values are GL_EMISSION, GL_AMBIENT, GL_DIFFUSE, GL_SPECULAR, and GL_AMBIENT_AND_DIFFUSE. The initial value is GL_AMBIENT_AND_DIFFUSE.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Cause a material color to track the current color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorPointer">
      <MemberSignature Language="C#" Value="public static void ColorPointer (int size, MonoMac.OpenGL.ColorPointerType type, int stride, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorPointer(int32 size, valuetype MonoMac.OpenGL.ColorPointerType type, int32 stride, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ColorPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <param name="type">To be added.</param>
        <param name="stride">To be added.</param>
        <param name="offset">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorPointer">
      <MemberSignature Language="C#" Value="public static void ColorPointer (int size, MonoMac.OpenGL.ColorPointerType type, int stride, IntPtr pointer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorPointer(int32 size, valuetype MonoMac.OpenGL.ColorPointerType type, int32 stride, native int pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ColorPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="size">
          <para>
            Specifies the number of components per color. Must be 3 or 4. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each color component in the array. Symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, and GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive colors. If stride is 0, the colors are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first component of the first color element in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of colors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorPointer&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void ColorPointer&lt;T3&gt; (int size, MonoMac.OpenGL.ColorPointerType type, int stride, out T3 pointer) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorPointer&lt;struct .ctor (class System.ValueType) T3&gt;(int32 size, valuetype MonoMac.OpenGL.ColorPointerType type, int32 stride, !!T3 pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ColorPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="size">
          <para>
            Specifies the number of components per color. Must be 3 or 4. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each color component in the array. Symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, and GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive colors. If stride is 0, the colors are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first component of the first color element in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of colors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorPointer&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void ColorPointer&lt;T3&gt; (int size, MonoMac.OpenGL.ColorPointerType type, int stride, T3[,,] pointer) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorPointer&lt;struct .ctor (class System.ValueType) T3&gt;(int32 size, valuetype MonoMac.OpenGL.ColorPointerType type, int32 stride, !!T3[,,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ColorPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T3[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="size">
          <para>
            Specifies the number of components per color. Must be 3 or 4. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each color component in the array. Symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, and GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive colors. If stride is 0, the colors are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first component of the first color element in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of colors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorPointer&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void ColorPointer&lt;T3&gt; (int size, MonoMac.OpenGL.ColorPointerType type, int stride, T3[,] pointer) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorPointer&lt;struct .ctor (class System.ValueType) T3&gt;(int32 size, valuetype MonoMac.OpenGL.ColorPointerType type, int32 stride, !!T3[,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ColorPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T3[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="size">
          <para>
            Specifies the number of components per color. Must be 3 or 4. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each color component in the array. Symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, and GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive colors. If stride is 0, the colors are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first component of the first color element in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of colors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorPointer&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void ColorPointer&lt;T3&gt; (int size, MonoMac.OpenGL.ColorPointerType type, int stride, T3[] pointer) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorPointer&lt;struct .ctor (class System.ValueType) T3&gt;(int32 size, valuetype MonoMac.OpenGL.ColorPointerType type, int32 stride, !!T3[] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ColorPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T3[]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="size">
          <para>
            Specifies the number of components per color. Must be 3 or 4. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each color component in the array. Symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, and GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive colors. If stride is 0, the colors are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first component of the first color element in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of colors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorSubTable">
      <MemberSignature Language="C#" Value="public static void ColorSubTable (MonoMac.OpenGL.ColorTableTarget target, int start, int count, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorSubTable(valuetype MonoMac.OpenGL.ColorTableTarget target, int32 start, int32 count, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="data" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be one of GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="start">
          <para>
            The starting index of the portion of the color table to be replaced.
            </para>
        </param>
        <param name="count">
          <para>
            The number of table entries to replace.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. The allowable values are GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="data">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to replace the specified region of the color table.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Respecify a portion of a color table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorSubTable&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void ColorSubTable&lt;T5&gt; (MonoMac.OpenGL.ColorTableTarget target, int start, int count, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T5 data) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorSubTable&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.ColorTableTarget target, int32 start, int32 count, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T5 data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="data" Type="T5&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            Must be one of GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="start">
          <para>
            The starting index of the portion of the color table to be replaced.
            </para>
        </param>
        <param name="count">
          <para>
            The number of table entries to replace.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. The allowable values are GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="data">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to replace the specified region of the color table.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Respecify a portion of a color table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorSubTable&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void ColorSubTable&lt;T5&gt; (MonoMac.OpenGL.ColorTableTarget target, int start, int count, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T5[,,] data) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorSubTable&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.ColorTableTarget target, int32 start, int32 count, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T5[,,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="data" Type="T5[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            Must be one of GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="start">
          <para>
            The starting index of the portion of the color table to be replaced.
            </para>
        </param>
        <param name="count">
          <para>
            The number of table entries to replace.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. The allowable values are GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="data">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to replace the specified region of the color table.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Respecify a portion of a color table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorSubTable&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void ColorSubTable&lt;T5&gt; (MonoMac.OpenGL.ColorTableTarget target, int start, int count, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T5[,] data) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorSubTable&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.ColorTableTarget target, int32 start, int32 count, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T5[,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="data" Type="T5[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            Must be one of GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="start">
          <para>
            The starting index of the portion of the color table to be replaced.
            </para>
        </param>
        <param name="count">
          <para>
            The number of table entries to replace.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. The allowable values are GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="data">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to replace the specified region of the color table.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Respecify a portion of a color table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorSubTable&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void ColorSubTable&lt;T5&gt; (MonoMac.OpenGL.ColorTableTarget target, int start, int count, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T5[] data) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorSubTable&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.ColorTableTarget target, int32 start, int32 count, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T5[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="data" Type="T5[]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            Must be one of GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="start">
          <para>
            The starting index of the portion of the color table to be replaced.
            </para>
        </param>
        <param name="count">
          <para>
            The number of table entries to replace.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. The allowable values are GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="data">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to replace the specified region of the color table.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Respecify a portion of a color table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorTable">
      <MemberSignature Language="C#" Value="public static void ColorTable (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorTable(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int table) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="table" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be one of GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, GL_POST_COLOR_MATRIX_COLOR_TABLE, GL_PROXY_COLOR_TABLE, GL_PROXY_POST_CONVOLUTION_COLOR_TABLE, or GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the color table. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, and GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The number of entries in the color lookup table specified by data.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. The allowable values are GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="table">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a color lookup table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorTable&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void ColorTable&lt;T5&gt; (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T5 table) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorTable&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T5 table) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="table" Type="T5&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            Must be one of GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, GL_POST_COLOR_MATRIX_COLOR_TABLE, GL_PROXY_COLOR_TABLE, GL_PROXY_POST_CONVOLUTION_COLOR_TABLE, or GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the color table. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, and GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The number of entries in the color lookup table specified by data.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. The allowable values are GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="table">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a color lookup table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorTable&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void ColorTable&lt;T5&gt; (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T5[,,] table) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorTable&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T5[,,] table) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="table" Type="T5[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            Must be one of GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, GL_POST_COLOR_MATRIX_COLOR_TABLE, GL_PROXY_COLOR_TABLE, GL_PROXY_POST_CONVOLUTION_COLOR_TABLE, or GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the color table. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, and GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The number of entries in the color lookup table specified by data.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. The allowable values are GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="table">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a color lookup table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorTable&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void ColorTable&lt;T5&gt; (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T5[,] table) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorTable&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T5[,] table) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="table" Type="T5[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            Must be one of GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, GL_POST_COLOR_MATRIX_COLOR_TABLE, GL_PROXY_COLOR_TABLE, GL_PROXY_POST_CONVOLUTION_COLOR_TABLE, or GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the color table. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, and GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The number of entries in the color lookup table specified by data.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. The allowable values are GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="table">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a color lookup table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorTable&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void ColorTable&lt;T5&gt; (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T5[] table) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorTable&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T5[] table) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="table" Type="T5[]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            Must be one of GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, GL_POST_COLOR_MATRIX_COLOR_TABLE, GL_PROXY_COLOR_TABLE, GL_PROXY_POST_CONVOLUTION_COLOR_TABLE, or GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the color table. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, and GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The number of entries in the color lookup table specified by data.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. The allowable values are GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="table">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a color lookup table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorTableParameter">
      <MemberSignature Language="C#" Value="public static void ColorTableParameter (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.ColorTableParameterPName pname, ref int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorTableParameter(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.ColorTableParameterPName pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ColorTableParameterPName" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target color table. Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="pname">
          <para>
            The symbolic name of a texture color lookup table parameter. Must be one of GL_COLOR_TABLE_SCALE or GL_COLOR_TABLE_BIAS.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to an array where the values of the parameters are stored.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Set color lookup table parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorTableParameter">
      <MemberSignature Language="C#" Value="public static void ColorTableParameter (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.ColorTableParameterPName pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorTableParameter(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.ColorTableParameterPName pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ColorTableParameterPName" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target color table. Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="pname">
          <para>
            The symbolic name of a texture color lookup table parameter. Must be one of GL_COLOR_TABLE_SCALE or GL_COLOR_TABLE_BIAS.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to an array where the values of the parameters are stored.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Set color lookup table parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorTableParameter">
      <MemberSignature Language="C#" Value="public static void ColorTableParameter (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.ColorTableParameterPName pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorTableParameter(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.ColorTableParameterPName pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ColorTableParameterPName" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target color table. Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="pname">
          <para>
            The symbolic name of a texture color lookup table parameter. Must be one of GL_COLOR_TABLE_SCALE or GL_COLOR_TABLE_BIAS.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to an array where the values of the parameters are stored.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Set color lookup table parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorTableParameter">
      <MemberSignature Language="C#" Value="public static void ColorTableParameter (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.ColorTableParameterPName pname, ref float params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorTableParameter(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.ColorTableParameterPName pname, float32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ColorTableParameterPName" />
        <Parameter Name="params" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target color table. Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="pname">
          <para>
            The symbolic name of a texture color lookup table parameter. Must be one of GL_COLOR_TABLE_SCALE or GL_COLOR_TABLE_BIAS.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to an array where the values of the parameters are stored.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Set color lookup table parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorTableParameter">
      <MemberSignature Language="C#" Value="public static void ColorTableParameter (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.ColorTableParameterPName pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorTableParameter(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.ColorTableParameterPName pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ColorTableParameterPName" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target color table. Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="pname">
          <para>
            The symbolic name of a texture color lookup table parameter. Must be one of GL_COLOR_TABLE_SCALE or GL_COLOR_TABLE_BIAS.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to an array where the values of the parameters are stored.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Set color lookup table parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorTableParameter">
      <MemberSignature Language="C#" Value="public static void ColorTableParameter (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.ColorTableParameterPName pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ColorTableParameter(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.ColorTableParameterPName pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ColorTableParameterPName" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target color table. Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="pname">
          <para>
            The symbolic name of a texture color lookup table parameter. Must be one of GL_COLOR_TABLE_SCALE or GL_COLOR_TABLE_BIAS.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to an array where the values of the parameters are stored.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Set color lookup table parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileShader">
      <MemberSignature Language="C#" Value="public static void CompileShader (int shader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompileShader(int32 shader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object to be compiled.
            </para>
        </param>
        <summary>[requires: v2.0]
            Compiles a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileShader">
      <MemberSignature Language="C#" Value="public static void CompileShader (uint shader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompileShader(unsigned int32 shader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object to be compiled.
            </para>
        </param>
        <summary>[requires: v2.0]
            Compiles a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexImage1D">
      <MemberSignature Language="C#" Value="public static void CompressedTexImage1D (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int border, int imageSize, IntPtr data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexImage1D(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 border, int32 imageSize, native int data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D or GL_PROXY_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support texture images that are at least 64 texels wide. The height of the 1D texture image is 1.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a one-dimensional texture image in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexImage1D&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexImage1D&lt;T6&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int border, int imageSize, out T6 data) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexImage1D&lt;struct .ctor (class System.ValueType) T6&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 border, int32 imageSize, !!T6 data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T6&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D or GL_PROXY_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support texture images that are at least 64 texels wide. The height of the 1D texture image is 1.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a one-dimensional texture image in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexImage1D&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexImage1D&lt;T6&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int border, int imageSize, T6[,,] data) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexImage1D&lt;struct .ctor (class System.ValueType) T6&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 border, int32 imageSize, !!T6[,,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T6[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D or GL_PROXY_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support texture images that are at least 64 texels wide. The height of the 1D texture image is 1.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a one-dimensional texture image in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexImage1D&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexImage1D&lt;T6&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int border, int imageSize, T6[,] data) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexImage1D&lt;struct .ctor (class System.ValueType) T6&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 border, int32 imageSize, !!T6[,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T6[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D or GL_PROXY_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support texture images that are at least 64 texels wide. The height of the 1D texture image is 1.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a one-dimensional texture image in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexImage1D&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexImage1D&lt;T6&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int border, int imageSize, T6[] data) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexImage1D&lt;struct .ctor (class System.ValueType) T6&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 border, int32 imageSize, !!T6[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T6[]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D or GL_PROXY_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support texture images that are at least 64 texels wide. The height of the 1D texture image is 1.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a one-dimensional texture image in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexImage2D">
      <MemberSignature Language="C#" Value="public static void CompressedTexImage2D (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int border, int imageSize, IntPtr data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexImage2D(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 border, int32 imageSize, native int data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_PROXY_TEXTURE_2D, GL_TEXTURE_1D_ARRAY, GL_PROXY_TEXTURE_1D_ARRAY, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, or GL_PROXY_TEXTURE_CUBE_MAP.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support 2D texture images that are at least 64 texels wide and cube-mapped texture images that are at least 16 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image. All implementations support 2D texture images that are at least 64 texels high and cube-mapped texture images that are at least 16 texels high.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a two-dimensional texture image in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexImage2D&lt;T7&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexImage2D&lt;T7&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int border, int imageSize, out T7 data) where T7 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexImage2D&lt;struct .ctor (class System.ValueType) T7&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 border, int32 imageSize, !!T7 data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T7">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T7&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T7">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_PROXY_TEXTURE_2D, GL_TEXTURE_1D_ARRAY, GL_PROXY_TEXTURE_1D_ARRAY, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, or GL_PROXY_TEXTURE_CUBE_MAP.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support 2D texture images that are at least 64 texels wide and cube-mapped texture images that are at least 16 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image. All implementations support 2D texture images that are at least 64 texels high and cube-mapped texture images that are at least 16 texels high.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a two-dimensional texture image in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexImage2D&lt;T7&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexImage2D&lt;T7&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int border, int imageSize, T7[,,] data) where T7 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexImage2D&lt;struct .ctor (class System.ValueType) T7&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 border, int32 imageSize, !!T7[,,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T7">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T7[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T7">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_PROXY_TEXTURE_2D, GL_TEXTURE_1D_ARRAY, GL_PROXY_TEXTURE_1D_ARRAY, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, or GL_PROXY_TEXTURE_CUBE_MAP.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support 2D texture images that are at least 64 texels wide and cube-mapped texture images that are at least 16 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image. All implementations support 2D texture images that are at least 64 texels high and cube-mapped texture images that are at least 16 texels high.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a two-dimensional texture image in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexImage2D&lt;T7&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexImage2D&lt;T7&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int border, int imageSize, T7[,] data) where T7 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexImage2D&lt;struct .ctor (class System.ValueType) T7&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 border, int32 imageSize, !!T7[,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T7">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T7[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T7">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_PROXY_TEXTURE_2D, GL_TEXTURE_1D_ARRAY, GL_PROXY_TEXTURE_1D_ARRAY, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, or GL_PROXY_TEXTURE_CUBE_MAP.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support 2D texture images that are at least 64 texels wide and cube-mapped texture images that are at least 16 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image. All implementations support 2D texture images that are at least 64 texels high and cube-mapped texture images that are at least 16 texels high.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a two-dimensional texture image in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexImage2D&lt;T7&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexImage2D&lt;T7&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int border, int imageSize, T7[] data) where T7 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexImage2D&lt;struct .ctor (class System.ValueType) T7&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 border, int32 imageSize, !!T7[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T7">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T7[]" />
      </Parameters>
      <Docs>
        <typeparam name="T7">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_PROXY_TEXTURE_2D, GL_TEXTURE_1D_ARRAY, GL_PROXY_TEXTURE_1D_ARRAY, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, or GL_PROXY_TEXTURE_CUBE_MAP.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support 2D texture images that are at least 64 texels wide and cube-mapped texture images that are at least 16 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image. All implementations support 2D texture images that are at least 64 texels high and cube-mapped texture images that are at least 16 texels high.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a two-dimensional texture image in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexImage3D">
      <MemberSignature Language="C#" Value="public static void CompressedTexImage3D (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int depth, int border, int imageSize, IntPtr data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexImage3D(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 depth, int32 border, int32 imageSize, native int data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_3D, GL_PROXY_TEXTURE_3D, GL_TEXTURE_2D_ARRAY or GL_PROXY_TEXTURE_2D_ARRAY.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support 3D texture images that are at least 16 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image. All implementations support 3D texture images that are at least 16 texels high.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture image. All implementations support 3D texture images that are at least 16 texels deep.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a three-dimensional texture image in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexImage3D&lt;T8&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexImage3D&lt;T8&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int depth, int border, int imageSize, out T8 data) where T8 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexImage3D&lt;struct .ctor (class System.ValueType) T8&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 depth, int32 border, int32 imageSize, !!T8 data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T8">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T8&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T8">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_3D, GL_PROXY_TEXTURE_3D, GL_TEXTURE_2D_ARRAY or GL_PROXY_TEXTURE_2D_ARRAY.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support 3D texture images that are at least 16 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image. All implementations support 3D texture images that are at least 16 texels high.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture image. All implementations support 3D texture images that are at least 16 texels deep.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a three-dimensional texture image in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexImage3D&lt;T8&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexImage3D&lt;T8&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int depth, int border, int imageSize, T8[,,] data) where T8 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexImage3D&lt;struct .ctor (class System.ValueType) T8&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 depth, int32 border, int32 imageSize, !!T8[,,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T8">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T8[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T8">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_3D, GL_PROXY_TEXTURE_3D, GL_TEXTURE_2D_ARRAY or GL_PROXY_TEXTURE_2D_ARRAY.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support 3D texture images that are at least 16 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image. All implementations support 3D texture images that are at least 16 texels high.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture image. All implementations support 3D texture images that are at least 16 texels deep.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a three-dimensional texture image in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexImage3D&lt;T8&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexImage3D&lt;T8&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int depth, int border, int imageSize, T8[,] data) where T8 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexImage3D&lt;struct .ctor (class System.ValueType) T8&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 depth, int32 border, int32 imageSize, !!T8[,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T8">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T8[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T8">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_3D, GL_PROXY_TEXTURE_3D, GL_TEXTURE_2D_ARRAY or GL_PROXY_TEXTURE_2D_ARRAY.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support 3D texture images that are at least 16 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image. All implementations support 3D texture images that are at least 16 texels high.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture image. All implementations support 3D texture images that are at least 16 texels deep.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a three-dimensional texture image in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexImage3D&lt;T8&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexImage3D&lt;T8&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int depth, int border, int imageSize, T8[] data) where T8 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexImage3D&lt;struct .ctor (class System.ValueType) T8&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 depth, int32 border, int32 imageSize, !!T8[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T8">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T8[]" />
      </Parameters>
      <Docs>
        <typeparam name="T8">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_3D, GL_PROXY_TEXTURE_3D, GL_TEXTURE_2D_ARRAY or GL_PROXY_TEXTURE_2D_ARRAY.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support 3D texture images that are at least 16 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image. All implementations support 3D texture images that are at least 16 texels high.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture image. All implementations support 3D texture images that are at least 16 texels deep.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a three-dimensional texture image in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexSubImage1D">
      <MemberSignature Language="C#" Value="public static void CompressedTexSubImage1D (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int width, MonoMac.OpenGL.PixelFormat format, int imageSize, IntPtr data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexSubImage1D(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, int32 imageSize, native int data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a one-dimensional texture subimage in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexSubImage1D&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexSubImage1D&lt;T6&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int width, MonoMac.OpenGL.PixelFormat format, int imageSize, out T6 data) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexSubImage1D&lt;struct .ctor (class System.ValueType) T6&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, int32 imageSize, !!T6 data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T6&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a one-dimensional texture subimage in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexSubImage1D&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexSubImage1D&lt;T6&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int width, MonoMac.OpenGL.PixelFormat format, int imageSize, T6[,,] data) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexSubImage1D&lt;struct .ctor (class System.ValueType) T6&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, int32 imageSize, !!T6[,,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T6[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a one-dimensional texture subimage in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexSubImage1D&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexSubImage1D&lt;T6&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int width, MonoMac.OpenGL.PixelFormat format, int imageSize, T6[,] data) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexSubImage1D&lt;struct .ctor (class System.ValueType) T6&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, int32 imageSize, !!T6[,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T6[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a one-dimensional texture subimage in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexSubImage1D&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexSubImage1D&lt;T6&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int width, MonoMac.OpenGL.PixelFormat format, int imageSize, T6[] data) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexSubImage1D&lt;struct .ctor (class System.ValueType) T6&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, int32 imageSize, !!T6[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T6[]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a one-dimensional texture subimage in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexSubImage2D">
      <MemberSignature Language="C#" Value="public static void CompressedTexSubImage2D (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int width, int height, MonoMac.OpenGL.PixelFormat format, int imageSize, IntPtr data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexSubImage2D(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, int32 imageSize, native int data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, or GL_TEXTURE_CUBE_MAP_NEGATIVE_Z.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a two-dimensional texture subimage in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexSubImage2D&lt;T8&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexSubImage2D&lt;T8&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int width, int height, MonoMac.OpenGL.PixelFormat format, int imageSize, out T8 data) where T8 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexSubImage2D&lt;struct .ctor (class System.ValueType) T8&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, int32 imageSize, !!T8 data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T8">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T8&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T8">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, or GL_TEXTURE_CUBE_MAP_NEGATIVE_Z.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a two-dimensional texture subimage in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexSubImage2D&lt;T8&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexSubImage2D&lt;T8&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int width, int height, MonoMac.OpenGL.PixelFormat format, int imageSize, T8[,,] data) where T8 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexSubImage2D&lt;struct .ctor (class System.ValueType) T8&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, int32 imageSize, !!T8[,,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T8">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T8[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T8">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, or GL_TEXTURE_CUBE_MAP_NEGATIVE_Z.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a two-dimensional texture subimage in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexSubImage2D&lt;T8&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexSubImage2D&lt;T8&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int width, int height, MonoMac.OpenGL.PixelFormat format, int imageSize, T8[,] data) where T8 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexSubImage2D&lt;struct .ctor (class System.ValueType) T8&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, int32 imageSize, !!T8[,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T8">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T8[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T8">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, or GL_TEXTURE_CUBE_MAP_NEGATIVE_Z.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a two-dimensional texture subimage in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexSubImage2D&lt;T8&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexSubImage2D&lt;T8&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int width, int height, MonoMac.OpenGL.PixelFormat format, int imageSize, T8[] data) where T8 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexSubImage2D&lt;struct .ctor (class System.ValueType) T8&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, int32 imageSize, !!T8[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T8">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T8[]" />
      </Parameters>
      <Docs>
        <typeparam name="T8">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, or GL_TEXTURE_CUBE_MAP_NEGATIVE_Z.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a two-dimensional texture subimage in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexSubImage3D">
      <MemberSignature Language="C#" Value="public static void CompressedTexSubImage3D (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, MonoMac.OpenGL.PixelFormat format, int imageSize, IntPtr data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexSubImage3D(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 zoffset, int32 width, int32 height, int32 depth, valuetype MonoMac.OpenGL.PixelFormat format, int32 imageSize, native int data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="zoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_3D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="zoffset">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a three-dimensional texture subimage in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexSubImage3D&lt;T10&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexSubImage3D&lt;T10&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, MonoMac.OpenGL.PixelFormat format, int imageSize, out T10 data) where T10 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexSubImage3D&lt;struct .ctor (class System.ValueType) T10&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 zoffset, int32 width, int32 height, int32 depth, valuetype MonoMac.OpenGL.PixelFormat format, int32 imageSize, !!T10 data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T10">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="zoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T10&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T10">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_3D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="zoffset">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a three-dimensional texture subimage in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexSubImage3D&lt;T10&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexSubImage3D&lt;T10&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, MonoMac.OpenGL.PixelFormat format, int imageSize, T10[,,] data) where T10 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexSubImage3D&lt;struct .ctor (class System.ValueType) T10&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 zoffset, int32 width, int32 height, int32 depth, valuetype MonoMac.OpenGL.PixelFormat format, int32 imageSize, !!T10[,,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T10">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="zoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T10[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T10">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_3D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="zoffset">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a three-dimensional texture subimage in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexSubImage3D&lt;T10&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexSubImage3D&lt;T10&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, MonoMac.OpenGL.PixelFormat format, int imageSize, T10[,] data) where T10 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexSubImage3D&lt;struct .ctor (class System.ValueType) T10&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 zoffset, int32 width, int32 height, int32 depth, valuetype MonoMac.OpenGL.PixelFormat format, int32 imageSize, !!T10[,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T10">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="zoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T10[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T10">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_3D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="zoffset">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a three-dimensional texture subimage in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedTexSubImage3D&lt;T10&gt;">
      <MemberSignature Language="C#" Value="public static void CompressedTexSubImage3D&lt;T10&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, MonoMac.OpenGL.PixelFormat format, int imageSize, T10[] data) where T10 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompressedTexSubImage3D&lt;struct .ctor (class System.ValueType) T10&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 zoffset, int32 width, int32 height, int32 depth, valuetype MonoMac.OpenGL.PixelFormat format, int32 imageSize, !!T10[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T10">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="zoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="imageSize" Type="System.Int32" />
        <Parameter Name="data" Type="T10[]" />
      </Parameters>
      <Docs>
        <typeparam name="T10">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_3D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="zoffset">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the compressed image data stored at address data.
            </para>
        </param>
        <param name="imageSize">
          <para>
            Specifies the number of unsigned bytes of image data starting at the address specified by data.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the compressed image data in memory.
            </para>
        </param>
        <summary>[requires: v1.3]
            Specify a three-dimensional texture subimage in a compressed format
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvolutionFilter1D">
      <MemberSignature Language="C#" Value="public static void ConvolutionFilter1D (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvolutionFilter1D(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="image" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be GL_CONVOLUTION_1D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The width of the pixel array referenced by data.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_INTENSITY, GL_RGB, and GL_RGBA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="image">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a one-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvolutionFilter1D&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void ConvolutionFilter1D&lt;T5&gt; (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T5 image) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvolutionFilter1D&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T5 image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="image" Type="T5&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_CONVOLUTION_1D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The width of the pixel array referenced by data.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_INTENSITY, GL_RGB, and GL_RGBA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="image">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a one-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvolutionFilter1D&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void ConvolutionFilter1D&lt;T5&gt; (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T5[,,] image) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvolutionFilter1D&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T5[,,] image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="image" Type="T5[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_CONVOLUTION_1D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The width of the pixel array referenced by data.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_INTENSITY, GL_RGB, and GL_RGBA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="image">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a one-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvolutionFilter1D&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void ConvolutionFilter1D&lt;T5&gt; (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T5[,] image) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvolutionFilter1D&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T5[,] image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="image" Type="T5[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_CONVOLUTION_1D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The width of the pixel array referenced by data.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_INTENSITY, GL_RGB, and GL_RGBA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="image">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a one-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvolutionFilter1D&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void ConvolutionFilter1D&lt;T5&gt; (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T5[] image) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvolutionFilter1D&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T5[] image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="image" Type="T5[]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_CONVOLUTION_1D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The width of the pixel array referenced by data.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_INTENSITY, GL_RGB, and GL_RGBA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="image">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a one-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvolutionFilter2D">
      <MemberSignature Language="C#" Value="public static void ConvolutionFilter2D (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvolutionFilter2D(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="image" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be GL_CONVOLUTION_2D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The width of the pixel array referenced by data.
            </para>
        </param>
        <param name="height">
          <para>
            The height of the pixel array referenced by data.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, and GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="image">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a two-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvolutionFilter2D&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void ConvolutionFilter2D&lt;T6&gt; (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T6 image) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvolutionFilter2D&lt;struct .ctor (class System.ValueType) T6&gt;(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T6 image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="image" Type="T6&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_CONVOLUTION_2D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The width of the pixel array referenced by data.
            </para>
        </param>
        <param name="height">
          <para>
            The height of the pixel array referenced by data.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, and GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="image">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a two-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvolutionFilter2D&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void ConvolutionFilter2D&lt;T6&gt; (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T6[,,] image) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvolutionFilter2D&lt;struct .ctor (class System.ValueType) T6&gt;(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T6[,,] image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="image" Type="T6[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_CONVOLUTION_2D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The width of the pixel array referenced by data.
            </para>
        </param>
        <param name="height">
          <para>
            The height of the pixel array referenced by data.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, and GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="image">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a two-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvolutionFilter2D&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void ConvolutionFilter2D&lt;T6&gt; (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T6[,] image) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvolutionFilter2D&lt;struct .ctor (class System.ValueType) T6&gt;(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T6[,] image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="image" Type="T6[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_CONVOLUTION_2D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The width of the pixel array referenced by data.
            </para>
        </param>
        <param name="height">
          <para>
            The height of the pixel array referenced by data.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, and GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="image">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a two-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvolutionFilter2D&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void ConvolutionFilter2D&lt;T6&gt; (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T6[] image) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvolutionFilter2D&lt;struct .ctor (class System.ValueType) T6&gt;(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T6[] image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="image" Type="T6[]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_CONVOLUTION_2D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The width of the pixel array referenced by data.
            </para>
        </param>
        <param name="height">
          <para>
            The height of the pixel array referenced by data.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in data. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, and GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in data. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="image">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a two-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvolutionParameter">
      <MemberSignature Language="C#" Value="public static void ConvolutionParameter (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.ConvolutionParameter pname, int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvolutionParameter(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.ConvolutionParameter pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ConvolutionParameter" />
        <Parameter Name="params" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target for the convolution parameter. Must be one of GL_CONVOLUTION_1D, GL_CONVOLUTION_2D, or GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be set. Must be GL_CONVOLUTION_BORDER_MODE.
            </para>
        </param>
        <param name="params">
          <para>
            The parameter value. Must be one of GL_REDUCE, GL_CONSTANT_BORDER, GL_REPLICATE_BORDER.
            </para>
          <para>
          </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Set convolution parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvolutionParameter">
      <MemberSignature Language="C#" Value="public static void ConvolutionParameter (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.ConvolutionParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvolutionParameter(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.ConvolutionParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ConvolutionParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target for the convolution parameter. Must be one of GL_CONVOLUTION_1D, GL_CONVOLUTION_2D, or GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be set. Must be GL_CONVOLUTION_BORDER_MODE.
            </para>
        </param>
        <param name="params">
          <para>
            The parameter value. Must be one of GL_REDUCE, GL_CONSTANT_BORDER, GL_REPLICATE_BORDER.
            </para>
          <para>
          </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Set convolution parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvolutionParameter">
      <MemberSignature Language="C#" Value="public static void ConvolutionParameter (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.ConvolutionParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvolutionParameter(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.ConvolutionParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ConvolutionParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target for the convolution parameter. Must be one of GL_CONVOLUTION_1D, GL_CONVOLUTION_2D, or GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be set. Must be GL_CONVOLUTION_BORDER_MODE.
            </para>
        </param>
        <param name="params">
          <para>
            The parameter value. Must be one of GL_REDUCE, GL_CONSTANT_BORDER, GL_REPLICATE_BORDER.
            </para>
          <para>
          </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Set convolution parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvolutionParameter">
      <MemberSignature Language="C#" Value="public static void ConvolutionParameter (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.ConvolutionParameter pname, float params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvolutionParameter(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.ConvolutionParameter pname, float32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ConvolutionParameter" />
        <Parameter Name="params" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target for the convolution parameter. Must be one of GL_CONVOLUTION_1D, GL_CONVOLUTION_2D, or GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be set. Must be GL_CONVOLUTION_BORDER_MODE.
            </para>
        </param>
        <param name="params">
          <para>
            The parameter value. Must be one of GL_REDUCE, GL_CONSTANT_BORDER, GL_REPLICATE_BORDER.
            </para>
          <para>
          </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Set convolution parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvolutionParameter">
      <MemberSignature Language="C#" Value="public static void ConvolutionParameter (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.ConvolutionParameter pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvolutionParameter(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.ConvolutionParameter pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ConvolutionParameter" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target for the convolution parameter. Must be one of GL_CONVOLUTION_1D, GL_CONVOLUTION_2D, or GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be set. Must be GL_CONVOLUTION_BORDER_MODE.
            </para>
        </param>
        <param name="params">
          <para>
            The parameter value. Must be one of GL_REDUCE, GL_CONSTANT_BORDER, GL_REPLICATE_BORDER.
            </para>
          <para>
          </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Set convolution parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvolutionParameter">
      <MemberSignature Language="C#" Value="public static void ConvolutionParameter (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.ConvolutionParameter pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvolutionParameter(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.ConvolutionParameter pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ConvolutionParameter" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target for the convolution parameter. Must be one of GL_CONVOLUTION_1D, GL_CONVOLUTION_2D, or GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be set. Must be GL_CONVOLUTION_BORDER_MODE.
            </para>
        </param>
        <param name="params">
          <para>
            The parameter value. Must be one of GL_REDUCE, GL_CONSTANT_BORDER, GL_REPLICATE_BORDER.
            </para>
          <para>
          </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Set convolution parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyBufferSubData">
      <MemberSignature Language="C#" Value="public static void CopyBufferSubData (MonoMac.OpenGL.BufferTarget readTarget, MonoMac.OpenGL.BufferTarget writeTarget, IntPtr readOffset, IntPtr writeOffset, IntPtr size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyBufferSubData(valuetype MonoMac.OpenGL.BufferTarget readTarget, valuetype MonoMac.OpenGL.BufferTarget writeTarget, native int readOffset, native int writeOffset, native int size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readTarget" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="writeTarget" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="readOffset" Type="System.IntPtr" />
        <Parameter Name="writeOffset" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="readTarget">To be added.</param>
        <param name="writeTarget">To be added.</param>
        <param name="readOffset">To be added.</param>
        <param name="writeOffset">To be added.</param>
        <param name="size">
          <para>
            Specifies the size, in basic machine units, of the data to be copied from readtarget to writetarget.
            </para>
        </param>
        <summary>[requires: v3.0 and ARB_copy_buffer]
            Copy part of the data store of a buffer object to the data store of another buffer object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyColorSubTable">
      <MemberSignature Language="C#" Value="public static void CopyColorSubTable (MonoMac.OpenGL.ColorTableTarget target, int start, int x, int y, int width);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyColorSubTable(valuetype MonoMac.OpenGL.ColorTableTarget target, int32 start, int32 x, int32 y, int32 width) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be one of GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="start">
          <para>
            The starting index of the portion of the color table to be replaced.
            </para>
        </param>
        <param name="x">
          <para>
            The window coordinates of the left corner of the row of pixels to be copied.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="width">
          <para>
            The number of table entries to replace.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Respecify a portion of a color table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyColorTable">
      <MemberSignature Language="C#" Value="public static void CopyColorTable (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int x, int y, int width);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyColorTable(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 x, int32 y, int32 width) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The color table target. Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal storage format of the texture image. Must be one of the following symbolic constants: GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="x">
          <para>
            The x coordinate of the lower-left corner of the pixel rectangle to be transferred to the color table.
            </para>
        </param>
        <param name="y">
          <para>
            The y coordinate of the lower-left corner of the pixel rectangle to be transferred to the color table.
            </para>
        </param>
        <param name="width">
          <para>
            The width of the pixel rectangle.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Copy pixels into a color table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyConvolutionFilter1D">
      <MemberSignature Language="C#" Value="public static void CopyConvolutionFilter1D (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int x, int y, int width);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyConvolutionFilter1D(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 x, int32 y, int32 width) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be GL_CONVOLUTION_1D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="x">
          <para>
            The window space coordinates of the lower-left coordinate of the pixel array to copy.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="width">
          <para>
            The width of the pixel array to copy.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Copy pixels into a one-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyConvolutionFilter2D">
      <MemberSignature Language="C#" Value="public static void CopyConvolutionFilter2D (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyConvolutionFilter2D(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be GL_CONVOLUTION_2D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="x">
          <para>
            The window space coordinates of the lower-left coordinate of the pixel array to copy.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="width">
          <para>
            The width of the pixel array to copy.
            </para>
        </param>
        <param name="height">
          <para>
            The height of the pixel array to copy.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Copy pixels into a two-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPixels">
      <MemberSignature Language="C#" Value="public static void CopyPixels (int x, int y, int width, int height, MonoMac.OpenGL.PixelCopyType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyPixels(int32 x, int32 y, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelCopyType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelCopyType" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the window coordinates of the lower left corner of the rectangular region of pixels to be copied.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="width">
          <para>
            Specify the dimensions of the rectangular region of pixels to be copied. Both must be nonnegative.
            </para>
        </param>
        <param name="height">To be added.</param>
        <param name="type">
          <para>
            Specifies whether color values, depth values, or stencil values are to be copied. Symbolic constants GL_COLOR, GL_DEPTH, and GL_STENCIL are accepted.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Copy pixels in the frame buffer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTexImage1D">
      <MemberSignature Language="C#" Value="public static void CopyTexImage1D (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int x, int y, int width, int border);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyTexImage1D(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 x, int32 y, int32 width, int32 border) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">
          <para>
            Specifies the internal format of the texture. Must be one of the following symbolic constants: GL_COMPRESSED_RED, GL_COMPRESSED_RG, GL_COMPRESSED_RGB, GL_COMPRESSED_RGBA. GL_COMPRESSED_SRGB, GL_COMPRESSED_SRGB_ALPHA. GL_DEPTH_COMPONENT, GL_DEPTH_COMPONENT16, GL_DEPTH_COMPONENT24, GL_DEPTH_COMPONENT32, GL_RED, GL_RG, GL_RGB, GL_R3_G3_B2, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, GL_RGBA16, GL_SRGB, GL_SRGB8, GL_SRGB_ALPHA, or GL_SRGB8_ALPHA8.
            </para>
        </param>
        <param name="x">
          <para>
            Specify the window coordinates of the left corner of the row of pixels to be copied.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture image. Must be 0 or 2 sup n + 2 ( border ) for some integer . The height of the texture image is 1.
            </para>
        </param>
        <param name="border">
          <para>
            Specifies the width of the border. Must be either 0 or 1.
            </para>
        </param>
        <summary>[requires: v1.1]
            Copy pixels into a 1D texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTexImage2D">
      <MemberSignature Language="C#" Value="public static void CopyTexImage2D (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int x, int y, int width, int height, int border);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyTexImage2D(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 x, int32 y, int32 width, int32 height, int32 border) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, or GL_TEXTURE_CUBE_MAP_NEGATIVE_Z.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">
          <para>
            Specifies the internal format of the texture. Must be one of the following symbolic constants: GL_COMPRESSED_RED, GL_COMPRESSED_RG, GL_COMPRESSED_RGB, GL_COMPRESSED_RGBA. GL_COMPRESSED_SRGB, GL_COMPRESSED_SRGB_ALPHA. GL_DEPTH_COMPONENT, GL_DEPTH_COMPONENT16, GL_DEPTH_COMPONENT24, GL_DEPTH_COMPONENT32, GL_RED, GL_RG, GL_RGB, GL_R3_G3_B2, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, GL_RGBA16, GL_SRGB, GL_SRGB8, GL_SRGB_ALPHA, or GL_SRGB8_ALPHA8.
            </para>
        </param>
        <param name="x">
          <para>
            Specify the window coordinates of the lower left corner of the rectangular region of pixels to be copied.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture image. Must be 0 or 2 sup n + 2 ( border ) for some integer .
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image. Must be 0 or 2 sup m + 2 ( border ) for some integer .
            </para>
        </param>
        <param name="border">
          <para>
            Specifies the width of the border. Must be either 0 or 1.
            </para>
        </param>
        <summary>[requires: v1.1]
            Copy pixels into a 2D texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTexSubImage1D">
      <MemberSignature Language="C#" Value="public static void CopyTexSubImage1D (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int x, int y, int width);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyTexSubImage1D(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 x, int32 y, int32 width) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies the texel offset within the texture array.
            </para>
        </param>
        <param name="x">
          <para>
            Specify the window coordinates of the left corner of the row of pixels to be copied.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <summary>[requires: v1.1]
            Copy a one-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTexSubImage2D">
      <MemberSignature Language="C#" Value="public static void CopyTexSubImage2D (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyTexSubImage2D(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, or GL_TEXTURE_CUBE_MAP_NEGATIVE_Z.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="x">
          <para>
            Specify the window coordinates of the lower left corner of the rectangular region of pixels to be copied.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <summary>[requires: v1.1]
            Copy a two-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTexSubImage3D">
      <MemberSignature Language="C#" Value="public static void CopyTexSubImage3D (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyTexSubImage3D(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 zoffset, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="zoffset" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_3D
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="zoffset">
          <para>
            Specifies a texel offset in the z direction within the texture array.
            </para>
        </param>
        <param name="x">
          <para>
            Specify the window coordinates of the lower left corner of the rectangular region of pixels to be copied.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <summary>[requires: v1.2]
            Copy a three-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProgram">
      <MemberSignature Language="C#" Value="public static int CreateProgram ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CreateProgram() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[requires: v2.0]
            Creates a program object
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateShader">
      <MemberSignature Language="C#" Value="public static int CreateShader (MonoMac.OpenGL.ShaderType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CreateShader(valuetype MonoMac.OpenGL.ShaderType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.ShaderType" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>[requires: v2.0]
            Creates a shader object
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CullFace">
      <MemberSignature Language="C#" Value="public static void CullFace (MonoMac.OpenGL.CullFaceMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CullFace(valuetype MonoMac.OpenGL.CullFaceMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.CullFaceMode" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies whether front- or back-facing facets are candidates for culling. Symbolic constants GL_FRONT, GL_BACK, and GL_FRONT_AND_BACK are accepted. The initial value is GL_BACK.
            </para>
        </param>
        <summary>[requires: v1.0]
            Specify whether front- or back-facing facets can be culled
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBuffers">
      <MemberSignature Language="C#" Value="public static void DeleteBuffers (int n, ref int buffers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteBuffers(int32 n, int32 buffers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="buffers" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of buffer objects to be deleted.
            </para>
        </param>
        <param name="buffers">
          <para>
            Specifies an array of buffer objects to be deleted.
            </para>
        </param>
        <summary>[requires: v1.5]
            Delete named buffer objects
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBuffers">
      <MemberSignature Language="C#" Value="public static void DeleteBuffers (int n, int* buffers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteBuffers(int32 n, int32* buffers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="buffers" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of buffer objects to be deleted.
            </para>
        </param>
        <param name="buffers">
          <para>
            Specifies an array of buffer objects to be deleted.
            </para>
        </param>
        <summary>[requires: v1.5]
            Delete named buffer objects
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBuffers">
      <MemberSignature Language="C#" Value="public static void DeleteBuffers (int n, int[] buffers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteBuffers(int32 n, int32[] buffers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="buffers" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of buffer objects to be deleted.
            </para>
        </param>
        <param name="buffers">
          <para>
            Specifies an array of buffer objects to be deleted.
            </para>
        </param>
        <summary>[requires: v1.5]
            Delete named buffer objects
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBuffers">
      <MemberSignature Language="C#" Value="public static void DeleteBuffers (int n, ref uint buffers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteBuffers(int32 n, unsigned int32 buffers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="buffers" Type="System.UInt32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of buffer objects to be deleted.
            </para>
        </param>
        <param name="buffers">
          <para>
            Specifies an array of buffer objects to be deleted.
            </para>
        </param>
        <summary>[requires: v1.5]
            Delete named buffer objects
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBuffers">
      <MemberSignature Language="C#" Value="public static void DeleteBuffers (int n, uint* buffers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteBuffers(int32 n, unsigned int32* buffers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="buffers" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of buffer objects to be deleted.
            </para>
        </param>
        <param name="buffers">
          <para>
            Specifies an array of buffer objects to be deleted.
            </para>
        </param>
        <summary>[requires: v1.5]
            Delete named buffer objects
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBuffers">
      <MemberSignature Language="C#" Value="public static void DeleteBuffers (int n, uint[] buffers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteBuffers(int32 n, unsigned int32[] buffers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="buffers" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of buffer objects to be deleted.
            </para>
        </param>
        <param name="buffers">
          <para>
            Specifies an array of buffer objects to be deleted.
            </para>
        </param>
        <summary>[requires: v1.5]
            Delete named buffer objects
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteLists">
      <MemberSignature Language="C#" Value="public static void DeleteLists (int list, int range);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteLists(int32 list, int32 range) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Int32" />
        <Parameter Name="range" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="list">
          <para>
            Specifies the integer name of the first display list to delete.
            </para>
        </param>
        <param name="range">
          <para>
            Specifies the number of display lists to delete.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Delete a contiguous group of display lists
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteLists">
      <MemberSignature Language="C#" Value="public static void DeleteLists (uint list, int range);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteLists(unsigned int32 list, int32 range) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.UInt32" />
        <Parameter Name="range" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="list">
          <para>
            Specifies the integer name of the first display list to delete.
            </para>
        </param>
        <param name="range">
          <para>
            Specifies the number of display lists to delete.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Delete a contiguous group of display lists
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteProgram">
      <MemberSignature Language="C#" Value="public static void DeleteProgram (int n, ref int programs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteProgram(int32 n, int32 programs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="programs" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <param name="programs">To be added.</param>
        <summary>[requires: NV_vertex_program]
            Deletes a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteProgram">
      <MemberSignature Language="C#" Value="public static void DeleteProgram (int n, int[] programs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteProgram(int32 n, int32[] programs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="programs" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <param name="programs">To be added.</param>
        <summary>[requires: NV_vertex_program]
            Deletes a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteQueries">
      <MemberSignature Language="C#" Value="public static void DeleteQueries (int n, ref int ids);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteQueries(int32 n, int32 ids) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="ids" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of query objects to be deleted.
            </para>
        </param>
        <param name="ids">
          <para>
            Specifies an array of query objects to be deleted.
            </para>
        </param>
        <summary>[requires: v1.5]
            Delete named query objects
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteQueries">
      <MemberSignature Language="C#" Value="public static void DeleteQueries (int n, int* ids);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteQueries(int32 n, int32* ids) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="ids" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of query objects to be deleted.
            </para>
        </param>
        <param name="ids">
          <para>
            Specifies an array of query objects to be deleted.
            </para>
        </param>
        <summary>[requires: v1.5]
            Delete named query objects
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteQueries">
      <MemberSignature Language="C#" Value="public static void DeleteQueries (int n, int[] ids);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteQueries(int32 n, int32[] ids) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="ids" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of query objects to be deleted.
            </para>
        </param>
        <param name="ids">
          <para>
            Specifies an array of query objects to be deleted.
            </para>
        </param>
        <summary>[requires: v1.5]
            Delete named query objects
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteQueries">
      <MemberSignature Language="C#" Value="public static void DeleteQueries (int n, ref uint ids);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteQueries(int32 n, unsigned int32 ids) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="ids" Type="System.UInt32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of query objects to be deleted.
            </para>
        </param>
        <param name="ids">
          <para>
            Specifies an array of query objects to be deleted.
            </para>
        </param>
        <summary>[requires: v1.5]
            Delete named query objects
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteQueries">
      <MemberSignature Language="C#" Value="public static void DeleteQueries (int n, uint* ids);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteQueries(int32 n, unsigned int32* ids) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="ids" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of query objects to be deleted.
            </para>
        </param>
        <param name="ids">
          <para>
            Specifies an array of query objects to be deleted.
            </para>
        </param>
        <summary>[requires: v1.5]
            Delete named query objects
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteQueries">
      <MemberSignature Language="C#" Value="public static void DeleteQueries (int n, uint[] ids);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteQueries(int32 n, unsigned int32[] ids) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="ids" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of query objects to be deleted.
            </para>
        </param>
        <param name="ids">
          <para>
            Specifies an array of query objects to be deleted.
            </para>
        </param>
        <summary>[requires: v1.5]
            Delete named query objects
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteShader">
      <MemberSignature Language="C#" Value="public static void DeleteShader (int shader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteShader(int32 shader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object to be deleted.
            </para>
        </param>
        <summary>[requires: v2.0]
            Deletes a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteShader">
      <MemberSignature Language="C#" Value="public static void DeleteShader (uint shader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteShader(unsigned int32 shader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object to be deleted.
            </para>
        </param>
        <summary>[requires: v2.0]
            Deletes a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTexture">
      <MemberSignature Language="C#" Value="public static void DeleteTexture (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteTexture(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTexture">
      <MemberSignature Language="C#" Value="public static void DeleteTexture (uint id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteTexture(unsigned int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTextures">
      <MemberSignature Language="C#" Value="public static void DeleteTextures (int n, ref int textures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteTextures(int32 n, int32 textures) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of textures to be deleted.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array of textures to be deleted.
            </para>
        </param>
        <summary>[requires: v1.1]
            Delete named textures
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTextures">
      <MemberSignature Language="C#" Value="public static void DeleteTextures (int n, int* textures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteTextures(int32 n, int32* textures) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of textures to be deleted.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array of textures to be deleted.
            </para>
        </param>
        <summary>[requires: v1.1]
            Delete named textures
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTextures">
      <MemberSignature Language="C#" Value="public static void DeleteTextures (int n, int[] textures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteTextures(int32 n, int32[] textures) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of textures to be deleted.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array of textures to be deleted.
            </para>
        </param>
        <summary>[requires: v1.1]
            Delete named textures
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTextures">
      <MemberSignature Language="C#" Value="public static void DeleteTextures (int n, ref uint textures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteTextures(int32 n, unsigned int32 textures) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.UInt32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of textures to be deleted.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array of textures to be deleted.
            </para>
        </param>
        <summary>[requires: v1.1]
            Delete named textures
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTextures">
      <MemberSignature Language="C#" Value="public static void DeleteTextures (int n, uint* textures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteTextures(int32 n, unsigned int32* textures) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of textures to be deleted.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array of textures to be deleted.
            </para>
        </param>
        <summary>[requires: v1.1]
            Delete named textures
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTextures">
      <MemberSignature Language="C#" Value="public static void DeleteTextures (int n, uint[] textures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteTextures(int32 n, unsigned int32[] textures) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of textures to be deleted.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array of textures to be deleted.
            </para>
        </param>
        <summary>[requires: v1.1]
            Delete named textures
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DepthFunc">
      <MemberSignature Language="C#" Value="public static void DepthFunc (MonoMac.OpenGL.DepthFunction func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DepthFunc(valuetype MonoMac.OpenGL.DepthFunction func) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="func" Type="MonoMac.OpenGL.DepthFunction" />
      </Parameters>
      <Docs>
        <param name="func">
          <para>
            Specifies the depth comparison function. Symbolic constants GL_NEVER, GL_LESS, GL_EQUAL, GL_LEQUAL, GL_GREATER, GL_NOTEQUAL, GL_GEQUAL, and GL_ALWAYS are accepted. The initial value is GL_LESS.
            </para>
        </param>
        <summary>[requires: v1.0]
            Specify the value used for depth buffer comparisons
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DepthMask">
      <MemberSignature Language="C#" Value="public static void DepthMask (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DepthMask(bool flag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">
          <para>
            Specifies whether the depth buffer is enabled for writing. If flag is GL_FALSE, depth buffer writing is disabled. Otherwise, it is enabled. Initially, depth buffer writing is enabled.
            </para>
        </param>
        <summary>[requires: v1.0]
            Enable or disable writing into the depth buffer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DepthRange">
      <MemberSignature Language="C#" Value="public static void DepthRange (double near, double far);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DepthRange(float64 near, float64 far) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="near" Type="System.Double" />
        <Parameter Name="far" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="near">To be added.</param>
        <param name="far">To be added.</param>
        <summary>[requires: v1.0]
            Specify mapping of depth values from normalized device coordinates to window coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetachShader">
      <MemberSignature Language="C#" Value="public static void DetachShader (int program, int shader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DetachShader(int32 program, int32 shader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="shader" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object from which to detach the shader object.
            </para>
        </param>
        <param name="shader">
          <para>
            Specifies the shader object to be detached.
            </para>
        </param>
        <summary>[requires: v2.0]
            Detaches a shader object from a program object to which it is attached
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetachShader">
      <MemberSignature Language="C#" Value="public static void DetachShader (uint program, uint shader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DetachShader(unsigned int32 program, unsigned int32 shader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="shader" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object from which to detach the shader object.
            </para>
        </param>
        <param name="shader">
          <para>
            Specifies the shader object to be detached.
            </para>
        </param>
        <summary>[requires: v2.0]
            Detaches a shader object from a program object to which it is attached
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Disable">
      <MemberSignature Language="C#" Value="public static void Disable (MonoMac.OpenGL.EnableCap cap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Disable(valuetype MonoMac.OpenGL.EnableCap cap) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cap" Type="MonoMac.OpenGL.EnableCap" />
      </Parameters>
      <Docs>
        <param name="cap">To be added.</param>
        <summary>[requires: v1.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Disable">
      <MemberSignature Language="C#" Value="public static void Disable (MonoMac.OpenGL.IndexedEnableCap target, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Disable(valuetype MonoMac.OpenGL.IndexedEnableCap target, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.IndexedEnableCap" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <summary>[requires: v3.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Disable">
      <MemberSignature Language="C#" Value="public static void Disable (MonoMac.OpenGL.IndexedEnableCap target, uint index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Disable(valuetype MonoMac.OpenGL.IndexedEnableCap target, unsigned int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.IndexedEnableCap" />
        <Parameter Name="index" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <summary>[requires: v3.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableClientState">
      <MemberSignature Language="C#" Value="public static void DisableClientState (MonoMac.OpenGL.ArrayCap array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableClientState(valuetype MonoMac.OpenGL.ArrayCap array) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="MonoMac.OpenGL.ArrayCap" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <summary>[requires: v1.1][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableVertexAttribArray">
      <MemberSignature Language="C#" Value="public static void DisableVertexAttribArray (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableVertexAttribArray(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>[requires: v2.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableVertexAttribArray">
      <MemberSignature Language="C#" Value="public static void DisableVertexAttribArray (uint index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableVertexAttribArray(unsigned int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>[requires: v2.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawArrays">
      <MemberSignature Language="C#" Value="public static void DrawArrays (MonoMac.OpenGL.BeginMode mode, int first, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawArrays(valuetype MonoMac.OpenGL.BeginMode mode, int32 first, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="first" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="first">
          <para>
            Specifies the starting index in the enabled arrays.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of indices to be rendered.
            </para>
        </param>
        <summary>[requires: v1.1]
            Render primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBuffer">
      <MemberSignature Language="C#" Value="public static void DrawBuffer (MonoMac.OpenGL.DrawBufferMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBuffer(valuetype MonoMac.OpenGL.DrawBufferMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.DrawBufferMode" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies up to four color buffers to be drawn into. Symbolic constants GL_NONE, GL_FRONT_LEFT, GL_FRONT_RIGHT, GL_BACK_LEFT, GL_BACK_RIGHT, GL_FRONT, GL_BACK, GL_LEFT, GL_RIGHT, and GL_FRONT_AND_BACK are accepted. The initial value is GL_FRONT for single-buffered contexts, and GL_BACK for double-buffered contexts.
            </para>
        </param>
        <summary>[requires: v1.0]
            Specify which color buffers are to be drawn into
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBuffers">
      <MemberSignature Language="C#" Value="public static void DrawBuffers (int n, ref MonoMac.OpenGL.DrawBuffersEnum bufs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBuffers(int32 n, valuetype MonoMac.OpenGL.DrawBuffersEnum bufs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="bufs" Type="MonoMac.OpenGL.DrawBuffersEnum&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of buffers in bufs.
            </para>
        </param>
        <param name="bufs">
          <para>
            Points to an array of symbolic constants specifying the buffers into which fragment colors or data values will be written.
            </para>
        </param>
        <summary>[requires: v2.0]
            Specifies a list of color buffers to be drawn into
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBuffers">
      <MemberSignature Language="C#" Value="public static void DrawBuffers (int n, MonoMac.OpenGL.DrawBuffersEnum* bufs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBuffers(int32 n, valuetype MonoMac.OpenGL.DrawBuffersEnum* bufs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="bufs" Type="MonoMac.OpenGL.DrawBuffersEnum*" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of buffers in bufs.
            </para>
        </param>
        <param name="bufs">
          <para>
            Points to an array of symbolic constants specifying the buffers into which fragment colors or data values will be written.
            </para>
        </param>
        <summary>[requires: v2.0]
            Specifies a list of color buffers to be drawn into
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBuffers">
      <MemberSignature Language="C#" Value="public static void DrawBuffers (int n, MonoMac.OpenGL.DrawBuffersEnum[] bufs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBuffers(int32 n, valuetype MonoMac.OpenGL.DrawBuffersEnum[] bufs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="bufs" Type="MonoMac.OpenGL.DrawBuffersEnum[]" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of buffers in bufs.
            </para>
        </param>
        <param name="bufs">
          <para>
            Points to an array of symbolic constants specifying the buffers into which fragment colors or data values will be written.
            </para>
        </param>
        <summary>[requires: v2.0]
            Specifies a list of color buffers to be drawn into
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawElements">
      <MemberSignature Language="C#" Value="public static void DrawElements (MonoMac.OpenGL.BeginMode mode, int count, MonoMac.OpenGL.DrawElementsType type, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawElements(valuetype MonoMac.OpenGL.BeginMode mode, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mode">To be added.</param>
        <param name="count">To be added.</param>
        <param name="type">To be added.</param>
        <param name="offset">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawElements">
      <MemberSignature Language="C#" Value="public static void DrawElements (MonoMac.OpenGL.BeginMode mode, int count, MonoMac.OpenGL.DrawElementsType type, IntPtr indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawElements(valuetype MonoMac.OpenGL.BeginMode mode, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, native int indices) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements to be rendered.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <summary>[requires: v1.1]
            Render primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawElements&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void DrawElements&lt;T3&gt; (MonoMac.OpenGL.BeginMode mode, int count, MonoMac.OpenGL.DrawElementsType type, out T3 indices) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawElements&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T3 indices) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements to be rendered.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <summary>[requires: v1.1]
            Render primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawElements&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void DrawElements&lt;T3&gt; (MonoMac.OpenGL.BeginMode mode, int count, MonoMac.OpenGL.DrawElementsType type, T3[,,] indices) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawElements&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T3[,,] indices) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T3[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements to be rendered.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <summary>[requires: v1.1]
            Render primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawElements&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void DrawElements&lt;T3&gt; (MonoMac.OpenGL.BeginMode mode, int count, MonoMac.OpenGL.DrawElementsType type, T3[,] indices) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawElements&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T3[,] indices) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T3[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements to be rendered.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <summary>[requires: v1.1]
            Render primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawElements&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void DrawElements&lt;T3&gt; (MonoMac.OpenGL.BeginMode mode, int count, MonoMac.OpenGL.DrawElementsType type, T3[] indices) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawElements&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T3[] indices) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T3[]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements to be rendered.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <summary>[requires: v1.1]
            Render primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawPixels">
      <MemberSignature Language="C#" Value="public static void DrawPixels (int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr pixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawPixels(int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="width">
          <para>
            Specify the dimensions of the pixel rectangle to be written into the frame buffer.
            </para>
        </param>
        <param name="height">To be added.</param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. Symbolic constants GL_COLOR_INDEX, GL_STENCIL_INDEX, GL_DEPTH_COMPONENT, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, and GL_LUMINANCE_ALPHA are accepted.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type for data. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Write a block of pixels to the frame buffer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawPixels&lt;T4&gt;">
      <MemberSignature Language="C#" Value="public static void DrawPixels&lt;T4&gt; (int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T4 pixels) where T4 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawPixels&lt;struct .ctor (class System.ValueType) T4&gt;(int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T4 pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T4&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <param name="width">
          <para>
            Specify the dimensions of the pixel rectangle to be written into the frame buffer.
            </para>
        </param>
        <param name="height">To be added.</param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. Symbolic constants GL_COLOR_INDEX, GL_STENCIL_INDEX, GL_DEPTH_COMPONENT, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, and GL_LUMINANCE_ALPHA are accepted.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type for data. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Write a block of pixels to the frame buffer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawPixels&lt;T4&gt;">
      <MemberSignature Language="C#" Value="public static void DrawPixels&lt;T4&gt; (int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T4[,,] pixels) where T4 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawPixels&lt;struct .ctor (class System.ValueType) T4&gt;(int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T4[,,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T4[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <param name="width">
          <para>
            Specify the dimensions of the pixel rectangle to be written into the frame buffer.
            </para>
        </param>
        <param name="height">To be added.</param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. Symbolic constants GL_COLOR_INDEX, GL_STENCIL_INDEX, GL_DEPTH_COMPONENT, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, and GL_LUMINANCE_ALPHA are accepted.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type for data. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Write a block of pixels to the frame buffer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawPixels&lt;T4&gt;">
      <MemberSignature Language="C#" Value="public static void DrawPixels&lt;T4&gt; (int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T4[,] pixels) where T4 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawPixels&lt;struct .ctor (class System.ValueType) T4&gt;(int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T4[,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T4[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <param name="width">
          <para>
            Specify the dimensions of the pixel rectangle to be written into the frame buffer.
            </para>
        </param>
        <param name="height">To be added.</param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. Symbolic constants GL_COLOR_INDEX, GL_STENCIL_INDEX, GL_DEPTH_COMPONENT, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, and GL_LUMINANCE_ALPHA are accepted.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type for data. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Write a block of pixels to the frame buffer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawPixels&lt;T4&gt;">
      <MemberSignature Language="C#" Value="public static void DrawPixels&lt;T4&gt; (int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T4[] pixels) where T4 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawPixels&lt;struct .ctor (class System.ValueType) T4&gt;(int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T4[] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T4[]" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <param name="width">
          <para>
            Specify the dimensions of the pixel rectangle to be written into the frame buffer.
            </para>
        </param>
        <param name="height">To be added.</param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. Symbolic constants GL_COLOR_INDEX, GL_STENCIL_INDEX, GL_DEPTH_COMPONENT, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, and GL_LUMINANCE_ALPHA are accepted.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type for data. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Write a block of pixels to the frame buffer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawRangeElements">
      <MemberSignature Language="C#" Value="public static void DrawRangeElements (MonoMac.OpenGL.BeginMode mode, int start, int end, int count, MonoMac.OpenGL.DrawElementsType type, IntPtr indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRangeElements(valuetype MonoMac.OpenGL.BeginMode mode, int32 start, int32 end, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, native int indices) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="start">
          <para>
            Specifies the minimum array index contained in indices.
            </para>
        </param>
        <param name="end">
          <para>
            Specifies the maximum array index contained in indices.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements to be rendered.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <summary>[requires: v1.2]
            Render primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawRangeElements">
      <MemberSignature Language="C#" Value="public static void DrawRangeElements (MonoMac.OpenGL.BeginMode mode, uint start, uint end, int count, MonoMac.OpenGL.DrawElementsType type, IntPtr indices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRangeElements(valuetype MonoMac.OpenGL.BeginMode mode, unsigned int32 start, unsigned int32 end, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, native int indices) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="start" Type="System.UInt32" />
        <Parameter Name="end" Type="System.UInt32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="start">
          <para>
            Specifies the minimum array index contained in indices.
            </para>
        </param>
        <param name="end">
          <para>
            Specifies the maximum array index contained in indices.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements to be rendered.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <summary>[requires: v1.2]
            Render primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawRangeElements&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void DrawRangeElements&lt;T5&gt; (MonoMac.OpenGL.BeginMode mode, int start, int end, int count, MonoMac.OpenGL.DrawElementsType type, out T5 indices) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRangeElements&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32 start, int32 end, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T5 indices) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T5&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="start">
          <para>
            Specifies the minimum array index contained in indices.
            </para>
        </param>
        <param name="end">
          <para>
            Specifies the maximum array index contained in indices.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements to be rendered.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <summary>[requires: v1.2]
            Render primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawRangeElements&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void DrawRangeElements&lt;T5&gt; (MonoMac.OpenGL.BeginMode mode, int start, int end, int count, MonoMac.OpenGL.DrawElementsType type, T5[,,] indices) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRangeElements&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32 start, int32 end, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T5[,,] indices) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T5[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="start">
          <para>
            Specifies the minimum array index contained in indices.
            </para>
        </param>
        <param name="end">
          <para>
            Specifies the maximum array index contained in indices.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements to be rendered.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <summary>[requires: v1.2]
            Render primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawRangeElements&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void DrawRangeElements&lt;T5&gt; (MonoMac.OpenGL.BeginMode mode, int start, int end, int count, MonoMac.OpenGL.DrawElementsType type, T5[,] indices) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRangeElements&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32 start, int32 end, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T5[,] indices) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T5[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="start">
          <para>
            Specifies the minimum array index contained in indices.
            </para>
        </param>
        <param name="end">
          <para>
            Specifies the maximum array index contained in indices.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements to be rendered.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <summary>[requires: v1.2]
            Render primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawRangeElements&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void DrawRangeElements&lt;T5&gt; (MonoMac.OpenGL.BeginMode mode, int start, int end, int count, MonoMac.OpenGL.DrawElementsType type, T5[] indices) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRangeElements&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32 start, int32 end, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T5[] indices) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T5[]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="start">
          <para>
            Specifies the minimum array index contained in indices.
            </para>
        </param>
        <param name="end">
          <para>
            Specifies the maximum array index contained in indices.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements to be rendered.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <summary>[requires: v1.2]
            Render primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawRangeElements&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void DrawRangeElements&lt;T5&gt; (MonoMac.OpenGL.BeginMode mode, uint start, uint end, int count, MonoMac.OpenGL.DrawElementsType type, out T5 indices) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRangeElements&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.BeginMode mode, unsigned int32 start, unsigned int32 end, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T5 indices) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="start" Type="System.UInt32" />
        <Parameter Name="end" Type="System.UInt32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T5&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="start">
          <para>
            Specifies the minimum array index contained in indices.
            </para>
        </param>
        <param name="end">
          <para>
            Specifies the maximum array index contained in indices.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements to be rendered.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <summary>[requires: v1.2]
            Render primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawRangeElements&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void DrawRangeElements&lt;T5&gt; (MonoMac.OpenGL.BeginMode mode, uint start, uint end, int count, MonoMac.OpenGL.DrawElementsType type, T5[,,] indices) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRangeElements&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.BeginMode mode, unsigned int32 start, unsigned int32 end, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T5[,,] indices) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="start" Type="System.UInt32" />
        <Parameter Name="end" Type="System.UInt32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T5[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="start">
          <para>
            Specifies the minimum array index contained in indices.
            </para>
        </param>
        <param name="end">
          <para>
            Specifies the maximum array index contained in indices.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements to be rendered.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <summary>[requires: v1.2]
            Render primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawRangeElements&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void DrawRangeElements&lt;T5&gt; (MonoMac.OpenGL.BeginMode mode, uint start, uint end, int count, MonoMac.OpenGL.DrawElementsType type, T5[,] indices) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRangeElements&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.BeginMode mode, unsigned int32 start, unsigned int32 end, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T5[,] indices) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="start" Type="System.UInt32" />
        <Parameter Name="end" Type="System.UInt32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T5[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="start">
          <para>
            Specifies the minimum array index contained in indices.
            </para>
        </param>
        <param name="end">
          <para>
            Specifies the maximum array index contained in indices.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements to be rendered.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <summary>[requires: v1.2]
            Render primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawRangeElements&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void DrawRangeElements&lt;T5&gt; (MonoMac.OpenGL.BeginMode mode, uint start, uint end, int count, MonoMac.OpenGL.DrawElementsType type, T5[] indices) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRangeElements&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.BeginMode mode, unsigned int32 start, unsigned int32 end, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T5[] indices) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="start" Type="System.UInt32" />
        <Parameter Name="end" Type="System.UInt32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T5[]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="start">
          <para>
            Specifies the minimum array index contained in indices.
            </para>
        </param>
        <param name="end">
          <para>
            Specifies the maximum array index contained in indices.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements to be rendered.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <summary>[requires: v1.2]
            Render primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeFlag">
      <MemberSignature Language="C#" Value="public static void EdgeFlag (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EdgeFlag(bool flag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">
          <para>
            Specifies the current edge flag value, either GL_TRUE or GL_FALSE. The initial value is GL_TRUE.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Flag edges as either boundary or nonboundary
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeFlag">
      <MemberSignature Language="C#" Value="public static void EdgeFlag (bool* flag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EdgeFlag(bool* flag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean*" />
      </Parameters>
      <Docs>
        <param name="flag">
          <para>
            Specifies the current edge flag value, either GL_TRUE or GL_FALSE. The initial value is GL_TRUE.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Flag edges as either boundary or nonboundary
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeFlagPointer">
      <MemberSignature Language="C#" Value="public static void EdgeFlagPointer (int stride, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EdgeFlagPointer(int32 stride, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stride">To be added.</param>
        <param name="offset">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeFlagPointer">
      <MemberSignature Language="C#" Value="public static void EdgeFlagPointer (int stride, IntPtr pointer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EdgeFlagPointer(int32 stride, native int pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive edge flags. If stride is 0, the edge flags are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first edge flag in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of edge flags
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeFlagPointer&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static void EdgeFlagPointer&lt;T1&gt; (int stride, out T1 pointer) where T1 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EdgeFlagPointer&lt;struct .ctor (class System.ValueType) T1&gt;(int32 stride, !!T1 pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T1&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive edge flags. If stride is 0, the edge flags are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first edge flag in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of edge flags
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeFlagPointer&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static void EdgeFlagPointer&lt;T1&gt; (int stride, T1[,,] pointer) where T1 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EdgeFlagPointer&lt;struct .ctor (class System.ValueType) T1&gt;(int32 stride, !!T1[,,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T1[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive edge flags. If stride is 0, the edge flags are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first edge flag in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of edge flags
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeFlagPointer&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static void EdgeFlagPointer&lt;T1&gt; (int stride, T1[,] pointer) where T1 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EdgeFlagPointer&lt;struct .ctor (class System.ValueType) T1&gt;(int32 stride, !!T1[,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T1[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive edge flags. If stride is 0, the edge flags are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first edge flag in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of edge flags
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeFlagPointer&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static void EdgeFlagPointer&lt;T1&gt; (int stride, T1[] pointer) where T1 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EdgeFlagPointer&lt;struct .ctor (class System.ValueType) T1&gt;(int32 stride, !!T1[] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T1[]" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive edge flags. If stride is 0, the edge flags are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first edge flag in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of edge flags
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enable">
      <MemberSignature Language="C#" Value="public static void Enable (MonoMac.OpenGL.EnableCap cap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Enable(valuetype MonoMac.OpenGL.EnableCap cap) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cap" Type="MonoMac.OpenGL.EnableCap" />
      </Parameters>
      <Docs>
        <param name="cap">
          <para>
            Specifies a symbolic constant indicating a GL capability.
            </para>
        </param>
        <summary>[requires: v1.0]
            Enable or disable server-side GL capabilities
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enable">
      <MemberSignature Language="C#" Value="public static void Enable (MonoMac.OpenGL.IndexedEnableCap target, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Enable(valuetype MonoMac.OpenGL.IndexedEnableCap target, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.IndexedEnableCap" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <summary>[requires: v3.0]
            Enable or disable server-side GL capabilities
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enable">
      <MemberSignature Language="C#" Value="public static void Enable (MonoMac.OpenGL.IndexedEnableCap target, uint index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Enable(valuetype MonoMac.OpenGL.IndexedEnableCap target, unsigned int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.IndexedEnableCap" />
        <Parameter Name="index" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <summary>[requires: v3.0]
            Enable or disable server-side GL capabilities
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableClientState">
      <MemberSignature Language="C#" Value="public static void EnableClientState (MonoMac.OpenGL.ArrayCap array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableClientState(valuetype MonoMac.OpenGL.ArrayCap array) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="MonoMac.OpenGL.ArrayCap" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Enable or disable client-side capability
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableVertexAttribArray">
      <MemberSignature Language="C#" Value="public static void EnableVertexAttribArray (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableVertexAttribArray(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be enabled or disabled.
            </para>
        </param>
        <summary>[requires: v2.0]
            Enable or disable a generic vertex attribute array
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableVertexAttribArray">
      <MemberSignature Language="C#" Value="public static void EnableVertexAttribArray (uint index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableVertexAttribArray(unsigned int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be enabled or disabled.
            </para>
        </param>
        <summary>[requires: v2.0]
            Enable or disable a generic vertex attribute array
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public static void End ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void End() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[requires: v1.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndList">
      <MemberSignature Language="C#" Value="public static void EndList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndList() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[requires: v1.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndQuery">
      <MemberSignature Language="C#" Value="public static void EndQuery (MonoMac.OpenGL.QueryTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndQuery(valuetype MonoMac.OpenGL.QueryTarget target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.QueryTarget" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>[requires: v1.5]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalCoord1">
      <MemberSignature Language="C#" Value="public static void EvalCoord1 (double u);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvalCoord1(float64 u) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="u" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="u">
          <para>
            Specifies a value that is the domain coordinate to the basis function defined in a previous glMap1 or glMap2 command.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Evaluate enabled one- and two-dimensional maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalCoord1">
      <MemberSignature Language="C#" Value="public static void EvalCoord1 (double* u);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvalCoord1(float64* u) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="u" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="u">
          <para>
            Specifies a value that is the domain coordinate to the basis function defined in a previous glMap1 or glMap2 command.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Evaluate enabled one- and two-dimensional maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalCoord1">
      <MemberSignature Language="C#" Value="public static void EvalCoord1 (float u);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvalCoord1(float32 u) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="u" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="u">
          <para>
            Specifies a value that is the domain coordinate to the basis function defined in a previous glMap1 or glMap2 command.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Evaluate enabled one- and two-dimensional maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalCoord1">
      <MemberSignature Language="C#" Value="public static void EvalCoord1 (float* u);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvalCoord1(float32* u) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="u" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="u">
          <para>
            Specifies a value that is the domain coordinate to the basis function defined in a previous glMap1 or glMap2 command.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Evaluate enabled one- and two-dimensional maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalCoord2">
      <MemberSignature Language="C#" Value="public static void EvalCoord2 (ref double u);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvalCoord2(float64 u) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="u" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="u">
          <para>
            Specifies a value that is the domain coordinate to the basis function defined in a previous glMap1 or glMap2 command.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Evaluate enabled one- and two-dimensional maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalCoord2">
      <MemberSignature Language="C#" Value="public static void EvalCoord2 (double* u);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvalCoord2(float64* u) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="u" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="u">
          <para>
            Specifies a value that is the domain coordinate to the basis function defined in a previous glMap1 or glMap2 command.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Evaluate enabled one- and two-dimensional maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalCoord2">
      <MemberSignature Language="C#" Value="public static void EvalCoord2 (double[] u);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvalCoord2(float64[] u) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="u" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="u">
          <para>
            Specifies a value that is the domain coordinate to the basis function defined in a previous glMap1 or glMap2 command.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Evaluate enabled one- and two-dimensional maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalCoord2">
      <MemberSignature Language="C#" Value="public static void EvalCoord2 (ref float u);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvalCoord2(float32 u) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="u" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="u">
          <para>
            Specifies a value that is the domain coordinate to the basis function defined in a previous glMap1 or glMap2 command.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Evaluate enabled one- and two-dimensional maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalCoord2">
      <MemberSignature Language="C#" Value="public static void EvalCoord2 (float* u);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvalCoord2(float32* u) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="u" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="u">
          <para>
            Specifies a value that is the domain coordinate to the basis function defined in a previous glMap1 or glMap2 command.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Evaluate enabled one- and two-dimensional maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalCoord2">
      <MemberSignature Language="C#" Value="public static void EvalCoord2 (float[] u);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvalCoord2(float32[] u) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="u" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="u">
          <para>
            Specifies a value that is the domain coordinate to the basis function defined in a previous glMap1 or glMap2 command.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Evaluate enabled one- and two-dimensional maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalCoord2">
      <MemberSignature Language="C#" Value="public static void EvalCoord2 (double u, double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvalCoord2(float64 u, float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="u" Type="System.Double" />
        <Parameter Name="v" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="u">
          <para>
            Specifies a value that is the domain coordinate to the basis function defined in a previous glMap1 or glMap2 command.
            </para>
        </param>
        <param name="v">
          <para>
            Specifies a value that is the domain coordinate to the basis function defined in a previous glMap2 command. This argument is not present in a glEvalCoord1 command.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Evaluate enabled one- and two-dimensional maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalCoord2">
      <MemberSignature Language="C#" Value="public static void EvalCoord2 (float u, float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvalCoord2(float32 u, float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="u" Type="System.Single" />
        <Parameter Name="v" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="u">
          <para>
            Specifies a value that is the domain coordinate to the basis function defined in a previous glMap1 or glMap2 command.
            </para>
        </param>
        <param name="v">
          <para>
            Specifies a value that is the domain coordinate to the basis function defined in a previous glMap2 command. This argument is not present in a glEvalCoord1 command.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Evaluate enabled one- and two-dimensional maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalMesh1">
      <MemberSignature Language="C#" Value="public static void EvalMesh1 (MonoMac.OpenGL.MeshMode1 mode, int i1, int i2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvalMesh1(valuetype MonoMac.OpenGL.MeshMode1 mode, int32 i1, int32 i2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.MeshMode1" />
        <Parameter Name="i1" Type="System.Int32" />
        <Parameter Name="i2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            In glEvalMesh1, specifies whether to compute a one-dimensional mesh of points or lines. Symbolic constants GL_POINT and GL_LINE are accepted.
            </para>
        </param>
        <param name="i1">
          <para>
            Specify the first and last integer values for grid domain variable .
            </para>
        </param>
        <param name="i2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Compute a one- or two-dimensional grid of points or lines
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalMesh2">
      <MemberSignature Language="C#" Value="public static void EvalMesh2 (MonoMac.OpenGL.MeshMode2 mode, int i1, int i2, int j1, int j2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvalMesh2(valuetype MonoMac.OpenGL.MeshMode2 mode, int32 i1, int32 i2, int32 j1, int32 j2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.MeshMode2" />
        <Parameter Name="i1" Type="System.Int32" />
        <Parameter Name="i2" Type="System.Int32" />
        <Parameter Name="j1" Type="System.Int32" />
        <Parameter Name="j2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            In glEvalMesh1, specifies whether to compute a one-dimensional mesh of points or lines. Symbolic constants GL_POINT and GL_LINE are accepted.
            </para>
        </param>
        <param name="i1">
          <para>
            Specify the first and last integer values for grid domain variable .
            </para>
        </param>
        <param name="i2">To be added.</param>
        <param name="j1">To be added.</param>
        <param name="j2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Compute a one- or two-dimensional grid of points or lines
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalPoint1">
      <MemberSignature Language="C#" Value="public static void EvalPoint1 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvalPoint1(int32 i) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <para>
            Specifies the integer value for grid domain variable .
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Generate and evaluate a single point in a mesh
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvalPoint2">
      <MemberSignature Language="C#" Value="public static void EvalPoint2 (int i, int j);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvalPoint2(int32 i, int32 j) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="j" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <para>
            Specifies the integer value for grid domain variable .
            </para>
        </param>
        <param name="j">
          <para>
            Specifies the integer value for grid domain variable (glEvalPoint2 only).
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Generate and evaluate a single point in a mesh
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeedbackBuffer">
      <MemberSignature Language="C#" Value="public static void FeedbackBuffer (int size, MonoMac.OpenGL.FeedbackType type, out float buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FeedbackBuffer(int32 size, valuetype MonoMac.OpenGL.FeedbackType type, float32 buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.FeedbackType" />
        <Parameter Name="buffer" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="size">
          <para>
            Specifies the maximum number of values that can be written into buffer.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies a symbolic constant that describes the information that will be returned for each vertex. GL_2D, GL_3D, GL_3D_COLOR, GL_3D_COLOR_TEXTURE, and GL_4D_COLOR_TEXTURE are accepted.
            </para>
        </param>
        <param name="buffer">
          <para>
            Returns the feedback data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Controls feedback mode
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeedbackBuffer">
      <MemberSignature Language="C#" Value="public static void FeedbackBuffer (int size, MonoMac.OpenGL.FeedbackType type, float* buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FeedbackBuffer(int32 size, valuetype MonoMac.OpenGL.FeedbackType type, float32* buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.FeedbackType" />
        <Parameter Name="buffer" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="size">
          <para>
            Specifies the maximum number of values that can be written into buffer.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies a symbolic constant that describes the information that will be returned for each vertex. GL_2D, GL_3D, GL_3D_COLOR, GL_3D_COLOR_TEXTURE, and GL_4D_COLOR_TEXTURE are accepted.
            </para>
        </param>
        <param name="buffer">
          <para>
            Returns the feedback data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Controls feedback mode
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FeedbackBuffer">
      <MemberSignature Language="C#" Value="public static void FeedbackBuffer (int size, MonoMac.OpenGL.FeedbackType type, float[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FeedbackBuffer(int32 size, valuetype MonoMac.OpenGL.FeedbackType type, float32[] buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.FeedbackType" />
        <Parameter Name="buffer" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="size">
          <para>
            Specifies the maximum number of values that can be written into buffer.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies a symbolic constant that describes the information that will be returned for each vertex. GL_2D, GL_3D, GL_3D_COLOR, GL_3D_COLOR_TEXTURE, and GL_4D_COLOR_TEXTURE are accepted.
            </para>
        </param>
        <param name="buffer">
          <para>
            Returns the feedback data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Controls feedback mode
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finish">
      <MemberSignature Language="C#" Value="public static void Finish ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Finish() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[requires: v1.0]
            Block until all GL execution is complete
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[requires: v1.0]
            Force execution of GL commands in finite time
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fog">
      <MemberSignature Language="C#" Value="public static void Fog (MonoMac.OpenGL.FogParameter pname, int param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fog(valuetype MonoMac.OpenGL.FogParameter pname, int32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.FogParameter" />
        <Parameter Name="param" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued fog parameter. GL_FOG_MODE, GL_FOG_DENSITY, GL_FOG_START, GL_FOG_END, GL_FOG_INDEX, and GL_FOG_COORD_SRC are accepted.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies the value that pname will be set to.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify fog parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fog">
      <MemberSignature Language="C#" Value="public static void Fog (MonoMac.OpenGL.FogParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fog(valuetype MonoMac.OpenGL.FogParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.FogParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued fog parameter. GL_FOG_MODE, GL_FOG_DENSITY, GL_FOG_START, GL_FOG_END, GL_FOG_INDEX, and GL_FOG_COORD_SRC are accepted.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify fog parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fog">
      <MemberSignature Language="C#" Value="public static void Fog (MonoMac.OpenGL.FogParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fog(valuetype MonoMac.OpenGL.FogParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.FogParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued fog parameter. GL_FOG_MODE, GL_FOG_DENSITY, GL_FOG_START, GL_FOG_END, GL_FOG_INDEX, and GL_FOG_COORD_SRC are accepted.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify fog parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fog">
      <MemberSignature Language="C#" Value="public static void Fog (MonoMac.OpenGL.FogParameter pname, float param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fog(valuetype MonoMac.OpenGL.FogParameter pname, float32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.FogParameter" />
        <Parameter Name="param" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued fog parameter. GL_FOG_MODE, GL_FOG_DENSITY, GL_FOG_START, GL_FOG_END, GL_FOG_INDEX, and GL_FOG_COORD_SRC are accepted.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies the value that pname will be set to.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify fog parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fog">
      <MemberSignature Language="C#" Value="public static void Fog (MonoMac.OpenGL.FogParameter pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fog(valuetype MonoMac.OpenGL.FogParameter pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.FogParameter" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued fog parameter. GL_FOG_MODE, GL_FOG_DENSITY, GL_FOG_START, GL_FOG_END, GL_FOG_INDEX, and GL_FOG_COORD_SRC are accepted.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify fog parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fog">
      <MemberSignature Language="C#" Value="public static void Fog (MonoMac.OpenGL.FogParameter pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fog(valuetype MonoMac.OpenGL.FogParameter pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.FogParameter" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued fog parameter. GL_FOG_MODE, GL_FOG_DENSITY, GL_FOG_START, GL_FOG_END, GL_FOG_INDEX, and GL_FOG_COORD_SRC are accepted.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify fog parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FogCoord">
      <MemberSignature Language="C#" Value="public static void FogCoord (double coord);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FogCoord(float64 coord) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specify the fog distance.
            </para>
        </param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current fog coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FogCoord">
      <MemberSignature Language="C#" Value="public static void FogCoord (double* coord);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FogCoord(float64* coord) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specify the fog distance.
            </para>
        </param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current fog coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FogCoord">
      <MemberSignature Language="C#" Value="public static void FogCoord (float coord);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FogCoord(float32 coord) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specify the fog distance.
            </para>
        </param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current fog coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FogCoord">
      <MemberSignature Language="C#" Value="public static void FogCoord (float* coord);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FogCoord(float32* coord) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specify the fog distance.
            </para>
        </param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current fog coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FogCoordPointer">
      <MemberSignature Language="C#" Value="public static void FogCoordPointer (MonoMac.OpenGL.FogPointerType type, int stride, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FogCoordPointer(valuetype MonoMac.OpenGL.FogPointerType type, int32 stride, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.FogPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="stride">To be added.</param>
        <param name="offset">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FogCoordPointer">
      <MemberSignature Language="C#" Value="public static void FogCoordPointer (MonoMac.OpenGL.FogPointerType type, int stride, IntPtr pointer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FogCoordPointer(valuetype MonoMac.OpenGL.FogPointerType type, int32 stride, native int pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.FogPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="type">
          <para>
            Specifies the data type of each fog coordinate. Symbolic constants GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive fog coordinates. If stride is 0, the array elements are understood to be tightly packed. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first fog coordinate in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Define an array of fog coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FogCoordPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void FogCoordPointer&lt;T2&gt; (MonoMac.OpenGL.FogPointerType type, int stride, out T2 pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FogCoordPointer&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.FogPointerType type, int32 stride, !!T2 pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.FogPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="type">
          <para>
            Specifies the data type of each fog coordinate. Symbolic constants GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive fog coordinates. If stride is 0, the array elements are understood to be tightly packed. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first fog coordinate in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Define an array of fog coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FogCoordPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void FogCoordPointer&lt;T2&gt; (MonoMac.OpenGL.FogPointerType type, int stride, T2[,,] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FogCoordPointer&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.FogPointerType type, int32 stride, !!T2[,,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.FogPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T2[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="type">
          <para>
            Specifies the data type of each fog coordinate. Symbolic constants GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive fog coordinates. If stride is 0, the array elements are understood to be tightly packed. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first fog coordinate in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Define an array of fog coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FogCoordPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void FogCoordPointer&lt;T2&gt; (MonoMac.OpenGL.FogPointerType type, int stride, T2[,] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FogCoordPointer&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.FogPointerType type, int32 stride, !!T2[,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.FogPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T2[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="type">
          <para>
            Specifies the data type of each fog coordinate. Symbolic constants GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive fog coordinates. If stride is 0, the array elements are understood to be tightly packed. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first fog coordinate in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Define an array of fog coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FogCoordPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void FogCoordPointer&lt;T2&gt; (MonoMac.OpenGL.FogPointerType type, int stride, T2[] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FogCoordPointer&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.FogPointerType type, int32 stride, !!T2[] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.FogPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T2[]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="type">
          <para>
            Specifies the data type of each fog coordinate. Symbolic constants GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive fog coordinates. If stride is 0, the array elements are understood to be tightly packed. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first fog coordinate in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Define an array of fog coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FrontFace">
      <MemberSignature Language="C#" Value="public static void FrontFace (MonoMac.OpenGL.FrontFaceDirection mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FrontFace(valuetype MonoMac.OpenGL.FrontFaceDirection mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.FrontFaceDirection" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies the orientation of front-facing polygons. GL_CW and GL_CCW are accepted. The initial value is GL_CCW.
            </para>
        </param>
        <summary>[requires: v1.0]
            Define front- and back-facing polygons
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Frustum">
      <MemberSignature Language="C#" Value="public static void Frustum (double left, double right, double bottom, double top, double zNear, double zFar);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Frustum(float64 left, float64 right, float64 bottom, float64 top, float64 zNear, float64 zFar) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="right" Type="System.Double" />
        <Parameter Name="bottom" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="zNear" Type="System.Double" />
        <Parameter Name="zFar" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="left">
          <para>
            Specify the coordinates for the left and right vertical clipping planes.
            </para>
        </param>
        <param name="right">To be added.</param>
        <param name="bottom">
          <para>
            Specify the coordinates for the bottom and top horizontal clipping planes.
            </para>
        </param>
        <param name="top">To be added.</param>
        <param name="zNear">To be added.</param>
        <param name="zFar">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Multiply the current matrix by a perspective matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenBuffers">
      <MemberSignature Language="C#" Value="public static void GenBuffers (int n, out int buffers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenBuffers(int32 n, int32 buffers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="buffers" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of buffer object names to be generated.
            </para>
        </param>
        <param name="buffers">
          <para>
            Specifies an array in which the generated buffer object names are stored.
            </para>
        </param>
        <summary>[requires: v1.5]
            Generate buffer object names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenBuffers">
      <MemberSignature Language="C#" Value="public static void GenBuffers (int n, int* buffers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenBuffers(int32 n, int32* buffers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="buffers" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of buffer object names to be generated.
            </para>
        </param>
        <param name="buffers">
          <para>
            Specifies an array in which the generated buffer object names are stored.
            </para>
        </param>
        <summary>[requires: v1.5]
            Generate buffer object names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenBuffers">
      <MemberSignature Language="C#" Value="public static void GenBuffers (int n, int[] buffers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenBuffers(int32 n, int32[] buffers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="buffers" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of buffer object names to be generated.
            </para>
        </param>
        <param name="buffers">
          <para>
            Specifies an array in which the generated buffer object names are stored.
            </para>
        </param>
        <summary>[requires: v1.5]
            Generate buffer object names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenBuffers">
      <MemberSignature Language="C#" Value="public static void GenBuffers (int n, out uint buffers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenBuffers(int32 n, unsigned int32 buffers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="buffers" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of buffer object names to be generated.
            </para>
        </param>
        <param name="buffers">
          <para>
            Specifies an array in which the generated buffer object names are stored.
            </para>
        </param>
        <summary>[requires: v1.5]
            Generate buffer object names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenBuffers">
      <MemberSignature Language="C#" Value="public static void GenBuffers (int n, uint* buffers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenBuffers(int32 n, unsigned int32* buffers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="buffers" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of buffer object names to be generated.
            </para>
        </param>
        <param name="buffers">
          <para>
            Specifies an array in which the generated buffer object names are stored.
            </para>
        </param>
        <summary>[requires: v1.5]
            Generate buffer object names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenBuffers">
      <MemberSignature Language="C#" Value="public static void GenBuffers (int n, uint[] buffers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenBuffers(int32 n, unsigned int32[] buffers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="buffers" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of buffer object names to be generated.
            </para>
        </param>
        <param name="buffers">
          <para>
            Specifies an array in which the generated buffer object names are stored.
            </para>
        </param>
        <summary>[requires: v1.5]
            Generate buffer object names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenLists">
      <MemberSignature Language="C#" Value="public static int GenLists (int range);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GenLists(int32 range) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="range">
          <para>
            Specifies the number of contiguous empty display lists to be generated.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Generate a contiguous set of empty display lists
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenQueries">
      <MemberSignature Language="C#" Value="public static void GenQueries (int n, out int ids);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenQueries(int32 n, int32 ids) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="ids" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of query object names to be generated.
            </para>
        </param>
        <param name="ids">
          <para>
            Specifies an array in which the generated query object names are stored.
            </para>
        </param>
        <summary>[requires: v1.5]
            Generate query object names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenQueries">
      <MemberSignature Language="C#" Value="public static void GenQueries (int n, int* ids);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenQueries(int32 n, int32* ids) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="ids" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of query object names to be generated.
            </para>
        </param>
        <param name="ids">
          <para>
            Specifies an array in which the generated query object names are stored.
            </para>
        </param>
        <summary>[requires: v1.5]
            Generate query object names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenQueries">
      <MemberSignature Language="C#" Value="public static void GenQueries (int n, int[] ids);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenQueries(int32 n, int32[] ids) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="ids" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of query object names to be generated.
            </para>
        </param>
        <param name="ids">
          <para>
            Specifies an array in which the generated query object names are stored.
            </para>
        </param>
        <summary>[requires: v1.5]
            Generate query object names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenQueries">
      <MemberSignature Language="C#" Value="public static void GenQueries (int n, out uint ids);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenQueries(int32 n, unsigned int32 ids) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="ids" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of query object names to be generated.
            </para>
        </param>
        <param name="ids">
          <para>
            Specifies an array in which the generated query object names are stored.
            </para>
        </param>
        <summary>[requires: v1.5]
            Generate query object names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenQueries">
      <MemberSignature Language="C#" Value="public static void GenQueries (int n, uint* ids);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenQueries(int32 n, unsigned int32* ids) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="ids" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of query object names to be generated.
            </para>
        </param>
        <param name="ids">
          <para>
            Specifies an array in which the generated query object names are stored.
            </para>
        </param>
        <summary>[requires: v1.5]
            Generate query object names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenQueries">
      <MemberSignature Language="C#" Value="public static void GenQueries (int n, uint[] ids);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenQueries(int32 n, unsigned int32[] ids) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="ids" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of query object names to be generated.
            </para>
        </param>
        <param name="ids">
          <para>
            Specifies an array in which the generated query object names are stored.
            </para>
        </param>
        <summary>[requires: v1.5]
            Generate query object names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenTexture">
      <MemberSignature Language="C#" Value="public static int GenTexture ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GenTexture() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenTextures">
      <MemberSignature Language="C#" Value="public static void GenTextures (int n, out int textures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenTextures(int32 n, int32 textures) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of texture names to be generated.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array in which the generated texture names are stored.
            </para>
        </param>
        <summary>[requires: v1.1]
            Generate texture names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenTextures">
      <MemberSignature Language="C#" Value="public static void GenTextures (int n, int* textures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenTextures(int32 n, int32* textures) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of texture names to be generated.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array in which the generated texture names are stored.
            </para>
        </param>
        <summary>[requires: v1.1]
            Generate texture names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenTextures">
      <MemberSignature Language="C#" Value="public static void GenTextures (int n, int[] textures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenTextures(int32 n, int32[] textures) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of texture names to be generated.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array in which the generated texture names are stored.
            </para>
        </param>
        <summary>[requires: v1.1]
            Generate texture names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenTextures">
      <MemberSignature Language="C#" Value="public static void GenTextures (int n, out uint textures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenTextures(int32 n, unsigned int32 textures) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of texture names to be generated.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array in which the generated texture names are stored.
            </para>
        </param>
        <summary>[requires: v1.1]
            Generate texture names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenTextures">
      <MemberSignature Language="C#" Value="public static void GenTextures (int n, uint* textures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenTextures(int32 n, unsigned int32* textures) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of texture names to be generated.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array in which the generated texture names are stored.
            </para>
        </param>
        <summary>[requires: v1.1]
            Generate texture names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenTextures">
      <MemberSignature Language="C#" Value="public static void GenTextures (int n, uint[] textures);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenTextures(int32 n, unsigned int32[] textures) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of texture names to be generated.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array in which the generated texture names are stored.
            </para>
        </param>
        <summary>[requires: v1.1]
            Generate texture names
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveAttrib">
      <MemberSignature Language="C#" Value="public static string GetActiveAttrib (int program, int index, out int size, out MonoMac.OpenGL.ActiveAttribType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetActiveAttrib(int32 program, int32 index, int32 size, valuetype MonoMac.OpenGL.ActiveAttribType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ActiveAttribType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="program">To be added.</param>
        <param name="index">To be added.</param>
        <param name="size">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveAttrib">
      <MemberSignature Language="C#" Value="public static void GetActiveAttrib (int program, int index, int bufSize, out int length, out int size, out MonoMac.OpenGL.ActiveAttribType type, System.Text.StringBuilder name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetActiveAttrib(int32 program, int32 index, int32 bufSize, int32 length, int32 size, valuetype MonoMac.OpenGL.ActiveAttribType type, class System.Text.StringBuilder name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="size" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ActiveAttribType&amp;" RefType="out" />
        <Parameter Name="name" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="index">
          <para>
            Specifies the index of the attribute variable to be queried.
            </para>
        </param>
        <param name="bufSize">
          <para>
            Specifies the maximum number of characters OpenGL is allowed to write in the character buffer indicated by name.
            </para>
        </param>
        <param name="length">
          <para>
            Returns the number of characters actually written by OpenGL in the string indicated by name (excluding the null terminator) if a value other than NULL is passed.
            </para>
        </param>
        <param name="size">
          <para>
            Returns the size of the attribute variable.
            </para>
        </param>
        <param name="type">
          <para>
            Returns the data type of the attribute variable.
            </para>
        </param>
        <param name="name">
          <para>
            Returns a null terminated string containing the name of the attribute variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns information about an active attribute variable for the specified program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveAttrib">
      <MemberSignature Language="C#" Value="public static void GetActiveAttrib (int program, int index, int bufSize, int* length, int* size, MonoMac.OpenGL.ActiveAttribType* type, System.Text.StringBuilder name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetActiveAttrib(int32 program, int32 index, int32 bufSize, int32* length, int32* size, valuetype MonoMac.OpenGL.ActiveAttribType* type, class System.Text.StringBuilder name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32*" />
        <Parameter Name="size" Type="System.Int32*" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ActiveAttribType*" />
        <Parameter Name="name" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="index">
          <para>
            Specifies the index of the attribute variable to be queried.
            </para>
        </param>
        <param name="bufSize">
          <para>
            Specifies the maximum number of characters OpenGL is allowed to write in the character buffer indicated by name.
            </para>
        </param>
        <param name="length">
          <para>
            Returns the number of characters actually written by OpenGL in the string indicated by name (excluding the null terminator) if a value other than NULL is passed.
            </para>
        </param>
        <param name="size">
          <para>
            Returns the size of the attribute variable.
            </para>
        </param>
        <param name="type">
          <para>
            Returns the data type of the attribute variable.
            </para>
        </param>
        <param name="name">
          <para>
            Returns a null terminated string containing the name of the attribute variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns information about an active attribute variable for the specified program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveAttrib">
      <MemberSignature Language="C#" Value="public static void GetActiveAttrib (uint program, uint index, int bufSize, out int length, out int size, out MonoMac.OpenGL.ActiveAttribType type, System.Text.StringBuilder name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetActiveAttrib(unsigned int32 program, unsigned int32 index, int32 bufSize, int32 length, int32 size, valuetype MonoMac.OpenGL.ActiveAttribType type, class System.Text.StringBuilder name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="size" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ActiveAttribType&amp;" RefType="out" />
        <Parameter Name="name" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="index">
          <para>
            Specifies the index of the attribute variable to be queried.
            </para>
        </param>
        <param name="bufSize">
          <para>
            Specifies the maximum number of characters OpenGL is allowed to write in the character buffer indicated by name.
            </para>
        </param>
        <param name="length">
          <para>
            Returns the number of characters actually written by OpenGL in the string indicated by name (excluding the null terminator) if a value other than NULL is passed.
            </para>
        </param>
        <param name="size">
          <para>
            Returns the size of the attribute variable.
            </para>
        </param>
        <param name="type">
          <para>
            Returns the data type of the attribute variable.
            </para>
        </param>
        <param name="name">
          <para>
            Returns a null terminated string containing the name of the attribute variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns information about an active attribute variable for the specified program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveAttrib">
      <MemberSignature Language="C#" Value="public static void GetActiveAttrib (uint program, uint index, int bufSize, int* length, int* size, MonoMac.OpenGL.ActiveAttribType* type, System.Text.StringBuilder name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetActiveAttrib(unsigned int32 program, unsigned int32 index, int32 bufSize, int32* length, int32* size, valuetype MonoMac.OpenGL.ActiveAttribType* type, class System.Text.StringBuilder name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32*" />
        <Parameter Name="size" Type="System.Int32*" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ActiveAttribType*" />
        <Parameter Name="name" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="index">
          <para>
            Specifies the index of the attribute variable to be queried.
            </para>
        </param>
        <param name="bufSize">
          <para>
            Specifies the maximum number of characters OpenGL is allowed to write in the character buffer indicated by name.
            </para>
        </param>
        <param name="length">
          <para>
            Returns the number of characters actually written by OpenGL in the string indicated by name (excluding the null terminator) if a value other than NULL is passed.
            </para>
        </param>
        <param name="size">
          <para>
            Returns the size of the attribute variable.
            </para>
        </param>
        <param name="type">
          <para>
            Returns the data type of the attribute variable.
            </para>
        </param>
        <param name="name">
          <para>
            Returns a null terminated string containing the name of the attribute variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns information about an active attribute variable for the specified program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveUniform">
      <MemberSignature Language="C#" Value="public static string GetActiveUniform (int program, int uniformIndex, out int size, out MonoMac.OpenGL.ActiveUniformType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetActiveUniform(int32 program, int32 uniformIndex, int32 size, valuetype MonoMac.OpenGL.ActiveUniformType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="uniformIndex" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ActiveUniformType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="program">To be added.</param>
        <param name="uniformIndex">To be added.</param>
        <param name="size">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveUniform">
      <MemberSignature Language="C#" Value="public static void GetActiveUniform (int program, int index, int bufSize, out int length, out int size, out MonoMac.OpenGL.ActiveUniformType type, System.Text.StringBuilder name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetActiveUniform(int32 program, int32 index, int32 bufSize, int32 length, int32 size, valuetype MonoMac.OpenGL.ActiveUniformType type, class System.Text.StringBuilder name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="size" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ActiveUniformType&amp;" RefType="out" />
        <Parameter Name="name" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="index">
          <para>
            Specifies the index of the uniform variable to be queried.
            </para>
        </param>
        <param name="bufSize">
          <para>
            Specifies the maximum number of characters OpenGL is allowed to write in the character buffer indicated by name.
            </para>
        </param>
        <param name="length">
          <para>
            Returns the number of characters actually written by OpenGL in the string indicated by name (excluding the null terminator) if a value other than NULL is passed.
            </para>
        </param>
        <param name="size">
          <para>
            Returns the size of the uniform variable.
            </para>
        </param>
        <param name="type">
          <para>
            Returns the data type of the uniform variable.
            </para>
        </param>
        <param name="name">
          <para>
            Returns a null terminated string containing the name of the uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns information about an active uniform variable for the specified program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveUniform">
      <MemberSignature Language="C#" Value="public static void GetActiveUniform (int program, int index, int bufSize, int* length, int* size, MonoMac.OpenGL.ActiveUniformType* type, System.Text.StringBuilder name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetActiveUniform(int32 program, int32 index, int32 bufSize, int32* length, int32* size, valuetype MonoMac.OpenGL.ActiveUniformType* type, class System.Text.StringBuilder name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32*" />
        <Parameter Name="size" Type="System.Int32*" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ActiveUniformType*" />
        <Parameter Name="name" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="index">
          <para>
            Specifies the index of the uniform variable to be queried.
            </para>
        </param>
        <param name="bufSize">
          <para>
            Specifies the maximum number of characters OpenGL is allowed to write in the character buffer indicated by name.
            </para>
        </param>
        <param name="length">
          <para>
            Returns the number of characters actually written by OpenGL in the string indicated by name (excluding the null terminator) if a value other than NULL is passed.
            </para>
        </param>
        <param name="size">
          <para>
            Returns the size of the uniform variable.
            </para>
        </param>
        <param name="type">
          <para>
            Returns the data type of the uniform variable.
            </para>
        </param>
        <param name="name">
          <para>
            Returns a null terminated string containing the name of the uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns information about an active uniform variable for the specified program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveUniform">
      <MemberSignature Language="C#" Value="public static void GetActiveUniform (uint program, uint index, int bufSize, out int length, out int size, out MonoMac.OpenGL.ActiveUniformType type, System.Text.StringBuilder name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetActiveUniform(unsigned int32 program, unsigned int32 index, int32 bufSize, int32 length, int32 size, valuetype MonoMac.OpenGL.ActiveUniformType type, class System.Text.StringBuilder name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="size" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ActiveUniformType&amp;" RefType="out" />
        <Parameter Name="name" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="index">
          <para>
            Specifies the index of the uniform variable to be queried.
            </para>
        </param>
        <param name="bufSize">
          <para>
            Specifies the maximum number of characters OpenGL is allowed to write in the character buffer indicated by name.
            </para>
        </param>
        <param name="length">
          <para>
            Returns the number of characters actually written by OpenGL in the string indicated by name (excluding the null terminator) if a value other than NULL is passed.
            </para>
        </param>
        <param name="size">
          <para>
            Returns the size of the uniform variable.
            </para>
        </param>
        <param name="type">
          <para>
            Returns the data type of the uniform variable.
            </para>
        </param>
        <param name="name">
          <para>
            Returns a null terminated string containing the name of the uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns information about an active uniform variable for the specified program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveUniform">
      <MemberSignature Language="C#" Value="public static void GetActiveUniform (uint program, uint index, int bufSize, int* length, int* size, MonoMac.OpenGL.ActiveUniformType* type, System.Text.StringBuilder name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetActiveUniform(unsigned int32 program, unsigned int32 index, int32 bufSize, int32* length, int32* size, valuetype MonoMac.OpenGL.ActiveUniformType* type, class System.Text.StringBuilder name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32*" />
        <Parameter Name="size" Type="System.Int32*" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ActiveUniformType*" />
        <Parameter Name="name" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="index">
          <para>
            Specifies the index of the uniform variable to be queried.
            </para>
        </param>
        <param name="bufSize">
          <para>
            Specifies the maximum number of characters OpenGL is allowed to write in the character buffer indicated by name.
            </para>
        </param>
        <param name="length">
          <para>
            Returns the number of characters actually written by OpenGL in the string indicated by name (excluding the null terminator) if a value other than NULL is passed.
            </para>
        </param>
        <param name="size">
          <para>
            Returns the size of the uniform variable.
            </para>
        </param>
        <param name="type">
          <para>
            Returns the data type of the uniform variable.
            </para>
        </param>
        <param name="name">
          <para>
            Returns a null terminated string containing the name of the uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns information about an active uniform variable for the specified program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachedShaders">
      <MemberSignature Language="C#" Value="public static void GetAttachedShaders (int program, int maxCount, out int count, out int obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetAttachedShaders(int32 program, int32 maxCount, int32 count, int32 obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="maxCount" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="obj" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="maxCount">
          <para>
            Specifies the size of the array for storing the returned object names.
            </para>
        </param>
        <param name="count">
          <para>
            Returns the number of names actually returned in objects.
            </para>
        </param>
        <param name="obj">To be added.</param>
        <summary>[requires: v2.0]
            Returns the handles of the shader objects attached to a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachedShaders">
      <MemberSignature Language="C#" Value="public static void GetAttachedShaders (int program, int maxCount, int* count, int* obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetAttachedShaders(int32 program, int32 maxCount, int32* count, int32* obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="maxCount" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32*" />
        <Parameter Name="obj" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="maxCount">
          <para>
            Specifies the size of the array for storing the returned object names.
            </para>
        </param>
        <param name="count">
          <para>
            Returns the number of names actually returned in objects.
            </para>
        </param>
        <param name="obj">To be added.</param>
        <summary>[requires: v2.0]
            Returns the handles of the shader objects attached to a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachedShaders">
      <MemberSignature Language="C#" Value="public static void GetAttachedShaders (int program, int maxCount, int* count, int[] obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetAttachedShaders(int32 program, int32 maxCount, int32* count, int32[] obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="maxCount" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32*" />
        <Parameter Name="obj" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="maxCount">
          <para>
            Specifies the size of the array for storing the returned object names.
            </para>
        </param>
        <param name="count">
          <para>
            Returns the number of names actually returned in objects.
            </para>
        </param>
        <param name="obj">To be added.</param>
        <summary>[requires: v2.0]
            Returns the handles of the shader objects attached to a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachedShaders">
      <MemberSignature Language="C#" Value="public static void GetAttachedShaders (uint program, int maxCount, out int count, out uint obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetAttachedShaders(unsigned int32 program, int32 maxCount, int32 count, unsigned int32 obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="maxCount" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="obj" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="maxCount">
          <para>
            Specifies the size of the array for storing the returned object names.
            </para>
        </param>
        <param name="count">
          <para>
            Returns the number of names actually returned in objects.
            </para>
        </param>
        <param name="obj">To be added.</param>
        <summary>[requires: v2.0]
            Returns the handles of the shader objects attached to a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachedShaders">
      <MemberSignature Language="C#" Value="public static void GetAttachedShaders (uint program, int maxCount, int* count, uint* obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetAttachedShaders(unsigned int32 program, int32 maxCount, int32* count, unsigned int32* obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="maxCount" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32*" />
        <Parameter Name="obj" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="maxCount">
          <para>
            Specifies the size of the array for storing the returned object names.
            </para>
        </param>
        <param name="count">
          <para>
            Returns the number of names actually returned in objects.
            </para>
        </param>
        <param name="obj">To be added.</param>
        <summary>[requires: v2.0]
            Returns the handles of the shader objects attached to a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachedShaders">
      <MemberSignature Language="C#" Value="public static void GetAttachedShaders (uint program, int maxCount, int* count, uint[] obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetAttachedShaders(unsigned int32 program, int32 maxCount, int32* count, unsigned int32[] obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="maxCount" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32*" />
        <Parameter Name="obj" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="maxCount">
          <para>
            Specifies the size of the array for storing the returned object names.
            </para>
        </param>
        <param name="count">
          <para>
            Returns the number of names actually returned in objects.
            </para>
        </param>
        <param name="obj">To be added.</param>
        <summary>[requires: v2.0]
            Returns the handles of the shader objects attached to a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribLocation">
      <MemberSignature Language="C#" Value="public static int GetAttribLocation (int program, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetAttribLocation(int32 program, string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="name">
          <para>
            Points to a null terminated string containing the name of the attribute variable whose location is to be queried.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the location of an attribute variable
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribLocation">
      <MemberSignature Language="C#" Value="public static int GetAttribLocation (uint program, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetAttribLocation(unsigned int32 program, string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="name">
          <para>
            Points to a null terminated string containing the name of the attribute variable whose location is to be queried.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the location of an attribute variable
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public static void GetBoolean (MonoMac.OpenGL.GetPName pname, out bool params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBoolean(valuetype MonoMac.OpenGL.GetPName pname, bool params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="params" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public static void GetBoolean (MonoMac.OpenGL.GetPName pname, bool* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBoolean(valuetype MonoMac.OpenGL.GetPName pname, bool* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="params" Type="System.Boolean*" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public static void GetBoolean (MonoMac.OpenGL.GetPName pname, bool[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBoolean(valuetype MonoMac.OpenGL.GetPName pname, bool[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="params" Type="System.Boolean[]" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public static void GetBoolean (MonoMac.OpenGL.GetIndexedPName target, int index, out bool data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBoolean(valuetype MonoMac.OpenGL.GetIndexedPName target, int32 index, bool data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="data" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v3.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public static void GetBoolean (MonoMac.OpenGL.GetIndexedPName target, int index, bool* data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBoolean(valuetype MonoMac.OpenGL.GetIndexedPName target, int32 index, bool* data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="data" Type="System.Boolean*" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v3.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public static void GetBoolean (MonoMac.OpenGL.GetIndexedPName target, int index, bool[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBoolean(valuetype MonoMac.OpenGL.GetIndexedPName target, int32 index, bool[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="data" Type="System.Boolean[]" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v3.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public static void GetBoolean (MonoMac.OpenGL.GetIndexedPName target, uint index, out bool data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBoolean(valuetype MonoMac.OpenGL.GetIndexedPName target, unsigned int32 index, bool data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="data" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v3.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public static void GetBoolean (MonoMac.OpenGL.GetIndexedPName target, uint index, bool* data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBoolean(valuetype MonoMac.OpenGL.GetIndexedPName target, unsigned int32 index, bool* data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="data" Type="System.Boolean*" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v3.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public static void GetBoolean (MonoMac.OpenGL.GetIndexedPName target, uint index, bool[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBoolean(valuetype MonoMac.OpenGL.GetIndexedPName target, unsigned int32 index, bool[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="data" Type="System.Boolean[]" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v3.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBufferParameter">
      <MemberSignature Language="C#" Value="public static void GetBufferParameter (MonoMac.OpenGL.BufferTarget target, MonoMac.OpenGL.BufferParameterName pname, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBufferParameter(valuetype MonoMac.OpenGL.BufferTarget target, valuetype MonoMac.OpenGL.BufferParameterName pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.BufferParameterName" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, or GL_PIXEL_UNPACK_BUFFER.
            </para>
        </param>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.5]
            Return parameters of a buffer object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBufferParameter">
      <MemberSignature Language="C#" Value="public static void GetBufferParameter (MonoMac.OpenGL.BufferTarget target, MonoMac.OpenGL.BufferParameterName pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBufferParameter(valuetype MonoMac.OpenGL.BufferTarget target, valuetype MonoMac.OpenGL.BufferParameterName pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.BufferParameterName" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, or GL_PIXEL_UNPACK_BUFFER.
            </para>
        </param>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.5]
            Return parameters of a buffer object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBufferParameter">
      <MemberSignature Language="C#" Value="public static void GetBufferParameter (MonoMac.OpenGL.BufferTarget target, MonoMac.OpenGL.BufferParameterName pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBufferParameter(valuetype MonoMac.OpenGL.BufferTarget target, valuetype MonoMac.OpenGL.BufferParameterName pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.BufferParameterName" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, or GL_PIXEL_UNPACK_BUFFER.
            </para>
        </param>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.5]
            Return parameters of a buffer object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBufferPointer">
      <MemberSignature Language="C#" Value="public static void GetBufferPointer (MonoMac.OpenGL.BufferTarget target, MonoMac.OpenGL.BufferPointer pname, IntPtr params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBufferPointer(valuetype MonoMac.OpenGL.BufferTarget target, valuetype MonoMac.OpenGL.BufferPointer pname, native int params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.BufferPointer" />
        <Parameter Name="params" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the pointer to be returned. The symbolic constant must be GL_BUFFER_MAP_POINTER.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the pointer value specified by pname.
            </para>
        </param>
        <summary>[requires: v1.5]
            Return the pointer to a mapped buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBufferPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void GetBufferPointer&lt;T2&gt; (MonoMac.OpenGL.BufferTarget target, MonoMac.OpenGL.BufferPointer pname, out T2 params) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBufferPointer&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.BufferTarget target, valuetype MonoMac.OpenGL.BufferPointer pname, !!T2 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.BufferPointer" />
        <Parameter Name="params" Type="T2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the pointer to be returned. The symbolic constant must be GL_BUFFER_MAP_POINTER.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the pointer value specified by pname.
            </para>
        </param>
        <summary>[requires: v1.5]
            Return the pointer to a mapped buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBufferPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void GetBufferPointer&lt;T2&gt; (MonoMac.OpenGL.BufferTarget target, MonoMac.OpenGL.BufferPointer pname, T2[,,] params) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBufferPointer&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.BufferTarget target, valuetype MonoMac.OpenGL.BufferPointer pname, !!T2[,,] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.BufferPointer" />
        <Parameter Name="params" Type="T2[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the pointer to be returned. The symbolic constant must be GL_BUFFER_MAP_POINTER.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the pointer value specified by pname.
            </para>
        </param>
        <summary>[requires: v1.5]
            Return the pointer to a mapped buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBufferPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void GetBufferPointer&lt;T2&gt; (MonoMac.OpenGL.BufferTarget target, MonoMac.OpenGL.BufferPointer pname, T2[,] params) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBufferPointer&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.BufferTarget target, valuetype MonoMac.OpenGL.BufferPointer pname, !!T2[,] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.BufferPointer" />
        <Parameter Name="params" Type="T2[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the pointer to be returned. The symbolic constant must be GL_BUFFER_MAP_POINTER.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the pointer value specified by pname.
            </para>
        </param>
        <summary>[requires: v1.5]
            Return the pointer to a mapped buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBufferPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void GetBufferPointer&lt;T2&gt; (MonoMac.OpenGL.BufferTarget target, MonoMac.OpenGL.BufferPointer pname, T2[] params) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBufferPointer&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.BufferTarget target, valuetype MonoMac.OpenGL.BufferPointer pname, !!T2[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.BufferPointer" />
        <Parameter Name="params" Type="T2[]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the pointer to be returned. The symbolic constant must be GL_BUFFER_MAP_POINTER.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the pointer value specified by pname.
            </para>
        </param>
        <summary>[requires: v1.5]
            Return the pointer to a mapped buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBufferSubData">
      <MemberSignature Language="C#" Value="public static void GetBufferSubData (MonoMac.OpenGL.BufferTarget target, IntPtr offset, IntPtr size, IntPtr data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBufferSubData(valuetype MonoMac.OpenGL.BufferTarget target, native int offset, native int size, native int data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="offset" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.IntPtr" />
        <Parameter Name="data" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="offset">
          <para>
            Specifies the offset into the buffer object's data store from which data will be returned, measured in bytes.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the size in bytes of the data store region being returned.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the location where buffer object data is returned.
            </para>
        </param>
        <summary>[requires: v1.5]
            Returns a subset of a buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBufferSubData&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void GetBufferSubData&lt;T3&gt; (MonoMac.OpenGL.BufferTarget target, IntPtr offset, IntPtr size, out T3 data) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBufferSubData&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BufferTarget target, native int offset, native int size, !!T3 data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="offset" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.IntPtr" />
        <Parameter Name="data" Type="T3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="offset">
          <para>
            Specifies the offset into the buffer object's data store from which data will be returned, measured in bytes.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the size in bytes of the data store region being returned.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the location where buffer object data is returned.
            </para>
        </param>
        <summary>[requires: v1.5]
            Returns a subset of a buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBufferSubData&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void GetBufferSubData&lt;T3&gt; (MonoMac.OpenGL.BufferTarget target, IntPtr offset, IntPtr size, T3[,,] data) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBufferSubData&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BufferTarget target, native int offset, native int size, !!T3[,,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="offset" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.IntPtr" />
        <Parameter Name="data" Type="T3[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="offset">
          <para>
            Specifies the offset into the buffer object's data store from which data will be returned, measured in bytes.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the size in bytes of the data store region being returned.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the location where buffer object data is returned.
            </para>
        </param>
        <summary>[requires: v1.5]
            Returns a subset of a buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBufferSubData&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void GetBufferSubData&lt;T3&gt; (MonoMac.OpenGL.BufferTarget target, IntPtr offset, IntPtr size, T3[,] data) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBufferSubData&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BufferTarget target, native int offset, native int size, !!T3[,] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="offset" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.IntPtr" />
        <Parameter Name="data" Type="T3[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="offset">
          <para>
            Specifies the offset into the buffer object's data store from which data will be returned, measured in bytes.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the size in bytes of the data store region being returned.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the location where buffer object data is returned.
            </para>
        </param>
        <summary>[requires: v1.5]
            Returns a subset of a buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBufferSubData&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void GetBufferSubData&lt;T3&gt; (MonoMac.OpenGL.BufferTarget target, IntPtr offset, IntPtr size, T3[] data) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetBufferSubData&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BufferTarget target, native int offset, native int size, !!T3[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="offset" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.IntPtr" />
        <Parameter Name="data" Type="T3[]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target buffer object. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER, or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="offset">
          <para>
            Specifies the offset into the buffer object's data store from which data will be returned, measured in bytes.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the size in bytes of the data store region being returned.
            </para>
        </param>
        <param name="data">
          <para>
            Specifies a pointer to the location where buffer object data is returned.
            </para>
        </param>
        <summary>[requires: v1.5]
            Returns a subset of a buffer object's data store
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClipPlane">
      <MemberSignature Language="C#" Value="public static void GetClipPlane (MonoMac.OpenGL.ClipPlaneName plane, out double equation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetClipPlane(valuetype MonoMac.OpenGL.ClipPlaneName plane, float64 equation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plane" Type="MonoMac.OpenGL.ClipPlaneName" />
        <Parameter Name="equation" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="plane">
          <para>
            Specifies a clipping plane. The number of clipping planes depends on the implementation, but at least six clipping planes are supported. They are identified by symbolic names of the form GL_CLIP_PLANE where i ranges from 0 to the value of GL_MAX_CLIP_PLANES - 1.
            </para>
        </param>
        <param name="equation">
          <para>
            Returns four double-precision values that are the coefficients of the plane equation of plane in eye coordinates. The initial value is (0, 0, 0, 0).
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the coefficients of the specified clipping plane
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClipPlane">
      <MemberSignature Language="C#" Value="public static void GetClipPlane (MonoMac.OpenGL.ClipPlaneName plane, double* equation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetClipPlane(valuetype MonoMac.OpenGL.ClipPlaneName plane, float64* equation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plane" Type="MonoMac.OpenGL.ClipPlaneName" />
        <Parameter Name="equation" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="plane">
          <para>
            Specifies a clipping plane. The number of clipping planes depends on the implementation, but at least six clipping planes are supported. They are identified by symbolic names of the form GL_CLIP_PLANE where i ranges from 0 to the value of GL_MAX_CLIP_PLANES - 1.
            </para>
        </param>
        <param name="equation">
          <para>
            Returns four double-precision values that are the coefficients of the plane equation of plane in eye coordinates. The initial value is (0, 0, 0, 0).
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the coefficients of the specified clipping plane
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClipPlane">
      <MemberSignature Language="C#" Value="public static void GetClipPlane (MonoMac.OpenGL.ClipPlaneName plane, double[] equation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetClipPlane(valuetype MonoMac.OpenGL.ClipPlaneName plane, float64[] equation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plane" Type="MonoMac.OpenGL.ClipPlaneName" />
        <Parameter Name="equation" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="plane">
          <para>
            Specifies a clipping plane. The number of clipping planes depends on the implementation, but at least six clipping planes are supported. They are identified by symbolic names of the form GL_CLIP_PLANE where i ranges from 0 to the value of GL_MAX_CLIP_PLANES - 1.
            </para>
        </param>
        <param name="equation">
          <para>
            Returns four double-precision values that are the coefficients of the plane equation of plane in eye coordinates. The initial value is (0, 0, 0, 0).
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the coefficients of the specified clipping plane
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColorTable">
      <MemberSignature Language="C#" Value="public static void GetColorTable (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetColorTable(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int table) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="table" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in table. The possible values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in table. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="table">
          <para>
            Pointer to a one-dimensional array of pixel data containing the contents of the color table.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Retrieve contents of a color lookup table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColorTable&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void GetColorTable&lt;T3&gt; (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T3 table) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetColorTable&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T3 table) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="table" Type="T3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in table. The possible values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in table. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="table">
          <para>
            Pointer to a one-dimensional array of pixel data containing the contents of the color table.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Retrieve contents of a color lookup table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColorTable&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void GetColorTable&lt;T3&gt; (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T3[,,] table) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetColorTable&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T3[,,] table) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="table" Type="T3[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in table. The possible values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in table. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="table">
          <para>
            Pointer to a one-dimensional array of pixel data containing the contents of the color table.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Retrieve contents of a color lookup table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColorTable&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void GetColorTable&lt;T3&gt; (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T3[,] table) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetColorTable&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T3[,] table) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="table" Type="T3[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in table. The possible values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in table. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="table">
          <para>
            Pointer to a one-dimensional array of pixel data containing the contents of the color table.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Retrieve contents of a color lookup table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColorTable&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void GetColorTable&lt;T3&gt; (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T3[] table) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetColorTable&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T3[] table) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="table" Type="T3[]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, or GL_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in table. The possible values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in table. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="table">
          <para>
            Pointer to a one-dimensional array of pixel data containing the contents of the color table.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Retrieve contents of a color lookup table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColorTableParameter">
      <MemberSignature Language="C#" Value="public static void GetColorTableParameter (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.GetColorTableParameterPName pname, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetColorTableParameter(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.GetColorTableParameterPName pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetColorTableParameterPName" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target color table. Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, GL_POST_COLOR_MATRIX_COLOR_TABLE, GL_PROXY_COLOR_TABLE, GL_PROXY_POST_CONVOLUTION_COLOR_TABLE, or GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="pname">
          <para>
            The symbolic name of a color lookup table parameter. Must be one of GL_COLOR_TABLE_BIAS, GL_COLOR_TABLE_SCALE, GL_COLOR_TABLE_FORMAT, GL_COLOR_TABLE_WIDTH, GL_COLOR_TABLE_RED_SIZE, GL_COLOR_TABLE_GREEN_SIZE, GL_COLOR_TABLE_BLUE_SIZE, GL_COLOR_TABLE_ALPHA_SIZE, GL_COLOR_TABLE_LUMINANCE_SIZE, or GL_COLOR_TABLE_INTENSITY_SIZE.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to an array where the values of the parameter will be stored.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get color lookup table parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColorTableParameter">
      <MemberSignature Language="C#" Value="public static void GetColorTableParameter (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.GetColorTableParameterPName pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetColorTableParameter(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.GetColorTableParameterPName pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetColorTableParameterPName" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target color table. Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, GL_POST_COLOR_MATRIX_COLOR_TABLE, GL_PROXY_COLOR_TABLE, GL_PROXY_POST_CONVOLUTION_COLOR_TABLE, or GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="pname">
          <para>
            The symbolic name of a color lookup table parameter. Must be one of GL_COLOR_TABLE_BIAS, GL_COLOR_TABLE_SCALE, GL_COLOR_TABLE_FORMAT, GL_COLOR_TABLE_WIDTH, GL_COLOR_TABLE_RED_SIZE, GL_COLOR_TABLE_GREEN_SIZE, GL_COLOR_TABLE_BLUE_SIZE, GL_COLOR_TABLE_ALPHA_SIZE, GL_COLOR_TABLE_LUMINANCE_SIZE, or GL_COLOR_TABLE_INTENSITY_SIZE.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to an array where the values of the parameter will be stored.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get color lookup table parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColorTableParameter">
      <MemberSignature Language="C#" Value="public static void GetColorTableParameter (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.GetColorTableParameterPName pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetColorTableParameter(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.GetColorTableParameterPName pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetColorTableParameterPName" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target color table. Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, GL_POST_COLOR_MATRIX_COLOR_TABLE, GL_PROXY_COLOR_TABLE, GL_PROXY_POST_CONVOLUTION_COLOR_TABLE, or GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="pname">
          <para>
            The symbolic name of a color lookup table parameter. Must be one of GL_COLOR_TABLE_BIAS, GL_COLOR_TABLE_SCALE, GL_COLOR_TABLE_FORMAT, GL_COLOR_TABLE_WIDTH, GL_COLOR_TABLE_RED_SIZE, GL_COLOR_TABLE_GREEN_SIZE, GL_COLOR_TABLE_BLUE_SIZE, GL_COLOR_TABLE_ALPHA_SIZE, GL_COLOR_TABLE_LUMINANCE_SIZE, or GL_COLOR_TABLE_INTENSITY_SIZE.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to an array where the values of the parameter will be stored.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get color lookup table parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColorTableParameter">
      <MemberSignature Language="C#" Value="public static void GetColorTableParameter (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.GetColorTableParameterPName pname, out float params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetColorTableParameter(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.GetColorTableParameterPName pname, float32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetColorTableParameterPName" />
        <Parameter Name="params" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target color table. Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, GL_POST_COLOR_MATRIX_COLOR_TABLE, GL_PROXY_COLOR_TABLE, GL_PROXY_POST_CONVOLUTION_COLOR_TABLE, or GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="pname">
          <para>
            The symbolic name of a color lookup table parameter. Must be one of GL_COLOR_TABLE_BIAS, GL_COLOR_TABLE_SCALE, GL_COLOR_TABLE_FORMAT, GL_COLOR_TABLE_WIDTH, GL_COLOR_TABLE_RED_SIZE, GL_COLOR_TABLE_GREEN_SIZE, GL_COLOR_TABLE_BLUE_SIZE, GL_COLOR_TABLE_ALPHA_SIZE, GL_COLOR_TABLE_LUMINANCE_SIZE, or GL_COLOR_TABLE_INTENSITY_SIZE.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to an array where the values of the parameter will be stored.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get color lookup table parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColorTableParameter">
      <MemberSignature Language="C#" Value="public static void GetColorTableParameter (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.GetColorTableParameterPName pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetColorTableParameter(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.GetColorTableParameterPName pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetColorTableParameterPName" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target color table. Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, GL_POST_COLOR_MATRIX_COLOR_TABLE, GL_PROXY_COLOR_TABLE, GL_PROXY_POST_CONVOLUTION_COLOR_TABLE, or GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="pname">
          <para>
            The symbolic name of a color lookup table parameter. Must be one of GL_COLOR_TABLE_BIAS, GL_COLOR_TABLE_SCALE, GL_COLOR_TABLE_FORMAT, GL_COLOR_TABLE_WIDTH, GL_COLOR_TABLE_RED_SIZE, GL_COLOR_TABLE_GREEN_SIZE, GL_COLOR_TABLE_BLUE_SIZE, GL_COLOR_TABLE_ALPHA_SIZE, GL_COLOR_TABLE_LUMINANCE_SIZE, or GL_COLOR_TABLE_INTENSITY_SIZE.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to an array where the values of the parameter will be stored.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get color lookup table parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColorTableParameter">
      <MemberSignature Language="C#" Value="public static void GetColorTableParameter (MonoMac.OpenGL.ColorTableTarget target, MonoMac.OpenGL.GetColorTableParameterPName pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetColorTableParameter(valuetype MonoMac.OpenGL.ColorTableTarget target, valuetype MonoMac.OpenGL.GetColorTableParameterPName pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ColorTableTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetColorTableParameterPName" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The target color table. Must be GL_COLOR_TABLE, GL_POST_CONVOLUTION_COLOR_TABLE, GL_POST_COLOR_MATRIX_COLOR_TABLE, GL_PROXY_COLOR_TABLE, GL_PROXY_POST_CONVOLUTION_COLOR_TABLE, or GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE.
            </para>
        </param>
        <param name="pname">
          <para>
            The symbolic name of a color lookup table parameter. Must be one of GL_COLOR_TABLE_BIAS, GL_COLOR_TABLE_SCALE, GL_COLOR_TABLE_FORMAT, GL_COLOR_TABLE_WIDTH, GL_COLOR_TABLE_RED_SIZE, GL_COLOR_TABLE_GREEN_SIZE, GL_COLOR_TABLE_BLUE_SIZE, GL_COLOR_TABLE_ALPHA_SIZE, GL_COLOR_TABLE_LUMINANCE_SIZE, or GL_COLOR_TABLE_INTENSITY_SIZE.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to an array where the values of the parameter will be stored.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get color lookup table parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompressedTexImage">
      <MemberSignature Language="C#" Value="public static void GetCompressedTexImage (MonoMac.OpenGL.TextureTarget target, int level, IntPtr img);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetCompressedTexImage(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, native int img) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="img" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies which texture is to be obtained. GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, and GL_TEXTURE_CUBE_MAP_NEGATIVE_Z are accepted.
            </para>
        </param>
        <param name="level">To be added.</param>
        <param name="img">
          <para>
            Returns the compressed texture image.
            </para>
        </param>
        <summary>[requires: v1.3]
            Return a compressed texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvolutionFilter">
      <MemberSignature Language="C#" Value="public static void GetConvolutionFilter (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetConvolutionFilter(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="image" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The filter to be retrieved. Must be one of GL_CONVOLUTION_1D or GL_CONVOLUTION_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output image. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output image. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="image">
          <para>
            Pointer to storage for the output image.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get current 1D or 2D convolution filter kernel
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvolutionFilter&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void GetConvolutionFilter&lt;T3&gt; (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T3 image) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetConvolutionFilter&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T3 image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="image" Type="T3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="target">
          <para>
            The filter to be retrieved. Must be one of GL_CONVOLUTION_1D or GL_CONVOLUTION_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output image. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output image. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="image">
          <para>
            Pointer to storage for the output image.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get current 1D or 2D convolution filter kernel
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvolutionFilter&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void GetConvolutionFilter&lt;T3&gt; (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T3[,,] image) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetConvolutionFilter&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T3[,,] image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="image" Type="T3[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="target">
          <para>
            The filter to be retrieved. Must be one of GL_CONVOLUTION_1D or GL_CONVOLUTION_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output image. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output image. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="image">
          <para>
            Pointer to storage for the output image.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get current 1D or 2D convolution filter kernel
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvolutionFilter&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void GetConvolutionFilter&lt;T3&gt; (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T3[,] image) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetConvolutionFilter&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T3[,] image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="image" Type="T3[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="target">
          <para>
            The filter to be retrieved. Must be one of GL_CONVOLUTION_1D or GL_CONVOLUTION_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output image. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output image. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="image">
          <para>
            Pointer to storage for the output image.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get current 1D or 2D convolution filter kernel
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvolutionFilter&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void GetConvolutionFilter&lt;T3&gt; (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T3[] image) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetConvolutionFilter&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T3[] image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="image" Type="T3[]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="target">
          <para>
            The filter to be retrieved. Must be one of GL_CONVOLUTION_1D or GL_CONVOLUTION_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output image. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output image. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="image">
          <para>
            Pointer to storage for the output image.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get current 1D or 2D convolution filter kernel
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvolutionParameter">
      <MemberSignature Language="C#" Value="public static void GetConvolutionParameter (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.GetConvolutionParameterPName pname, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetConvolutionParameter(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.GetConvolutionParameterPName pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetConvolutionParameterPName" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The filter whose parameters are to be retrieved. Must be one of GL_CONVOLUTION_1D, GL_CONVOLUTION_2D, or GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be retrieved. Must be one of GL_CONVOLUTION_BORDER_MODE, GL_CONVOLUTION_BORDER_COLOR, GL_CONVOLUTION_FILTER_SCALE, GL_CONVOLUTION_FILTER_BIAS, GL_CONVOLUTION_FORMAT, GL_CONVOLUTION_WIDTH, GL_CONVOLUTION_HEIGHT, GL_MAX_CONVOLUTION_WIDTH, or GL_MAX_CONVOLUTION_HEIGHT.
            </para>
        </param>
        <param name="params">
          <para>
            Pointer to storage for the parameters to be retrieved.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get convolution parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvolutionParameter">
      <MemberSignature Language="C#" Value="public static void GetConvolutionParameter (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.GetConvolutionParameterPName pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetConvolutionParameter(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.GetConvolutionParameterPName pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetConvolutionParameterPName" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The filter whose parameters are to be retrieved. Must be one of GL_CONVOLUTION_1D, GL_CONVOLUTION_2D, or GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be retrieved. Must be one of GL_CONVOLUTION_BORDER_MODE, GL_CONVOLUTION_BORDER_COLOR, GL_CONVOLUTION_FILTER_SCALE, GL_CONVOLUTION_FILTER_BIAS, GL_CONVOLUTION_FORMAT, GL_CONVOLUTION_WIDTH, GL_CONVOLUTION_HEIGHT, GL_MAX_CONVOLUTION_WIDTH, or GL_MAX_CONVOLUTION_HEIGHT.
            </para>
        </param>
        <param name="params">
          <para>
            Pointer to storage for the parameters to be retrieved.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get convolution parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvolutionParameter">
      <MemberSignature Language="C#" Value="public static void GetConvolutionParameter (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.GetConvolutionParameterPName pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetConvolutionParameter(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.GetConvolutionParameterPName pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetConvolutionParameterPName" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The filter whose parameters are to be retrieved. Must be one of GL_CONVOLUTION_1D, GL_CONVOLUTION_2D, or GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be retrieved. Must be one of GL_CONVOLUTION_BORDER_MODE, GL_CONVOLUTION_BORDER_COLOR, GL_CONVOLUTION_FILTER_SCALE, GL_CONVOLUTION_FILTER_BIAS, GL_CONVOLUTION_FORMAT, GL_CONVOLUTION_WIDTH, GL_CONVOLUTION_HEIGHT, GL_MAX_CONVOLUTION_WIDTH, or GL_MAX_CONVOLUTION_HEIGHT.
            </para>
        </param>
        <param name="params">
          <para>
            Pointer to storage for the parameters to be retrieved.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get convolution parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvolutionParameter">
      <MemberSignature Language="C#" Value="public static void GetConvolutionParameter (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.GetConvolutionParameterPName pname, out float params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetConvolutionParameter(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.GetConvolutionParameterPName pname, float32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetConvolutionParameterPName" />
        <Parameter Name="params" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The filter whose parameters are to be retrieved. Must be one of GL_CONVOLUTION_1D, GL_CONVOLUTION_2D, or GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be retrieved. Must be one of GL_CONVOLUTION_BORDER_MODE, GL_CONVOLUTION_BORDER_COLOR, GL_CONVOLUTION_FILTER_SCALE, GL_CONVOLUTION_FILTER_BIAS, GL_CONVOLUTION_FORMAT, GL_CONVOLUTION_WIDTH, GL_CONVOLUTION_HEIGHT, GL_MAX_CONVOLUTION_WIDTH, or GL_MAX_CONVOLUTION_HEIGHT.
            </para>
        </param>
        <param name="params">
          <para>
            Pointer to storage for the parameters to be retrieved.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get convolution parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvolutionParameter">
      <MemberSignature Language="C#" Value="public static void GetConvolutionParameter (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.GetConvolutionParameterPName pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetConvolutionParameter(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.GetConvolutionParameterPName pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetConvolutionParameterPName" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The filter whose parameters are to be retrieved. Must be one of GL_CONVOLUTION_1D, GL_CONVOLUTION_2D, or GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be retrieved. Must be one of GL_CONVOLUTION_BORDER_MODE, GL_CONVOLUTION_BORDER_COLOR, GL_CONVOLUTION_FILTER_SCALE, GL_CONVOLUTION_FILTER_BIAS, GL_CONVOLUTION_FORMAT, GL_CONVOLUTION_WIDTH, GL_CONVOLUTION_HEIGHT, GL_MAX_CONVOLUTION_WIDTH, or GL_MAX_CONVOLUTION_HEIGHT.
            </para>
        </param>
        <param name="params">
          <para>
            Pointer to storage for the parameters to be retrieved.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get convolution parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvolutionParameter">
      <MemberSignature Language="C#" Value="public static void GetConvolutionParameter (MonoMac.OpenGL.ConvolutionTarget target, MonoMac.OpenGL.GetConvolutionParameterPName pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetConvolutionParameter(valuetype MonoMac.OpenGL.ConvolutionTarget target, valuetype MonoMac.OpenGL.GetConvolutionParameterPName pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.ConvolutionTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetConvolutionParameterPName" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The filter whose parameters are to be retrieved. Must be one of GL_CONVOLUTION_1D, GL_CONVOLUTION_2D, or GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be retrieved. Must be one of GL_CONVOLUTION_BORDER_MODE, GL_CONVOLUTION_BORDER_COLOR, GL_CONVOLUTION_FILTER_SCALE, GL_CONVOLUTION_FILTER_BIAS, GL_CONVOLUTION_FORMAT, GL_CONVOLUTION_WIDTH, GL_CONVOLUTION_HEIGHT, GL_MAX_CONVOLUTION_WIDTH, or GL_MAX_CONVOLUTION_HEIGHT.
            </para>
        </param>
        <param name="params">
          <para>
            Pointer to storage for the parameters to be retrieved.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get convolution parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public static void GetDouble (MonoMac.OpenGL.GetPName pname, out MonoMac.OpenGL.Matrix4d matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetDouble(valuetype MonoMac.OpenGL.GetPName pname, valuetype MonoMac.OpenGL.Matrix4d matrix) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="matrix" Type="MonoMac.OpenGL.Matrix4d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="matrix">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public static void GetDouble (MonoMac.OpenGL.GetPName pname, out MonoMac.OpenGL.Vector2d vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetDouble(valuetype MonoMac.OpenGL.GetPName pname, valuetype MonoMac.OpenGL.Vector2d vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public static void GetDouble (MonoMac.OpenGL.GetPName pname, out MonoMac.OpenGL.Vector3d vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetDouble(valuetype MonoMac.OpenGL.GetPName pname, valuetype MonoMac.OpenGL.Vector3d vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector3d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public static void GetDouble (MonoMac.OpenGL.GetPName pname, out MonoMac.OpenGL.Vector4d vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetDouble(valuetype MonoMac.OpenGL.GetPName pname, valuetype MonoMac.OpenGL.Vector4d vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector4d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public static void GetDouble (MonoMac.OpenGL.GetPName pname, out double params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetDouble(valuetype MonoMac.OpenGL.GetPName pname, float64 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="params" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public static void GetDouble (MonoMac.OpenGL.GetPName pname, double* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetDouble(valuetype MonoMac.OpenGL.GetPName pname, float64* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="params" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public static void GetDouble (MonoMac.OpenGL.GetPName pname, double[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetDouble(valuetype MonoMac.OpenGL.GetPName pname, float64[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="params" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public static void GetDouble (MonoMac.OpenGL.GetIndexedPName target, int index, out double data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetDouble(valuetype MonoMac.OpenGL.GetIndexedPName target, int32 index, float64 data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="data" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v4.1 and ARB_viewport_array]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public static void GetDouble (MonoMac.OpenGL.GetIndexedPName target, int index, double* data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetDouble(valuetype MonoMac.OpenGL.GetIndexedPName target, int32 index, float64* data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="data" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v4.1 and ARB_viewport_array]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public static void GetDouble (MonoMac.OpenGL.GetIndexedPName target, int index, double[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetDouble(valuetype MonoMac.OpenGL.GetIndexedPName target, int32 index, float64[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="data" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v4.1 and ARB_viewport_array]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public static void GetDouble (MonoMac.OpenGL.GetIndexedPName target, uint index, out double data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetDouble(valuetype MonoMac.OpenGL.GetIndexedPName target, unsigned int32 index, float64 data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="data" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v4.1 and ARB_viewport_array]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public static void GetDouble (MonoMac.OpenGL.GetIndexedPName target, uint index, double* data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetDouble(valuetype MonoMac.OpenGL.GetIndexedPName target, unsigned int32 index, float64* data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="data" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v4.1 and ARB_viewport_array]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public static void GetDouble (MonoMac.OpenGL.GetIndexedPName target, uint index, double[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetDouble(valuetype MonoMac.OpenGL.GetIndexedPName target, unsigned int32 index, float64[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="data" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v4.1 and ARB_viewport_array]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetError">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.ErrorCode GetError ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.ErrorCode GetError() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.ErrorCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[requires: v1.0]
            Return error information
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public static void GetFloat (MonoMac.OpenGL.GetPName pname, out MonoMac.OpenGL.Matrix4 matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetFloat(valuetype MonoMac.OpenGL.GetPName pname, valuetype MonoMac.OpenGL.Matrix4 matrix) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="matrix" Type="MonoMac.OpenGL.Matrix4&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="matrix">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public static void GetFloat (MonoMac.OpenGL.GetPName pname, out MonoMac.OpenGL.Vector2 vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetFloat(valuetype MonoMac.OpenGL.GetPName pname, valuetype MonoMac.OpenGL.Vector2 vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public static void GetFloat (MonoMac.OpenGL.GetPName pname, out MonoMac.OpenGL.Vector3 vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetFloat(valuetype MonoMac.OpenGL.GetPName pname, valuetype MonoMac.OpenGL.Vector3 vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public static void GetFloat (MonoMac.OpenGL.GetPName pname, out MonoMac.OpenGL.Vector4 vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetFloat(valuetype MonoMac.OpenGL.GetPName pname, valuetype MonoMac.OpenGL.Vector4 vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector4&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public static void GetFloat (MonoMac.OpenGL.GetPName pname, out float params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetFloat(valuetype MonoMac.OpenGL.GetPName pname, float32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="params" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public static void GetFloat (MonoMac.OpenGL.GetPName pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetFloat(valuetype MonoMac.OpenGL.GetPName pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public static void GetFloat (MonoMac.OpenGL.GetPName pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetFloat(valuetype MonoMac.OpenGL.GetPName pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public static void GetFloat (MonoMac.OpenGL.GetIndexedPName target, int index, out float data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetFloat(valuetype MonoMac.OpenGL.GetIndexedPName target, int32 index, float32 data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="data" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v4.1 and ARB_viewport_array]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public static void GetFloat (MonoMac.OpenGL.GetIndexedPName target, int index, float* data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetFloat(valuetype MonoMac.OpenGL.GetIndexedPName target, int32 index, float32* data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="data" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v4.1 and ARB_viewport_array]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public static void GetFloat (MonoMac.OpenGL.GetIndexedPName target, int index, float[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetFloat(valuetype MonoMac.OpenGL.GetIndexedPName target, int32 index, float32[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="data" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v4.1 and ARB_viewport_array]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public static void GetFloat (MonoMac.OpenGL.GetIndexedPName target, uint index, out float data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetFloat(valuetype MonoMac.OpenGL.GetIndexedPName target, unsigned int32 index, float32 data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="data" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v4.1 and ARB_viewport_array]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public static void GetFloat (MonoMac.OpenGL.GetIndexedPName target, uint index, float* data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetFloat(valuetype MonoMac.OpenGL.GetIndexedPName target, unsigned int32 index, float32* data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="data" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v4.1 and ARB_viewport_array]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public static void GetFloat (MonoMac.OpenGL.GetIndexedPName target, uint index, float[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetFloat(valuetype MonoMac.OpenGL.GetIndexedPName target, unsigned int32 index, float32[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.GetIndexedPName" />
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="data" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="index">To be added.</param>
        <param name="data">To be added.</param>
        <summary>[requires: v4.1 and ARB_viewport_array]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistogram">
      <MemberSignature Language="C#" Value="public static void GetHistogram (MonoMac.OpenGL.HistogramTarget target, bool reset, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetHistogram(valuetype MonoMac.OpenGL.HistogramTarget target, bool reset, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.HistogramTarget" />
        <Parameter Name="reset" Type="System.Boolean" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="values" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be GL_HISTOGRAM.
            </para>
        </param>
        <param name="reset">
          <para>
            If GL_TRUE, each component counter that is actually returned is reset to zero. (Other counters are unaffected.) If GL_FALSE, none of the counters in the histogram table is modified.
            </para>
        </param>
        <param name="format">
          <para>
            The format of values to be returned in values. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of values to be returned in values. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="values">
          <para>
            A pointer to storage for the returned histogram table.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get histogram table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistogram&lt;T4&gt;">
      <MemberSignature Language="C#" Value="public static void GetHistogram&lt;T4&gt; (MonoMac.OpenGL.HistogramTarget target, bool reset, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T4 values) where T4 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetHistogram&lt;struct .ctor (class System.ValueType) T4&gt;(valuetype MonoMac.OpenGL.HistogramTarget target, bool reset, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T4 values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.HistogramTarget" />
        <Parameter Name="reset" Type="System.Boolean" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="values" Type="T4&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_HISTOGRAM.
            </para>
        </param>
        <param name="reset">
          <para>
            If GL_TRUE, each component counter that is actually returned is reset to zero. (Other counters are unaffected.) If GL_FALSE, none of the counters in the histogram table is modified.
            </para>
        </param>
        <param name="format">
          <para>
            The format of values to be returned in values. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of values to be returned in values. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="values">
          <para>
            A pointer to storage for the returned histogram table.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get histogram table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistogram&lt;T4&gt;">
      <MemberSignature Language="C#" Value="public static void GetHistogram&lt;T4&gt; (MonoMac.OpenGL.HistogramTarget target, bool reset, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T4[,,] values) where T4 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetHistogram&lt;struct .ctor (class System.ValueType) T4&gt;(valuetype MonoMac.OpenGL.HistogramTarget target, bool reset, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T4[,,] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.HistogramTarget" />
        <Parameter Name="reset" Type="System.Boolean" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="values" Type="T4[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_HISTOGRAM.
            </para>
        </param>
        <param name="reset">
          <para>
            If GL_TRUE, each component counter that is actually returned is reset to zero. (Other counters are unaffected.) If GL_FALSE, none of the counters in the histogram table is modified.
            </para>
        </param>
        <param name="format">
          <para>
            The format of values to be returned in values. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of values to be returned in values. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="values">
          <para>
            A pointer to storage for the returned histogram table.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get histogram table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistogram&lt;T4&gt;">
      <MemberSignature Language="C#" Value="public static void GetHistogram&lt;T4&gt; (MonoMac.OpenGL.HistogramTarget target, bool reset, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T4[,] values) where T4 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetHistogram&lt;struct .ctor (class System.ValueType) T4&gt;(valuetype MonoMac.OpenGL.HistogramTarget target, bool reset, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T4[,] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.HistogramTarget" />
        <Parameter Name="reset" Type="System.Boolean" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="values" Type="T4[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_HISTOGRAM.
            </para>
        </param>
        <param name="reset">
          <para>
            If GL_TRUE, each component counter that is actually returned is reset to zero. (Other counters are unaffected.) If GL_FALSE, none of the counters in the histogram table is modified.
            </para>
        </param>
        <param name="format">
          <para>
            The format of values to be returned in values. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of values to be returned in values. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="values">
          <para>
            A pointer to storage for the returned histogram table.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get histogram table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistogram&lt;T4&gt;">
      <MemberSignature Language="C#" Value="public static void GetHistogram&lt;T4&gt; (MonoMac.OpenGL.HistogramTarget target, bool reset, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T4[] values) where T4 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetHistogram&lt;struct .ctor (class System.ValueType) T4&gt;(valuetype MonoMac.OpenGL.HistogramTarget target, bool reset, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T4[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.HistogramTarget" />
        <Parameter Name="reset" Type="System.Boolean" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="values" Type="T4[]" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_HISTOGRAM.
            </para>
        </param>
        <param name="reset">
          <para>
            If GL_TRUE, each component counter that is actually returned is reset to zero. (Other counters are unaffected.) If GL_FALSE, none of the counters in the histogram table is modified.
            </para>
        </param>
        <param name="format">
          <para>
            The format of values to be returned in values. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of values to be returned in values. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="values">
          <para>
            A pointer to storage for the returned histogram table.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get histogram table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistogramParameter">
      <MemberSignature Language="C#" Value="public static void GetHistogramParameter (MonoMac.OpenGL.HistogramTarget target, MonoMac.OpenGL.GetHistogramParameterPName pname, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetHistogramParameter(valuetype MonoMac.OpenGL.HistogramTarget target, valuetype MonoMac.OpenGL.GetHistogramParameterPName pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.HistogramTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetHistogramParameterPName" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be one of GL_HISTOGRAM or GL_PROXY_HISTOGRAM.
            </para>
        </param>
        <param name="pname">
          <para>
            The name of the parameter to be retrieved. Must be one of GL_HISTOGRAM_WIDTH, GL_HISTOGRAM_FORMAT, GL_HISTOGRAM_RED_SIZE, GL_HISTOGRAM_GREEN_SIZE, GL_HISTOGRAM_BLUE_SIZE, GL_HISTOGRAM_ALPHA_SIZE, GL_HISTOGRAM_LUMINANCE_SIZE, or GL_HISTOGRAM_SINK.
            </para>
        </param>
        <param name="params">
          <para>
            Pointer to storage for the returned values.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get histogram parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistogramParameter">
      <MemberSignature Language="C#" Value="public static void GetHistogramParameter (MonoMac.OpenGL.HistogramTarget target, MonoMac.OpenGL.GetHistogramParameterPName pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetHistogramParameter(valuetype MonoMac.OpenGL.HistogramTarget target, valuetype MonoMac.OpenGL.GetHistogramParameterPName pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.HistogramTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetHistogramParameterPName" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be one of GL_HISTOGRAM or GL_PROXY_HISTOGRAM.
            </para>
        </param>
        <param name="pname">
          <para>
            The name of the parameter to be retrieved. Must be one of GL_HISTOGRAM_WIDTH, GL_HISTOGRAM_FORMAT, GL_HISTOGRAM_RED_SIZE, GL_HISTOGRAM_GREEN_SIZE, GL_HISTOGRAM_BLUE_SIZE, GL_HISTOGRAM_ALPHA_SIZE, GL_HISTOGRAM_LUMINANCE_SIZE, or GL_HISTOGRAM_SINK.
            </para>
        </param>
        <param name="params">
          <para>
            Pointer to storage for the returned values.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get histogram parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistogramParameter">
      <MemberSignature Language="C#" Value="public static void GetHistogramParameter (MonoMac.OpenGL.HistogramTarget target, MonoMac.OpenGL.GetHistogramParameterPName pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetHistogramParameter(valuetype MonoMac.OpenGL.HistogramTarget target, valuetype MonoMac.OpenGL.GetHistogramParameterPName pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.HistogramTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetHistogramParameterPName" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be one of GL_HISTOGRAM or GL_PROXY_HISTOGRAM.
            </para>
        </param>
        <param name="pname">
          <para>
            The name of the parameter to be retrieved. Must be one of GL_HISTOGRAM_WIDTH, GL_HISTOGRAM_FORMAT, GL_HISTOGRAM_RED_SIZE, GL_HISTOGRAM_GREEN_SIZE, GL_HISTOGRAM_BLUE_SIZE, GL_HISTOGRAM_ALPHA_SIZE, GL_HISTOGRAM_LUMINANCE_SIZE, or GL_HISTOGRAM_SINK.
            </para>
        </param>
        <param name="params">
          <para>
            Pointer to storage for the returned values.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get histogram parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistogramParameter">
      <MemberSignature Language="C#" Value="public static void GetHistogramParameter (MonoMac.OpenGL.HistogramTarget target, MonoMac.OpenGL.GetHistogramParameterPName pname, out float params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetHistogramParameter(valuetype MonoMac.OpenGL.HistogramTarget target, valuetype MonoMac.OpenGL.GetHistogramParameterPName pname, float32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.HistogramTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetHistogramParameterPName" />
        <Parameter Name="params" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be one of GL_HISTOGRAM or GL_PROXY_HISTOGRAM.
            </para>
        </param>
        <param name="pname">
          <para>
            The name of the parameter to be retrieved. Must be one of GL_HISTOGRAM_WIDTH, GL_HISTOGRAM_FORMAT, GL_HISTOGRAM_RED_SIZE, GL_HISTOGRAM_GREEN_SIZE, GL_HISTOGRAM_BLUE_SIZE, GL_HISTOGRAM_ALPHA_SIZE, GL_HISTOGRAM_LUMINANCE_SIZE, or GL_HISTOGRAM_SINK.
            </para>
        </param>
        <param name="params">
          <para>
            Pointer to storage for the returned values.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get histogram parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistogramParameter">
      <MemberSignature Language="C#" Value="public static void GetHistogramParameter (MonoMac.OpenGL.HistogramTarget target, MonoMac.OpenGL.GetHistogramParameterPName pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetHistogramParameter(valuetype MonoMac.OpenGL.HistogramTarget target, valuetype MonoMac.OpenGL.GetHistogramParameterPName pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.HistogramTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetHistogramParameterPName" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be one of GL_HISTOGRAM or GL_PROXY_HISTOGRAM.
            </para>
        </param>
        <param name="pname">
          <para>
            The name of the parameter to be retrieved. Must be one of GL_HISTOGRAM_WIDTH, GL_HISTOGRAM_FORMAT, GL_HISTOGRAM_RED_SIZE, GL_HISTOGRAM_GREEN_SIZE, GL_HISTOGRAM_BLUE_SIZE, GL_HISTOGRAM_ALPHA_SIZE, GL_HISTOGRAM_LUMINANCE_SIZE, or GL_HISTOGRAM_SINK.
            </para>
        </param>
        <param name="params">
          <para>
            Pointer to storage for the returned values.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get histogram parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistogramParameter">
      <MemberSignature Language="C#" Value="public static void GetHistogramParameter (MonoMac.OpenGL.HistogramTarget target, MonoMac.OpenGL.GetHistogramParameterPName pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetHistogramParameter(valuetype MonoMac.OpenGL.HistogramTarget target, valuetype MonoMac.OpenGL.GetHistogramParameterPName pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.HistogramTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetHistogramParameterPName" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be one of GL_HISTOGRAM or GL_PROXY_HISTOGRAM.
            </para>
        </param>
        <param name="pname">
          <para>
            The name of the parameter to be retrieved. Must be one of GL_HISTOGRAM_WIDTH, GL_HISTOGRAM_FORMAT, GL_HISTOGRAM_RED_SIZE, GL_HISTOGRAM_GREEN_SIZE, GL_HISTOGRAM_BLUE_SIZE, GL_HISTOGRAM_ALPHA_SIZE, GL_HISTOGRAM_LUMINANCE_SIZE, or GL_HISTOGRAM_SINK.
            </para>
        </param>
        <param name="params">
          <para>
            Pointer to storage for the returned values.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get histogram parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInteger">
      <MemberSignature Language="C#" Value="public static void GetInteger (MonoMac.OpenGL.GetPName pname, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetInteger(valuetype MonoMac.OpenGL.GetPName pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInteger">
      <MemberSignature Language="C#" Value="public static void GetInteger (MonoMac.OpenGL.GetPName pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetInteger(valuetype MonoMac.OpenGL.GetPName pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInteger">
      <MemberSignature Language="C#" Value="public static void GetInteger (MonoMac.OpenGL.GetPName pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetInteger(valuetype MonoMac.OpenGL.GetPName pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPName" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLight">
      <MemberSignature Language="C#" Value="public static void GetLight (MonoMac.OpenGL.LightName light, MonoMac.OpenGL.LightParameter pname, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetLight(valuetype MonoMac.OpenGL.LightName light, valuetype MonoMac.OpenGL.LightParameter pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="light" Type="MonoMac.OpenGL.LightName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightParameter" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="light">
          <para>
            Specifies a light source. The number of possible lights depends on the implementation, but at least eight lights are supported. They are identified by symbolic names of the form GL_LIGHT where ranges from 0 to the value of GL_MAX_LIGHTS - 1.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies a light source parameter for light. Accepted symbolic names are GL_AMBIENT, GL_DIFFUSE, GL_SPECULAR, GL_POSITION, GL_SPOT_DIRECTION, GL_SPOT_EXPONENT, GL_SPOT_CUTOFF, GL_CONSTANT_ATTENUATION, GL_LINEAR_ATTENUATION, and GL_QUADRATIC_ATTENUATION.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return light source parameter values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLight">
      <MemberSignature Language="C#" Value="public static void GetLight (MonoMac.OpenGL.LightName light, MonoMac.OpenGL.LightParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetLight(valuetype MonoMac.OpenGL.LightName light, valuetype MonoMac.OpenGL.LightParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="light" Type="MonoMac.OpenGL.LightName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="light">
          <para>
            Specifies a light source. The number of possible lights depends on the implementation, but at least eight lights are supported. They are identified by symbolic names of the form GL_LIGHT where ranges from 0 to the value of GL_MAX_LIGHTS - 1.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies a light source parameter for light. Accepted symbolic names are GL_AMBIENT, GL_DIFFUSE, GL_SPECULAR, GL_POSITION, GL_SPOT_DIRECTION, GL_SPOT_EXPONENT, GL_SPOT_CUTOFF, GL_CONSTANT_ATTENUATION, GL_LINEAR_ATTENUATION, and GL_QUADRATIC_ATTENUATION.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return light source parameter values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLight">
      <MemberSignature Language="C#" Value="public static void GetLight (MonoMac.OpenGL.LightName light, MonoMac.OpenGL.LightParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetLight(valuetype MonoMac.OpenGL.LightName light, valuetype MonoMac.OpenGL.LightParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="light" Type="MonoMac.OpenGL.LightName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="light">
          <para>
            Specifies a light source. The number of possible lights depends on the implementation, but at least eight lights are supported. They are identified by symbolic names of the form GL_LIGHT where ranges from 0 to the value of GL_MAX_LIGHTS - 1.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies a light source parameter for light. Accepted symbolic names are GL_AMBIENT, GL_DIFFUSE, GL_SPECULAR, GL_POSITION, GL_SPOT_DIRECTION, GL_SPOT_EXPONENT, GL_SPOT_CUTOFF, GL_CONSTANT_ATTENUATION, GL_LINEAR_ATTENUATION, and GL_QUADRATIC_ATTENUATION.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return light source parameter values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLight">
      <MemberSignature Language="C#" Value="public static void GetLight (MonoMac.OpenGL.LightName light, MonoMac.OpenGL.LightParameter pname, out float params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetLight(valuetype MonoMac.OpenGL.LightName light, valuetype MonoMac.OpenGL.LightParameter pname, float32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="light" Type="MonoMac.OpenGL.LightName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightParameter" />
        <Parameter Name="params" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="light">
          <para>
            Specifies a light source. The number of possible lights depends on the implementation, but at least eight lights are supported. They are identified by symbolic names of the form GL_LIGHT where ranges from 0 to the value of GL_MAX_LIGHTS - 1.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies a light source parameter for light. Accepted symbolic names are GL_AMBIENT, GL_DIFFUSE, GL_SPECULAR, GL_POSITION, GL_SPOT_DIRECTION, GL_SPOT_EXPONENT, GL_SPOT_CUTOFF, GL_CONSTANT_ATTENUATION, GL_LINEAR_ATTENUATION, and GL_QUADRATIC_ATTENUATION.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return light source parameter values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLight">
      <MemberSignature Language="C#" Value="public static void GetLight (MonoMac.OpenGL.LightName light, MonoMac.OpenGL.LightParameter pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetLight(valuetype MonoMac.OpenGL.LightName light, valuetype MonoMac.OpenGL.LightParameter pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="light" Type="MonoMac.OpenGL.LightName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightParameter" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="light">
          <para>
            Specifies a light source. The number of possible lights depends on the implementation, but at least eight lights are supported. They are identified by symbolic names of the form GL_LIGHT where ranges from 0 to the value of GL_MAX_LIGHTS - 1.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies a light source parameter for light. Accepted symbolic names are GL_AMBIENT, GL_DIFFUSE, GL_SPECULAR, GL_POSITION, GL_SPOT_DIRECTION, GL_SPOT_EXPONENT, GL_SPOT_CUTOFF, GL_CONSTANT_ATTENUATION, GL_LINEAR_ATTENUATION, and GL_QUADRATIC_ATTENUATION.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return light source parameter values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLight">
      <MemberSignature Language="C#" Value="public static void GetLight (MonoMac.OpenGL.LightName light, MonoMac.OpenGL.LightParameter pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetLight(valuetype MonoMac.OpenGL.LightName light, valuetype MonoMac.OpenGL.LightParameter pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="light" Type="MonoMac.OpenGL.LightName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightParameter" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="light">
          <para>
            Specifies a light source. The number of possible lights depends on the implementation, but at least eight lights are supported. They are identified by symbolic names of the form GL_LIGHT where ranges from 0 to the value of GL_MAX_LIGHTS - 1.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies a light source parameter for light. Accepted symbolic names are GL_AMBIENT, GL_DIFFUSE, GL_SPECULAR, GL_POSITION, GL_SPOT_DIRECTION, GL_SPOT_EXPONENT, GL_SPOT_CUTOFF, GL_CONSTANT_ATTENUATION, GL_LINEAR_ATTENUATION, and GL_QUADRATIC_ATTENUATION.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return light source parameter values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMap">
      <MemberSignature Language="C#" Value="public static void GetMap (MonoMac.OpenGL.MapTarget target, MonoMac.OpenGL.GetMapQuery query, out double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMap(valuetype MonoMac.OpenGL.MapTarget target, valuetype MonoMac.OpenGL.GetMapQuery query, float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="query" Type="MonoMac.OpenGL.GetMapQuery" />
        <Parameter Name="v" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of a map. Accepted values are GL_MAP1_COLOR_4, GL_MAP1_INDEX, GL_MAP1_NORMAL, GL_MAP1_TEXTURE_COORD_1, GL_MAP1_TEXTURE_COORD_2, GL_MAP1_TEXTURE_COORD_3, GL_MAP1_TEXTURE_COORD_4, GL_MAP1_VERTEX_3, GL_MAP1_VERTEX_4, GL_MAP2_COLOR_4, GL_MAP2_INDEX, GL_MAP2_NORMAL, GL_MAP2_TEXTURE_COORD_1, GL_MAP2_TEXTURE_COORD_2, GL_MAP2_TEXTURE_COORD_3, GL_MAP2_TEXTURE_COORD_4, GL_MAP2_VERTEX_3, and GL_MAP2_VERTEX_4.
            </para>
        </param>
        <param name="query">
          <para>
            Specifies which parameter to return. Symbolic names GL_COEFF, GL_ORDER, and GL_DOMAIN are accepted.
            </para>
        </param>
        <param name="v">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return evaluator parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMap">
      <MemberSignature Language="C#" Value="public static void GetMap (MonoMac.OpenGL.MapTarget target, MonoMac.OpenGL.GetMapQuery query, double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMap(valuetype MonoMac.OpenGL.MapTarget target, valuetype MonoMac.OpenGL.GetMapQuery query, float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="query" Type="MonoMac.OpenGL.GetMapQuery" />
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of a map. Accepted values are GL_MAP1_COLOR_4, GL_MAP1_INDEX, GL_MAP1_NORMAL, GL_MAP1_TEXTURE_COORD_1, GL_MAP1_TEXTURE_COORD_2, GL_MAP1_TEXTURE_COORD_3, GL_MAP1_TEXTURE_COORD_4, GL_MAP1_VERTEX_3, GL_MAP1_VERTEX_4, GL_MAP2_COLOR_4, GL_MAP2_INDEX, GL_MAP2_NORMAL, GL_MAP2_TEXTURE_COORD_1, GL_MAP2_TEXTURE_COORD_2, GL_MAP2_TEXTURE_COORD_3, GL_MAP2_TEXTURE_COORD_4, GL_MAP2_VERTEX_3, and GL_MAP2_VERTEX_4.
            </para>
        </param>
        <param name="query">
          <para>
            Specifies which parameter to return. Symbolic names GL_COEFF, GL_ORDER, and GL_DOMAIN are accepted.
            </para>
        </param>
        <param name="v">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return evaluator parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMap">
      <MemberSignature Language="C#" Value="public static void GetMap (MonoMac.OpenGL.MapTarget target, MonoMac.OpenGL.GetMapQuery query, double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMap(valuetype MonoMac.OpenGL.MapTarget target, valuetype MonoMac.OpenGL.GetMapQuery query, float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="query" Type="MonoMac.OpenGL.GetMapQuery" />
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of a map. Accepted values are GL_MAP1_COLOR_4, GL_MAP1_INDEX, GL_MAP1_NORMAL, GL_MAP1_TEXTURE_COORD_1, GL_MAP1_TEXTURE_COORD_2, GL_MAP1_TEXTURE_COORD_3, GL_MAP1_TEXTURE_COORD_4, GL_MAP1_VERTEX_3, GL_MAP1_VERTEX_4, GL_MAP2_COLOR_4, GL_MAP2_INDEX, GL_MAP2_NORMAL, GL_MAP2_TEXTURE_COORD_1, GL_MAP2_TEXTURE_COORD_2, GL_MAP2_TEXTURE_COORD_3, GL_MAP2_TEXTURE_COORD_4, GL_MAP2_VERTEX_3, and GL_MAP2_VERTEX_4.
            </para>
        </param>
        <param name="query">
          <para>
            Specifies which parameter to return. Symbolic names GL_COEFF, GL_ORDER, and GL_DOMAIN are accepted.
            </para>
        </param>
        <param name="v">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return evaluator parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMap">
      <MemberSignature Language="C#" Value="public static void GetMap (MonoMac.OpenGL.MapTarget target, MonoMac.OpenGL.GetMapQuery query, out int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMap(valuetype MonoMac.OpenGL.MapTarget target, valuetype MonoMac.OpenGL.GetMapQuery query, int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="query" Type="MonoMac.OpenGL.GetMapQuery" />
        <Parameter Name="v" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of a map. Accepted values are GL_MAP1_COLOR_4, GL_MAP1_INDEX, GL_MAP1_NORMAL, GL_MAP1_TEXTURE_COORD_1, GL_MAP1_TEXTURE_COORD_2, GL_MAP1_TEXTURE_COORD_3, GL_MAP1_TEXTURE_COORD_4, GL_MAP1_VERTEX_3, GL_MAP1_VERTEX_4, GL_MAP2_COLOR_4, GL_MAP2_INDEX, GL_MAP2_NORMAL, GL_MAP2_TEXTURE_COORD_1, GL_MAP2_TEXTURE_COORD_2, GL_MAP2_TEXTURE_COORD_3, GL_MAP2_TEXTURE_COORD_4, GL_MAP2_VERTEX_3, and GL_MAP2_VERTEX_4.
            </para>
        </param>
        <param name="query">
          <para>
            Specifies which parameter to return. Symbolic names GL_COEFF, GL_ORDER, and GL_DOMAIN are accepted.
            </para>
        </param>
        <param name="v">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return evaluator parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMap">
      <MemberSignature Language="C#" Value="public static void GetMap (MonoMac.OpenGL.MapTarget target, MonoMac.OpenGL.GetMapQuery query, int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMap(valuetype MonoMac.OpenGL.MapTarget target, valuetype MonoMac.OpenGL.GetMapQuery query, int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="query" Type="MonoMac.OpenGL.GetMapQuery" />
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of a map. Accepted values are GL_MAP1_COLOR_4, GL_MAP1_INDEX, GL_MAP1_NORMAL, GL_MAP1_TEXTURE_COORD_1, GL_MAP1_TEXTURE_COORD_2, GL_MAP1_TEXTURE_COORD_3, GL_MAP1_TEXTURE_COORD_4, GL_MAP1_VERTEX_3, GL_MAP1_VERTEX_4, GL_MAP2_COLOR_4, GL_MAP2_INDEX, GL_MAP2_NORMAL, GL_MAP2_TEXTURE_COORD_1, GL_MAP2_TEXTURE_COORD_2, GL_MAP2_TEXTURE_COORD_3, GL_MAP2_TEXTURE_COORD_4, GL_MAP2_VERTEX_3, and GL_MAP2_VERTEX_4.
            </para>
        </param>
        <param name="query">
          <para>
            Specifies which parameter to return. Symbolic names GL_COEFF, GL_ORDER, and GL_DOMAIN are accepted.
            </para>
        </param>
        <param name="v">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return evaluator parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMap">
      <MemberSignature Language="C#" Value="public static void GetMap (MonoMac.OpenGL.MapTarget target, MonoMac.OpenGL.GetMapQuery query, int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMap(valuetype MonoMac.OpenGL.MapTarget target, valuetype MonoMac.OpenGL.GetMapQuery query, int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="query" Type="MonoMac.OpenGL.GetMapQuery" />
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of a map. Accepted values are GL_MAP1_COLOR_4, GL_MAP1_INDEX, GL_MAP1_NORMAL, GL_MAP1_TEXTURE_COORD_1, GL_MAP1_TEXTURE_COORD_2, GL_MAP1_TEXTURE_COORD_3, GL_MAP1_TEXTURE_COORD_4, GL_MAP1_VERTEX_3, GL_MAP1_VERTEX_4, GL_MAP2_COLOR_4, GL_MAP2_INDEX, GL_MAP2_NORMAL, GL_MAP2_TEXTURE_COORD_1, GL_MAP2_TEXTURE_COORD_2, GL_MAP2_TEXTURE_COORD_3, GL_MAP2_TEXTURE_COORD_4, GL_MAP2_VERTEX_3, and GL_MAP2_VERTEX_4.
            </para>
        </param>
        <param name="query">
          <para>
            Specifies which parameter to return. Symbolic names GL_COEFF, GL_ORDER, and GL_DOMAIN are accepted.
            </para>
        </param>
        <param name="v">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return evaluator parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMap">
      <MemberSignature Language="C#" Value="public static void GetMap (MonoMac.OpenGL.MapTarget target, MonoMac.OpenGL.GetMapQuery query, out float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMap(valuetype MonoMac.OpenGL.MapTarget target, valuetype MonoMac.OpenGL.GetMapQuery query, float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="query" Type="MonoMac.OpenGL.GetMapQuery" />
        <Parameter Name="v" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of a map. Accepted values are GL_MAP1_COLOR_4, GL_MAP1_INDEX, GL_MAP1_NORMAL, GL_MAP1_TEXTURE_COORD_1, GL_MAP1_TEXTURE_COORD_2, GL_MAP1_TEXTURE_COORD_3, GL_MAP1_TEXTURE_COORD_4, GL_MAP1_VERTEX_3, GL_MAP1_VERTEX_4, GL_MAP2_COLOR_4, GL_MAP2_INDEX, GL_MAP2_NORMAL, GL_MAP2_TEXTURE_COORD_1, GL_MAP2_TEXTURE_COORD_2, GL_MAP2_TEXTURE_COORD_3, GL_MAP2_TEXTURE_COORD_4, GL_MAP2_VERTEX_3, and GL_MAP2_VERTEX_4.
            </para>
        </param>
        <param name="query">
          <para>
            Specifies which parameter to return. Symbolic names GL_COEFF, GL_ORDER, and GL_DOMAIN are accepted.
            </para>
        </param>
        <param name="v">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return evaluator parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMap">
      <MemberSignature Language="C#" Value="public static void GetMap (MonoMac.OpenGL.MapTarget target, MonoMac.OpenGL.GetMapQuery query, float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMap(valuetype MonoMac.OpenGL.MapTarget target, valuetype MonoMac.OpenGL.GetMapQuery query, float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="query" Type="MonoMac.OpenGL.GetMapQuery" />
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of a map. Accepted values are GL_MAP1_COLOR_4, GL_MAP1_INDEX, GL_MAP1_NORMAL, GL_MAP1_TEXTURE_COORD_1, GL_MAP1_TEXTURE_COORD_2, GL_MAP1_TEXTURE_COORD_3, GL_MAP1_TEXTURE_COORD_4, GL_MAP1_VERTEX_3, GL_MAP1_VERTEX_4, GL_MAP2_COLOR_4, GL_MAP2_INDEX, GL_MAP2_NORMAL, GL_MAP2_TEXTURE_COORD_1, GL_MAP2_TEXTURE_COORD_2, GL_MAP2_TEXTURE_COORD_3, GL_MAP2_TEXTURE_COORD_4, GL_MAP2_VERTEX_3, and GL_MAP2_VERTEX_4.
            </para>
        </param>
        <param name="query">
          <para>
            Specifies which parameter to return. Symbolic names GL_COEFF, GL_ORDER, and GL_DOMAIN are accepted.
            </para>
        </param>
        <param name="v">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return evaluator parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMap">
      <MemberSignature Language="C#" Value="public static void GetMap (MonoMac.OpenGL.MapTarget target, MonoMac.OpenGL.GetMapQuery query, float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMap(valuetype MonoMac.OpenGL.MapTarget target, valuetype MonoMac.OpenGL.GetMapQuery query, float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="query" Type="MonoMac.OpenGL.GetMapQuery" />
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of a map. Accepted values are GL_MAP1_COLOR_4, GL_MAP1_INDEX, GL_MAP1_NORMAL, GL_MAP1_TEXTURE_COORD_1, GL_MAP1_TEXTURE_COORD_2, GL_MAP1_TEXTURE_COORD_3, GL_MAP1_TEXTURE_COORD_4, GL_MAP1_VERTEX_3, GL_MAP1_VERTEX_4, GL_MAP2_COLOR_4, GL_MAP2_INDEX, GL_MAP2_NORMAL, GL_MAP2_TEXTURE_COORD_1, GL_MAP2_TEXTURE_COORD_2, GL_MAP2_TEXTURE_COORD_3, GL_MAP2_TEXTURE_COORD_4, GL_MAP2_VERTEX_3, and GL_MAP2_VERTEX_4.
            </para>
        </param>
        <param name="query">
          <para>
            Specifies which parameter to return. Symbolic names GL_COEFF, GL_ORDER, and GL_DOMAIN are accepted.
            </para>
        </param>
        <param name="v">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return evaluator parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaterial">
      <MemberSignature Language="C#" Value="public static void GetMaterial (MonoMac.OpenGL.MaterialFace face, MonoMac.OpenGL.MaterialParameter pname, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMaterial(valuetype MonoMac.OpenGL.MaterialFace face, valuetype MonoMac.OpenGL.MaterialParameter pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.MaterialFace" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.MaterialParameter" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies which of the two materials is being queried. GL_FRONT or GL_BACK are accepted, representing the front and back materials, respectively.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the material parameter to return. GL_AMBIENT, GL_DIFFUSE, GL_SPECULAR, GL_EMISSION, GL_SHININESS, and GL_COLOR_INDEXES are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return material parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaterial">
      <MemberSignature Language="C#" Value="public static void GetMaterial (MonoMac.OpenGL.MaterialFace face, MonoMac.OpenGL.MaterialParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMaterial(valuetype MonoMac.OpenGL.MaterialFace face, valuetype MonoMac.OpenGL.MaterialParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.MaterialFace" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.MaterialParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies which of the two materials is being queried. GL_FRONT or GL_BACK are accepted, representing the front and back materials, respectively.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the material parameter to return. GL_AMBIENT, GL_DIFFUSE, GL_SPECULAR, GL_EMISSION, GL_SHININESS, and GL_COLOR_INDEXES are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return material parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaterial">
      <MemberSignature Language="C#" Value="public static void GetMaterial (MonoMac.OpenGL.MaterialFace face, MonoMac.OpenGL.MaterialParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMaterial(valuetype MonoMac.OpenGL.MaterialFace face, valuetype MonoMac.OpenGL.MaterialParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.MaterialFace" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.MaterialParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies which of the two materials is being queried. GL_FRONT or GL_BACK are accepted, representing the front and back materials, respectively.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the material parameter to return. GL_AMBIENT, GL_DIFFUSE, GL_SPECULAR, GL_EMISSION, GL_SHININESS, and GL_COLOR_INDEXES are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return material parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaterial">
      <MemberSignature Language="C#" Value="public static void GetMaterial (MonoMac.OpenGL.MaterialFace face, MonoMac.OpenGL.MaterialParameter pname, out float params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMaterial(valuetype MonoMac.OpenGL.MaterialFace face, valuetype MonoMac.OpenGL.MaterialParameter pname, float32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.MaterialFace" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.MaterialParameter" />
        <Parameter Name="params" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies which of the two materials is being queried. GL_FRONT or GL_BACK are accepted, representing the front and back materials, respectively.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the material parameter to return. GL_AMBIENT, GL_DIFFUSE, GL_SPECULAR, GL_EMISSION, GL_SHININESS, and GL_COLOR_INDEXES are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return material parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaterial">
      <MemberSignature Language="C#" Value="public static void GetMaterial (MonoMac.OpenGL.MaterialFace face, MonoMac.OpenGL.MaterialParameter pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMaterial(valuetype MonoMac.OpenGL.MaterialFace face, valuetype MonoMac.OpenGL.MaterialParameter pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.MaterialFace" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.MaterialParameter" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies which of the two materials is being queried. GL_FRONT or GL_BACK are accepted, representing the front and back materials, respectively.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the material parameter to return. GL_AMBIENT, GL_DIFFUSE, GL_SPECULAR, GL_EMISSION, GL_SHININESS, and GL_COLOR_INDEXES are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return material parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaterial">
      <MemberSignature Language="C#" Value="public static void GetMaterial (MonoMac.OpenGL.MaterialFace face, MonoMac.OpenGL.MaterialParameter pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMaterial(valuetype MonoMac.OpenGL.MaterialFace face, valuetype MonoMac.OpenGL.MaterialParameter pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.MaterialFace" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.MaterialParameter" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies which of the two materials is being queried. GL_FRONT or GL_BACK are accepted, representing the front and back materials, respectively.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the material parameter to return. GL_AMBIENT, GL_DIFFUSE, GL_SPECULAR, GL_EMISSION, GL_SHININESS, and GL_COLOR_INDEXES are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return material parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMinmax">
      <MemberSignature Language="C#" Value="public static void GetMinmax (MonoMac.OpenGL.MinmaxTarget target, bool reset, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMinmax(valuetype MonoMac.OpenGL.MinmaxTarget target, bool reset, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MinmaxTarget" />
        <Parameter Name="reset" Type="System.Boolean" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="values" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be GL_MINMAX.
            </para>
        </param>
        <param name="reset">
          <para>
            If GL_TRUE, all entries in the minmax table that are actually returned are reset to their initial values. (Other entries are unaltered.) If GL_FALSE, the minmax table is unaltered.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the data to be returned in values. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">To be added.</param>
        <param name="values">
          <para>
            A pointer to storage for the returned values.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get minimum and maximum pixel values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMinmax&lt;T4&gt;">
      <MemberSignature Language="C#" Value="public static void GetMinmax&lt;T4&gt; (MonoMac.OpenGL.MinmaxTarget target, bool reset, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T4 values) where T4 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMinmax&lt;struct .ctor (class System.ValueType) T4&gt;(valuetype MonoMac.OpenGL.MinmaxTarget target, bool reset, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T4 values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MinmaxTarget" />
        <Parameter Name="reset" Type="System.Boolean" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="values" Type="T4&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_MINMAX.
            </para>
        </param>
        <param name="reset">
          <para>
            If GL_TRUE, all entries in the minmax table that are actually returned are reset to their initial values. (Other entries are unaltered.) If GL_FALSE, the minmax table is unaltered.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the data to be returned in values. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">To be added.</param>
        <param name="values">
          <para>
            A pointer to storage for the returned values.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get minimum and maximum pixel values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMinmax&lt;T4&gt;">
      <MemberSignature Language="C#" Value="public static void GetMinmax&lt;T4&gt; (MonoMac.OpenGL.MinmaxTarget target, bool reset, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T4[,,] values) where T4 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMinmax&lt;struct .ctor (class System.ValueType) T4&gt;(valuetype MonoMac.OpenGL.MinmaxTarget target, bool reset, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T4[,,] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MinmaxTarget" />
        <Parameter Name="reset" Type="System.Boolean" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="values" Type="T4[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_MINMAX.
            </para>
        </param>
        <param name="reset">
          <para>
            If GL_TRUE, all entries in the minmax table that are actually returned are reset to their initial values. (Other entries are unaltered.) If GL_FALSE, the minmax table is unaltered.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the data to be returned in values. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">To be added.</param>
        <param name="values">
          <para>
            A pointer to storage for the returned values.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get minimum and maximum pixel values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMinmax&lt;T4&gt;">
      <MemberSignature Language="C#" Value="public static void GetMinmax&lt;T4&gt; (MonoMac.OpenGL.MinmaxTarget target, bool reset, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T4[,] values) where T4 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMinmax&lt;struct .ctor (class System.ValueType) T4&gt;(valuetype MonoMac.OpenGL.MinmaxTarget target, bool reset, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T4[,] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MinmaxTarget" />
        <Parameter Name="reset" Type="System.Boolean" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="values" Type="T4[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_MINMAX.
            </para>
        </param>
        <param name="reset">
          <para>
            If GL_TRUE, all entries in the minmax table that are actually returned are reset to their initial values. (Other entries are unaltered.) If GL_FALSE, the minmax table is unaltered.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the data to be returned in values. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">To be added.</param>
        <param name="values">
          <para>
            A pointer to storage for the returned values.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get minimum and maximum pixel values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMinmax&lt;T4&gt;">
      <MemberSignature Language="C#" Value="public static void GetMinmax&lt;T4&gt; (MonoMac.OpenGL.MinmaxTarget target, bool reset, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T4[] values) where T4 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMinmax&lt;struct .ctor (class System.ValueType) T4&gt;(valuetype MonoMac.OpenGL.MinmaxTarget target, bool reset, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T4[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MinmaxTarget" />
        <Parameter Name="reset" Type="System.Boolean" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="values" Type="T4[]" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_MINMAX.
            </para>
        </param>
        <param name="reset">
          <para>
            If GL_TRUE, all entries in the minmax table that are actually returned are reset to their initial values. (Other entries are unaltered.) If GL_FALSE, the minmax table is unaltered.
            </para>
        </param>
        <param name="format">
          <para>
            The format of the data to be returned in values. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">To be added.</param>
        <param name="values">
          <para>
            A pointer to storage for the returned values.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get minimum and maximum pixel values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMinmaxParameter">
      <MemberSignature Language="C#" Value="public static void GetMinmaxParameter (MonoMac.OpenGL.MinmaxTarget target, MonoMac.OpenGL.GetMinmaxParameterPName pname, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMinmaxParameter(valuetype MonoMac.OpenGL.MinmaxTarget target, valuetype MonoMac.OpenGL.GetMinmaxParameterPName pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MinmaxTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetMinmaxParameterPName" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be GL_MINMAX.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be retrieved. Must be one of GL_MINMAX_FORMAT or GL_MINMAX_SINK.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to storage for the retrieved parameters.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get minmax parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMinmaxParameter">
      <MemberSignature Language="C#" Value="public static void GetMinmaxParameter (MonoMac.OpenGL.MinmaxTarget target, MonoMac.OpenGL.GetMinmaxParameterPName pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMinmaxParameter(valuetype MonoMac.OpenGL.MinmaxTarget target, valuetype MonoMac.OpenGL.GetMinmaxParameterPName pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MinmaxTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetMinmaxParameterPName" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be GL_MINMAX.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be retrieved. Must be one of GL_MINMAX_FORMAT or GL_MINMAX_SINK.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to storage for the retrieved parameters.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get minmax parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMinmaxParameter">
      <MemberSignature Language="C#" Value="public static void GetMinmaxParameter (MonoMac.OpenGL.MinmaxTarget target, MonoMac.OpenGL.GetMinmaxParameterPName pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMinmaxParameter(valuetype MonoMac.OpenGL.MinmaxTarget target, valuetype MonoMac.OpenGL.GetMinmaxParameterPName pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MinmaxTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetMinmaxParameterPName" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be GL_MINMAX.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be retrieved. Must be one of GL_MINMAX_FORMAT or GL_MINMAX_SINK.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to storage for the retrieved parameters.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get minmax parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMinmaxParameter">
      <MemberSignature Language="C#" Value="public static void GetMinmaxParameter (MonoMac.OpenGL.MinmaxTarget target, MonoMac.OpenGL.GetMinmaxParameterPName pname, out float params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMinmaxParameter(valuetype MonoMac.OpenGL.MinmaxTarget target, valuetype MonoMac.OpenGL.GetMinmaxParameterPName pname, float32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MinmaxTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetMinmaxParameterPName" />
        <Parameter Name="params" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be GL_MINMAX.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be retrieved. Must be one of GL_MINMAX_FORMAT or GL_MINMAX_SINK.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to storage for the retrieved parameters.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get minmax parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMinmaxParameter">
      <MemberSignature Language="C#" Value="public static void GetMinmaxParameter (MonoMac.OpenGL.MinmaxTarget target, MonoMac.OpenGL.GetMinmaxParameterPName pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMinmaxParameter(valuetype MonoMac.OpenGL.MinmaxTarget target, valuetype MonoMac.OpenGL.GetMinmaxParameterPName pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MinmaxTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetMinmaxParameterPName" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be GL_MINMAX.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be retrieved. Must be one of GL_MINMAX_FORMAT or GL_MINMAX_SINK.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to storage for the retrieved parameters.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get minmax parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMinmaxParameter">
      <MemberSignature Language="C#" Value="public static void GetMinmaxParameter (MonoMac.OpenGL.MinmaxTarget target, MonoMac.OpenGL.GetMinmaxParameterPName pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMinmaxParameter(valuetype MonoMac.OpenGL.MinmaxTarget target, valuetype MonoMac.OpenGL.GetMinmaxParameterPName pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MinmaxTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetMinmaxParameterPName" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be GL_MINMAX.
            </para>
        </param>
        <param name="pname">
          <para>
            The parameter to be retrieved. Must be one of GL_MINMAX_FORMAT or GL_MINMAX_SINK.
            </para>
        </param>
        <param name="params">
          <para>
            A pointer to storage for the retrieved parameters.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get minmax parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelMap">
      <MemberSignature Language="C#" Value="public static void GetPixelMap (MonoMac.OpenGL.PixelMap map, out short values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPixelMap(valuetype MonoMac.OpenGL.PixelMap map, int16 values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="values" Type="System.Int16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies the name of the pixel map to return. Accepted values are GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, and GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="values">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the specified pixel map
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelMap">
      <MemberSignature Language="C#" Value="public static void GetPixelMap (MonoMac.OpenGL.PixelMap map, short* values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPixelMap(valuetype MonoMac.OpenGL.PixelMap map, int16* values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="values" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies the name of the pixel map to return. Accepted values are GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, and GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="values">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the specified pixel map
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelMap">
      <MemberSignature Language="C#" Value="public static void GetPixelMap (MonoMac.OpenGL.PixelMap map, short[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPixelMap(valuetype MonoMac.OpenGL.PixelMap map, int16[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="values" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies the name of the pixel map to return. Accepted values are GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, and GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="values">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the specified pixel map
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelMap">
      <MemberSignature Language="C#" Value="public static void GetPixelMap (MonoMac.OpenGL.PixelMap map, out int values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32 values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="values" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies the name of the pixel map to return. Accepted values are GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, and GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="values">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the specified pixel map
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelMap">
      <MemberSignature Language="C#" Value="public static void GetPixelMap (MonoMac.OpenGL.PixelMap map, int* values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32* values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="values" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies the name of the pixel map to return. Accepted values are GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, and GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="values">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the specified pixel map
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelMap">
      <MemberSignature Language="C#" Value="public static void GetPixelMap (MonoMac.OpenGL.PixelMap map, int[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="values" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies the name of the pixel map to return. Accepted values are GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, and GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="values">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the specified pixel map
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelMap">
      <MemberSignature Language="C#" Value="public static void GetPixelMap (MonoMac.OpenGL.PixelMap map, out float values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPixelMap(valuetype MonoMac.OpenGL.PixelMap map, float32 values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="values" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies the name of the pixel map to return. Accepted values are GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, and GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="values">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the specified pixel map
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelMap">
      <MemberSignature Language="C#" Value="public static void GetPixelMap (MonoMac.OpenGL.PixelMap map, float* values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPixelMap(valuetype MonoMac.OpenGL.PixelMap map, float32* values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="values" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies the name of the pixel map to return. Accepted values are GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, and GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="values">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the specified pixel map
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelMap">
      <MemberSignature Language="C#" Value="public static void GetPixelMap (MonoMac.OpenGL.PixelMap map, float[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPixelMap(valuetype MonoMac.OpenGL.PixelMap map, float32[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="values" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies the name of the pixel map to return. Accepted values are GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, and GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="values">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the specified pixel map
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelMap">
      <MemberSignature Language="C#" Value="public static void GetPixelMap (MonoMac.OpenGL.PixelMap map, out ushort values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPixelMap(valuetype MonoMac.OpenGL.PixelMap map, unsigned int16 values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="values" Type="System.UInt16&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies the name of the pixel map to return. Accepted values are GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, and GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="values">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the specified pixel map
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelMap">
      <MemberSignature Language="C#" Value="public static void GetPixelMap (MonoMac.OpenGL.PixelMap map, ushort* values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPixelMap(valuetype MonoMac.OpenGL.PixelMap map, unsigned int16* values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="values" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies the name of the pixel map to return. Accepted values are GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, and GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="values">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the specified pixel map
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelMap">
      <MemberSignature Language="C#" Value="public static void GetPixelMap (MonoMac.OpenGL.PixelMap map, ushort[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPixelMap(valuetype MonoMac.OpenGL.PixelMap map, unsigned int16[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="values" Type="System.UInt16[]" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies the name of the pixel map to return. Accepted values are GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, and GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="values">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the specified pixel map
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelMap">
      <MemberSignature Language="C#" Value="public static void GetPixelMap (MonoMac.OpenGL.PixelMap map, out uint values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPixelMap(valuetype MonoMac.OpenGL.PixelMap map, unsigned int32 values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="values" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies the name of the pixel map to return. Accepted values are GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, and GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="values">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the specified pixel map
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelMap">
      <MemberSignature Language="C#" Value="public static void GetPixelMap (MonoMac.OpenGL.PixelMap map, uint* values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPixelMap(valuetype MonoMac.OpenGL.PixelMap map, unsigned int32* values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="values" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies the name of the pixel map to return. Accepted values are GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, and GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="values">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the specified pixel map
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPixelMap">
      <MemberSignature Language="C#" Value="public static void GetPixelMap (MonoMac.OpenGL.PixelMap map, uint[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPixelMap(valuetype MonoMac.OpenGL.PixelMap map, unsigned int32[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="values" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies the name of the pixel map to return. Accepted values are GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, and GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="values">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the specified pixel map
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPointer">
      <MemberSignature Language="C#" Value="public static void GetPointer (MonoMac.OpenGL.GetPointervPName pname, IntPtr params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPointer(valuetype MonoMac.OpenGL.GetPointervPName pname, native int params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPointervPName" />
        <Parameter Name="params" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies the array or buffer pointer to be returned. Symbolic constants GL_COLOR_ARRAY_POINTER, GL_EDGE_FLAG_ARRAY_POINTER, GL_FOG_COORD_ARRAY_POINTER, GL_FEEDBACK_BUFFER_POINTER, GL_INDEX_ARRAY_POINTER, GL_NORMAL_ARRAY_POINTER, GL_SECONDARY_COLOR_ARRAY_POINTER, GL_SELECTION_BUFFER_POINTER, GL_TEXTURE_COORD_ARRAY_POINTER, or GL_VERTEX_ARRAY_POINTER are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the pointer value specified by pname.
            </para>
        </param>
        <summary>[requires: v1.1]
            Return the address of the specified pointer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPointer&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static void GetPointer&lt;T1&gt; (MonoMac.OpenGL.GetPointervPName pname, out T1 params) where T1 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPointer&lt;struct .ctor (class System.ValueType) T1&gt;(valuetype MonoMac.OpenGL.GetPointervPName pname, !!T1 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPointervPName" />
        <Parameter Name="params" Type="T1&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <param name="pname">
          <para>
            Specifies the array or buffer pointer to be returned. Symbolic constants GL_COLOR_ARRAY_POINTER, GL_EDGE_FLAG_ARRAY_POINTER, GL_FOG_COORD_ARRAY_POINTER, GL_FEEDBACK_BUFFER_POINTER, GL_INDEX_ARRAY_POINTER, GL_NORMAL_ARRAY_POINTER, GL_SECONDARY_COLOR_ARRAY_POINTER, GL_SELECTION_BUFFER_POINTER, GL_TEXTURE_COORD_ARRAY_POINTER, or GL_VERTEX_ARRAY_POINTER are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the pointer value specified by pname.
            </para>
        </param>
        <summary>[requires: v1.1]
            Return the address of the specified pointer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPointer&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static void GetPointer&lt;T1&gt; (MonoMac.OpenGL.GetPointervPName pname, T1[,,] params) where T1 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPointer&lt;struct .ctor (class System.ValueType) T1&gt;(valuetype MonoMac.OpenGL.GetPointervPName pname, !!T1[,,] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPointervPName" />
        <Parameter Name="params" Type="T1[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <param name="pname">
          <para>
            Specifies the array or buffer pointer to be returned. Symbolic constants GL_COLOR_ARRAY_POINTER, GL_EDGE_FLAG_ARRAY_POINTER, GL_FOG_COORD_ARRAY_POINTER, GL_FEEDBACK_BUFFER_POINTER, GL_INDEX_ARRAY_POINTER, GL_NORMAL_ARRAY_POINTER, GL_SECONDARY_COLOR_ARRAY_POINTER, GL_SELECTION_BUFFER_POINTER, GL_TEXTURE_COORD_ARRAY_POINTER, or GL_VERTEX_ARRAY_POINTER are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the pointer value specified by pname.
            </para>
        </param>
        <summary>[requires: v1.1]
            Return the address of the specified pointer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPointer&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static void GetPointer&lt;T1&gt; (MonoMac.OpenGL.GetPointervPName pname, T1[,] params) where T1 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPointer&lt;struct .ctor (class System.ValueType) T1&gt;(valuetype MonoMac.OpenGL.GetPointervPName pname, !!T1[,] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPointervPName" />
        <Parameter Name="params" Type="T1[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <param name="pname">
          <para>
            Specifies the array or buffer pointer to be returned. Symbolic constants GL_COLOR_ARRAY_POINTER, GL_EDGE_FLAG_ARRAY_POINTER, GL_FOG_COORD_ARRAY_POINTER, GL_FEEDBACK_BUFFER_POINTER, GL_INDEX_ARRAY_POINTER, GL_NORMAL_ARRAY_POINTER, GL_SECONDARY_COLOR_ARRAY_POINTER, GL_SELECTION_BUFFER_POINTER, GL_TEXTURE_COORD_ARRAY_POINTER, or GL_VERTEX_ARRAY_POINTER are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the pointer value specified by pname.
            </para>
        </param>
        <summary>[requires: v1.1]
            Return the address of the specified pointer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPointer&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static void GetPointer&lt;T1&gt; (MonoMac.OpenGL.GetPointervPName pname, T1[] params) where T1 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPointer&lt;struct .ctor (class System.ValueType) T1&gt;(valuetype MonoMac.OpenGL.GetPointervPName pname, !!T1[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetPointervPName" />
        <Parameter Name="params" Type="T1[]" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <param name="pname">
          <para>
            Specifies the array or buffer pointer to be returned. Symbolic constants GL_COLOR_ARRAY_POINTER, GL_EDGE_FLAG_ARRAY_POINTER, GL_FOG_COORD_ARRAY_POINTER, GL_FEEDBACK_BUFFER_POINTER, GL_INDEX_ARRAY_POINTER, GL_NORMAL_ARRAY_POINTER, GL_SECONDARY_COLOR_ARRAY_POINTER, GL_SELECTION_BUFFER_POINTER, GL_TEXTURE_COORD_ARRAY_POINTER, or GL_VERTEX_ARRAY_POINTER are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the pointer value specified by pname.
            </para>
        </param>
        <summary>[requires: v1.1]
            Return the address of the specified pointer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolygonStipple">
      <MemberSignature Language="C#" Value="public static void GetPolygonStipple (out byte mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPolygonStipple(unsigned int8 mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Byte&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the polygon stipple pattern
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolygonStipple">
      <MemberSignature Language="C#" Value="public static void GetPolygonStipple (byte* mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPolygonStipple(unsigned int8* mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the polygon stipple pattern
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolygonStipple">
      <MemberSignature Language="C#" Value="public static void GetPolygonStipple (byte[] mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetPolygonStipple(unsigned int8[] mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return the polygon stipple pattern
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProgram">
      <MemberSignature Language="C#" Value="public static void GetProgram (int program, MonoMac.OpenGL.ProgramParameter pname, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetProgram(int32 program, valuetype MonoMac.OpenGL.ProgramParameter pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ProgramParameter" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the object parameter. Accepted symbolic names are GL_DELETE_STATUS, GL_LINK_STATUS, GL_VALIDATE_STATUS, GL_INFO_LOG_LENGTH, GL_ATTACHED_SHADERS, GL_ACTIVE_ATTRIBUTES, GL_ACTIVE_ATTRIBUTE_MAX_LENGTH, GL_ACTIVE_UNIFORMS, GL_ACTIVE_UNIFORM_BLOCKS, GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH, GL_ACTIVE_UNIFORM_MAX_LENGTH, GL_PROGRAM_BINARY_LENGTH, GL_TRANSFORM_FEEDBACK_BUFFER_MODE, GL_TRANSFORM_FEEDBACK_VARYINGS, GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH, GL_GEOMETRY_VERTICES_OUT, GL_GEOMETRY_INPUT_TYPE, and GL_GEOMETRY_OUTPUT_TYPE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested object parameter.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns a parameter from a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProgram">
      <MemberSignature Language="C#" Value="public static void GetProgram (int program, MonoMac.OpenGL.ProgramParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetProgram(int32 program, valuetype MonoMac.OpenGL.ProgramParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ProgramParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the object parameter. Accepted symbolic names are GL_DELETE_STATUS, GL_LINK_STATUS, GL_VALIDATE_STATUS, GL_INFO_LOG_LENGTH, GL_ATTACHED_SHADERS, GL_ACTIVE_ATTRIBUTES, GL_ACTIVE_ATTRIBUTE_MAX_LENGTH, GL_ACTIVE_UNIFORMS, GL_ACTIVE_UNIFORM_BLOCKS, GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH, GL_ACTIVE_UNIFORM_MAX_LENGTH, GL_PROGRAM_BINARY_LENGTH, GL_TRANSFORM_FEEDBACK_BUFFER_MODE, GL_TRANSFORM_FEEDBACK_VARYINGS, GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH, GL_GEOMETRY_VERTICES_OUT, GL_GEOMETRY_INPUT_TYPE, and GL_GEOMETRY_OUTPUT_TYPE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested object parameter.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns a parameter from a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProgram">
      <MemberSignature Language="C#" Value="public static void GetProgram (int program, MonoMac.OpenGL.ProgramParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetProgram(int32 program, valuetype MonoMac.OpenGL.ProgramParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ProgramParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the object parameter. Accepted symbolic names are GL_DELETE_STATUS, GL_LINK_STATUS, GL_VALIDATE_STATUS, GL_INFO_LOG_LENGTH, GL_ATTACHED_SHADERS, GL_ACTIVE_ATTRIBUTES, GL_ACTIVE_ATTRIBUTE_MAX_LENGTH, GL_ACTIVE_UNIFORMS, GL_ACTIVE_UNIFORM_BLOCKS, GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH, GL_ACTIVE_UNIFORM_MAX_LENGTH, GL_PROGRAM_BINARY_LENGTH, GL_TRANSFORM_FEEDBACK_BUFFER_MODE, GL_TRANSFORM_FEEDBACK_VARYINGS, GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH, GL_GEOMETRY_VERTICES_OUT, GL_GEOMETRY_INPUT_TYPE, and GL_GEOMETRY_OUTPUT_TYPE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested object parameter.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns a parameter from a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProgram">
      <MemberSignature Language="C#" Value="public static void GetProgram (uint program, MonoMac.OpenGL.ProgramParameter pname, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetProgram(unsigned int32 program, valuetype MonoMac.OpenGL.ProgramParameter pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ProgramParameter" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the object parameter. Accepted symbolic names are GL_DELETE_STATUS, GL_LINK_STATUS, GL_VALIDATE_STATUS, GL_INFO_LOG_LENGTH, GL_ATTACHED_SHADERS, GL_ACTIVE_ATTRIBUTES, GL_ACTIVE_ATTRIBUTE_MAX_LENGTH, GL_ACTIVE_UNIFORMS, GL_ACTIVE_UNIFORM_BLOCKS, GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH, GL_ACTIVE_UNIFORM_MAX_LENGTH, GL_PROGRAM_BINARY_LENGTH, GL_TRANSFORM_FEEDBACK_BUFFER_MODE, GL_TRANSFORM_FEEDBACK_VARYINGS, GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH, GL_GEOMETRY_VERTICES_OUT, GL_GEOMETRY_INPUT_TYPE, and GL_GEOMETRY_OUTPUT_TYPE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested object parameter.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns a parameter from a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProgram">
      <MemberSignature Language="C#" Value="public static void GetProgram (uint program, MonoMac.OpenGL.ProgramParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetProgram(unsigned int32 program, valuetype MonoMac.OpenGL.ProgramParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ProgramParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the object parameter. Accepted symbolic names are GL_DELETE_STATUS, GL_LINK_STATUS, GL_VALIDATE_STATUS, GL_INFO_LOG_LENGTH, GL_ATTACHED_SHADERS, GL_ACTIVE_ATTRIBUTES, GL_ACTIVE_ATTRIBUTE_MAX_LENGTH, GL_ACTIVE_UNIFORMS, GL_ACTIVE_UNIFORM_BLOCKS, GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH, GL_ACTIVE_UNIFORM_MAX_LENGTH, GL_PROGRAM_BINARY_LENGTH, GL_TRANSFORM_FEEDBACK_BUFFER_MODE, GL_TRANSFORM_FEEDBACK_VARYINGS, GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH, GL_GEOMETRY_VERTICES_OUT, GL_GEOMETRY_INPUT_TYPE, and GL_GEOMETRY_OUTPUT_TYPE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested object parameter.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns a parameter from a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProgram">
      <MemberSignature Language="C#" Value="public static void GetProgram (uint program, MonoMac.OpenGL.ProgramParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetProgram(unsigned int32 program, valuetype MonoMac.OpenGL.ProgramParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ProgramParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the object parameter. Accepted symbolic names are GL_DELETE_STATUS, GL_LINK_STATUS, GL_VALIDATE_STATUS, GL_INFO_LOG_LENGTH, GL_ATTACHED_SHADERS, GL_ACTIVE_ATTRIBUTES, GL_ACTIVE_ATTRIBUTE_MAX_LENGTH, GL_ACTIVE_UNIFORMS, GL_ACTIVE_UNIFORM_BLOCKS, GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH, GL_ACTIVE_UNIFORM_MAX_LENGTH, GL_PROGRAM_BINARY_LENGTH, GL_TRANSFORM_FEEDBACK_BUFFER_MODE, GL_TRANSFORM_FEEDBACK_VARYINGS, GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH, GL_GEOMETRY_VERTICES_OUT, GL_GEOMETRY_INPUT_TYPE, and GL_GEOMETRY_OUTPUT_TYPE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested object parameter.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns a parameter from a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProgramInfoLog">
      <MemberSignature Language="C#" Value="public static string GetProgramInfoLog (int program);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetProgramInfoLog(int32 program) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="program">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProgramInfoLog">
      <MemberSignature Language="C#" Value="public static void GetProgramInfoLog (int program, out string info);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetProgramInfoLog(int32 program, string info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="info" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="program">To be added.</param>
        <param name="info">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProgramInfoLog">
      <MemberSignature Language="C#" Value="public static void GetProgramInfoLog (int program, int bufSize, out int length, System.Text.StringBuilder infoLog);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetProgramInfoLog(int32 program, int32 bufSize, int32 length, class System.Text.StringBuilder infoLog) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="infoLog" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object whose information log is to be queried.
            </para>
        </param>
        <param name="bufSize">To be added.</param>
        <param name="length">
          <para>
            Returns the length of the string returned in infoLog (excluding the null terminator).
            </para>
        </param>
        <param name="infoLog">
          <para>
            Specifies an array of characters that is used to return the information log.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the information log for a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProgramInfoLog">
      <MemberSignature Language="C#" Value="public static void GetProgramInfoLog (int program, int bufSize, int* length, System.Text.StringBuilder infoLog);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetProgramInfoLog(int32 program, int32 bufSize, int32* length, class System.Text.StringBuilder infoLog) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32*" />
        <Parameter Name="infoLog" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object whose information log is to be queried.
            </para>
        </param>
        <param name="bufSize">To be added.</param>
        <param name="length">
          <para>
            Returns the length of the string returned in infoLog (excluding the null terminator).
            </para>
        </param>
        <param name="infoLog">
          <para>
            Specifies an array of characters that is used to return the information log.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the information log for a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProgramInfoLog">
      <MemberSignature Language="C#" Value="public static void GetProgramInfoLog (uint program, int bufSize, out int length, System.Text.StringBuilder infoLog);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetProgramInfoLog(unsigned int32 program, int32 bufSize, int32 length, class System.Text.StringBuilder infoLog) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="infoLog" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object whose information log is to be queried.
            </para>
        </param>
        <param name="bufSize">To be added.</param>
        <param name="length">
          <para>
            Returns the length of the string returned in infoLog (excluding the null terminator).
            </para>
        </param>
        <param name="infoLog">
          <para>
            Specifies an array of characters that is used to return the information log.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the information log for a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProgramInfoLog">
      <MemberSignature Language="C#" Value="public static void GetProgramInfoLog (uint program, int bufSize, int* length, System.Text.StringBuilder infoLog);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetProgramInfoLog(unsigned int32 program, int32 bufSize, int32* length, class System.Text.StringBuilder infoLog) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32*" />
        <Parameter Name="infoLog" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object whose information log is to be queried.
            </para>
        </param>
        <param name="bufSize">To be added.</param>
        <param name="length">
          <para>
            Returns the length of the string returned in infoLog (excluding the null terminator).
            </para>
        </param>
        <param name="infoLog">
          <para>
            Specifies an array of characters that is used to return the information log.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the information log for a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeparableFilter">
      <MemberSignature Language="C#" Value="public static void GetSeparableFilter (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr row, IntPtr column, IntPtr span);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetSeparableFilter(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int row, native int column, native int span) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="System.IntPtr" />
        <Parameter Name="column" Type="System.IntPtr" />
        <Parameter Name="span" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The separable filter to be retrieved. Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output images. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output images. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to storage for the row filter image.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to storage for the column filter image.
            </para>
        </param>
        <param name="span">
          <para>
            Pointer to storage for the span filter image (currently unused).
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get separable convolution filter kernel images
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeparableFilter&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void GetSeparableFilter&lt;T5&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr row, IntPtr column, out T5 span) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetSeparableFilter&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int row, native int column, !!T5 span) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="System.IntPtr" />
        <Parameter Name="column" Type="System.IntPtr" />
        <Parameter Name="span" Type="T5&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            The separable filter to be retrieved. Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output images. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output images. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to storage for the row filter image.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to storage for the column filter image.
            </para>
        </param>
        <param name="span">
          <para>
            Pointer to storage for the span filter image (currently unused).
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get separable convolution filter kernel images
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeparableFilter&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void GetSeparableFilter&lt;T5&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr row, IntPtr column, T5[,,] span) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetSeparableFilter&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int row, native int column, !!T5[,,] span) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="System.IntPtr" />
        <Parameter Name="column" Type="System.IntPtr" />
        <Parameter Name="span" Type="T5[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            The separable filter to be retrieved. Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output images. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output images. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to storage for the row filter image.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to storage for the column filter image.
            </para>
        </param>
        <param name="span">
          <para>
            Pointer to storage for the span filter image (currently unused).
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get separable convolution filter kernel images
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeparableFilter&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void GetSeparableFilter&lt;T5&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr row, IntPtr column, T5[,] span) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetSeparableFilter&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int row, native int column, !!T5[,] span) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="System.IntPtr" />
        <Parameter Name="column" Type="System.IntPtr" />
        <Parameter Name="span" Type="T5[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            The separable filter to be retrieved. Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output images. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output images. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to storage for the row filter image.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to storage for the column filter image.
            </para>
        </param>
        <param name="span">
          <para>
            Pointer to storage for the span filter image (currently unused).
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get separable convolution filter kernel images
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeparableFilter&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void GetSeparableFilter&lt;T5&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr row, IntPtr column, T5[] span) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetSeparableFilter&lt;struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int row, native int column, !!T5[] span) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="System.IntPtr" />
        <Parameter Name="column" Type="System.IntPtr" />
        <Parameter Name="span" Type="T5[]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            The separable filter to be retrieved. Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output images. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output images. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to storage for the row filter image.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to storage for the column filter image.
            </para>
        </param>
        <param name="span">
          <para>
            Pointer to storage for the span filter image (currently unused).
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get separable convolution filter kernel images
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeparableFilter&lt;T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static void GetSeparableFilter&lt;T4,T5&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr row, out T4 column, T5[,,] span) where T4 : struct where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetSeparableFilter&lt;struct .ctor (class System.ValueType) T4, struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int row, !!T4 column, !!T5[,,] span) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="System.IntPtr" />
        <Parameter Name="column" Type="T4&amp;" RefType="out" />
        <Parameter Name="span" Type="T5[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            The separable filter to be retrieved. Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output images. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output images. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to storage for the row filter image.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to storage for the column filter image.
            </para>
        </param>
        <param name="span">
          <para>
            Pointer to storage for the span filter image (currently unused).
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get separable convolution filter kernel images
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeparableFilter&lt;T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static void GetSeparableFilter&lt;T4,T5&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr row, T4[,,] column, T5[,,] span) where T4 : struct where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetSeparableFilter&lt;struct .ctor (class System.ValueType) T4, struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int row, !!T4[,,] column, !!T5[,,] span) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="System.IntPtr" />
        <Parameter Name="column" Type="T4[,,]" />
        <Parameter Name="span" Type="T5[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            The separable filter to be retrieved. Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output images. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output images. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to storage for the row filter image.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to storage for the column filter image.
            </para>
        </param>
        <param name="span">
          <para>
            Pointer to storage for the span filter image (currently unused).
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get separable convolution filter kernel images
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeparableFilter&lt;T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static void GetSeparableFilter&lt;T4,T5&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr row, T4[,] column, T5[,,] span) where T4 : struct where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetSeparableFilter&lt;struct .ctor (class System.ValueType) T4, struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int row, !!T4[,] column, !!T5[,,] span) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="System.IntPtr" />
        <Parameter Name="column" Type="T4[,]" />
        <Parameter Name="span" Type="T5[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            The separable filter to be retrieved. Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output images. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output images. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to storage for the row filter image.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to storage for the column filter image.
            </para>
        </param>
        <param name="span">
          <para>
            Pointer to storage for the span filter image (currently unused).
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get separable convolution filter kernel images
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeparableFilter&lt;T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static void GetSeparableFilter&lt;T4,T5&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr row, T4[] column, T5[,,] span) where T4 : struct where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetSeparableFilter&lt;struct .ctor (class System.ValueType) T4, struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int row, !!T4[] column, !!T5[,,] span) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="System.IntPtr" />
        <Parameter Name="column" Type="T4[]" />
        <Parameter Name="span" Type="T5[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            The separable filter to be retrieved. Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output images. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output images. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to storage for the row filter image.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to storage for the column filter image.
            </para>
        </param>
        <param name="span">
          <para>
            Pointer to storage for the span filter image (currently unused).
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get separable convolution filter kernel images
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeparableFilter&lt;T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static void GetSeparableFilter&lt;T3,T4,T5&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T3 row, T4[,,] column, T5[,,] span) where T3 : struct where T4 : struct where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetSeparableFilter&lt;struct .ctor (class System.ValueType) T3, struct .ctor (class System.ValueType) T4, struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T3 row, !!T4[,,] column, !!T5[,,] span) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="T3&amp;" RefType="out" />
        <Parameter Name="column" Type="T4[,,]" />
        <Parameter Name="span" Type="T5[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            The separable filter to be retrieved. Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output images. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output images. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to storage for the row filter image.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to storage for the column filter image.
            </para>
        </param>
        <param name="span">
          <para>
            Pointer to storage for the span filter image (currently unused).
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get separable convolution filter kernel images
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeparableFilter&lt;T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static void GetSeparableFilter&lt;T3,T4,T5&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T3[,,] row, T4[,,] column, T5[,,] span) where T3 : struct where T4 : struct where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetSeparableFilter&lt;struct .ctor (class System.ValueType) T3, struct .ctor (class System.ValueType) T4, struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T3[,,] row, !!T4[,,] column, !!T5[,,] span) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="T3[,,]" />
        <Parameter Name="column" Type="T4[,,]" />
        <Parameter Name="span" Type="T5[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            The separable filter to be retrieved. Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output images. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output images. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to storage for the row filter image.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to storage for the column filter image.
            </para>
        </param>
        <param name="span">
          <para>
            Pointer to storage for the span filter image (currently unused).
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get separable convolution filter kernel images
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeparableFilter&lt;T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static void GetSeparableFilter&lt;T3,T4,T5&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T3[,] row, T4[,,] column, T5[,,] span) where T3 : struct where T4 : struct where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetSeparableFilter&lt;struct .ctor (class System.ValueType) T3, struct .ctor (class System.ValueType) T4, struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T3[,] row, !!T4[,,] column, !!T5[,,] span) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="T3[,]" />
        <Parameter Name="column" Type="T4[,,]" />
        <Parameter Name="span" Type="T5[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            The separable filter to be retrieved. Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output images. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output images. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to storage for the row filter image.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to storage for the column filter image.
            </para>
        </param>
        <param name="span">
          <para>
            Pointer to storage for the span filter image (currently unused).
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get separable convolution filter kernel images
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeparableFilter&lt;T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static void GetSeparableFilter&lt;T3,T4,T5&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T3[] row, T4[,,] column, T5[,,] span) where T3 : struct where T4 : struct where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetSeparableFilter&lt;struct .ctor (class System.ValueType) T3, struct .ctor (class System.ValueType) T4, struct .ctor (class System.ValueType) T5&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T3[] row, !!T4[,,] column, !!T5[,,] span) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="T3[]" />
        <Parameter Name="column" Type="T4[,,]" />
        <Parameter Name="span" Type="T5[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <param name="target">
          <para>
            The separable filter to be retrieved. Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="format">
          <para>
            Format of the output images. Must be one of GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR GL_RGBA, GL_BGRA, GL_LUMINANCE, or GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            Data type of components in the output images. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to storage for the row filter image.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to storage for the column filter image.
            </para>
        </param>
        <param name="span">
          <para>
            Pointer to storage for the span filter image (currently unused).
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Get separable convolution filter kernel images
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShader">
      <MemberSignature Language="C#" Value="public static void GetShader (int shader, MonoMac.OpenGL.ShaderParameter pname, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetShader(int32 shader, valuetype MonoMac.OpenGL.ShaderParameter pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ShaderParameter" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the object parameter. Accepted symbolic names are GL_SHADER_TYPE, GL_DELETE_STATUS, GL_COMPILE_STATUS, GL_INFO_LOG_LENGTH, GL_SHADER_SOURCE_LENGTH.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested object parameter.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns a parameter from a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShader">
      <MemberSignature Language="C#" Value="public static void GetShader (int shader, MonoMac.OpenGL.ShaderParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetShader(int32 shader, valuetype MonoMac.OpenGL.ShaderParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ShaderParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the object parameter. Accepted symbolic names are GL_SHADER_TYPE, GL_DELETE_STATUS, GL_COMPILE_STATUS, GL_INFO_LOG_LENGTH, GL_SHADER_SOURCE_LENGTH.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested object parameter.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns a parameter from a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShader">
      <MemberSignature Language="C#" Value="public static void GetShader (int shader, MonoMac.OpenGL.ShaderParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetShader(int32 shader, valuetype MonoMac.OpenGL.ShaderParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ShaderParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the object parameter. Accepted symbolic names are GL_SHADER_TYPE, GL_DELETE_STATUS, GL_COMPILE_STATUS, GL_INFO_LOG_LENGTH, GL_SHADER_SOURCE_LENGTH.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested object parameter.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns a parameter from a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShader">
      <MemberSignature Language="C#" Value="public static void GetShader (uint shader, MonoMac.OpenGL.ShaderParameter pname, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetShader(unsigned int32 shader, valuetype MonoMac.OpenGL.ShaderParameter pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ShaderParameter" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the object parameter. Accepted symbolic names are GL_SHADER_TYPE, GL_DELETE_STATUS, GL_COMPILE_STATUS, GL_INFO_LOG_LENGTH, GL_SHADER_SOURCE_LENGTH.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested object parameter.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns a parameter from a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShader">
      <MemberSignature Language="C#" Value="public static void GetShader (uint shader, MonoMac.OpenGL.ShaderParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetShader(unsigned int32 shader, valuetype MonoMac.OpenGL.ShaderParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ShaderParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the object parameter. Accepted symbolic names are GL_SHADER_TYPE, GL_DELETE_STATUS, GL_COMPILE_STATUS, GL_INFO_LOG_LENGTH, GL_SHADER_SOURCE_LENGTH.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested object parameter.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns a parameter from a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShader">
      <MemberSignature Language="C#" Value="public static void GetShader (uint shader, MonoMac.OpenGL.ShaderParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetShader(unsigned int32 shader, valuetype MonoMac.OpenGL.ShaderParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.ShaderParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the object parameter. Accepted symbolic names are GL_SHADER_TYPE, GL_DELETE_STATUS, GL_COMPILE_STATUS, GL_INFO_LOG_LENGTH, GL_SHADER_SOURCE_LENGTH.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested object parameter.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns a parameter from a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShaderInfoLog">
      <MemberSignature Language="C#" Value="public static string GetShaderInfoLog (int shader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetShaderInfoLog(int32 shader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shader">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShaderInfoLog">
      <MemberSignature Language="C#" Value="public static void GetShaderInfoLog (int shader, out string info);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetShaderInfoLog(int32 shader, string info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.Int32" />
        <Parameter Name="info" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="shader">To be added.</param>
        <param name="info">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShaderInfoLog">
      <MemberSignature Language="C#" Value="public static void GetShaderInfoLog (int shader, int bufSize, out int length, System.Text.StringBuilder infoLog);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetShaderInfoLog(int32 shader, int32 bufSize, int32 length, class System.Text.StringBuilder infoLog) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.Int32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="infoLog" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object whose information log is to be queried.
            </para>
        </param>
        <param name="bufSize">To be added.</param>
        <param name="length">
          <para>
            Returns the length of the string returned in infoLog (excluding the null terminator).
            </para>
        </param>
        <param name="infoLog">
          <para>
            Specifies an array of characters that is used to return the information log.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the information log for a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShaderInfoLog">
      <MemberSignature Language="C#" Value="public static void GetShaderInfoLog (int shader, int bufSize, int* length, System.Text.StringBuilder infoLog);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetShaderInfoLog(int32 shader, int32 bufSize, int32* length, class System.Text.StringBuilder infoLog) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.Int32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32*" />
        <Parameter Name="infoLog" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object whose information log is to be queried.
            </para>
        </param>
        <param name="bufSize">To be added.</param>
        <param name="length">
          <para>
            Returns the length of the string returned in infoLog (excluding the null terminator).
            </para>
        </param>
        <param name="infoLog">
          <para>
            Specifies an array of characters that is used to return the information log.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the information log for a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShaderInfoLog">
      <MemberSignature Language="C#" Value="public static void GetShaderInfoLog (uint shader, int bufSize, out int length, System.Text.StringBuilder infoLog);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetShaderInfoLog(unsigned int32 shader, int32 bufSize, int32 length, class System.Text.StringBuilder infoLog) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.UInt32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="infoLog" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object whose information log is to be queried.
            </para>
        </param>
        <param name="bufSize">To be added.</param>
        <param name="length">
          <para>
            Returns the length of the string returned in infoLog (excluding the null terminator).
            </para>
        </param>
        <param name="infoLog">
          <para>
            Specifies an array of characters that is used to return the information log.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the information log for a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShaderInfoLog">
      <MemberSignature Language="C#" Value="public static void GetShaderInfoLog (uint shader, int bufSize, int* length, System.Text.StringBuilder infoLog);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetShaderInfoLog(unsigned int32 shader, int32 bufSize, int32* length, class System.Text.StringBuilder infoLog) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.UInt32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32*" />
        <Parameter Name="infoLog" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object whose information log is to be queried.
            </para>
        </param>
        <param name="bufSize">To be added.</param>
        <param name="length">
          <para>
            Returns the length of the string returned in infoLog (excluding the null terminator).
            </para>
        </param>
        <param name="infoLog">
          <para>
            Specifies an array of characters that is used to return the information log.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the information log for a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShaderSource">
      <MemberSignature Language="C#" Value="public static void GetShaderSource (int shader, int bufSize, out int length, System.Text.StringBuilder source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetShaderSource(int32 shader, int32 bufSize, int32 length, class System.Text.StringBuilder source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.Int32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="source" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object to be queried.
            </para>
        </param>
        <param name="bufSize">
          <para>
            Specifies the size of the character buffer for storing the returned source code string.
            </para>
        </param>
        <param name="length">
          <para>
            Returns the length of the string returned in source (excluding the null terminator).
            </para>
        </param>
        <param name="source">
          <para>
            Specifies an array of characters that is used to return the source code string.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the source code string from a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShaderSource">
      <MemberSignature Language="C#" Value="public static void GetShaderSource (int shader, int bufSize, int* length, System.Text.StringBuilder source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetShaderSource(int32 shader, int32 bufSize, int32* length, class System.Text.StringBuilder source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.Int32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32*" />
        <Parameter Name="source" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object to be queried.
            </para>
        </param>
        <param name="bufSize">
          <para>
            Specifies the size of the character buffer for storing the returned source code string.
            </para>
        </param>
        <param name="length">
          <para>
            Returns the length of the string returned in source (excluding the null terminator).
            </para>
        </param>
        <param name="source">
          <para>
            Specifies an array of characters that is used to return the source code string.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the source code string from a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShaderSource">
      <MemberSignature Language="C#" Value="public static void GetShaderSource (uint shader, int bufSize, out int length, System.Text.StringBuilder source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetShaderSource(unsigned int32 shader, int32 bufSize, int32 length, class System.Text.StringBuilder source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.UInt32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="source" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object to be queried.
            </para>
        </param>
        <param name="bufSize">
          <para>
            Specifies the size of the character buffer for storing the returned source code string.
            </para>
        </param>
        <param name="length">
          <para>
            Returns the length of the string returned in source (excluding the null terminator).
            </para>
        </param>
        <param name="source">
          <para>
            Specifies an array of characters that is used to return the source code string.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the source code string from a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShaderSource">
      <MemberSignature Language="C#" Value="public static void GetShaderSource (uint shader, int bufSize, int* length, System.Text.StringBuilder source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetShaderSource(unsigned int32 shader, int32 bufSize, int32* length, class System.Text.StringBuilder source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.UInt32" />
        <Parameter Name="bufSize" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32*" />
        <Parameter Name="source" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the shader object to be queried.
            </para>
        </param>
        <param name="bufSize">
          <para>
            Specifies the size of the character buffer for storing the returned source code string.
            </para>
        </param>
        <param name="length">
          <para>
            Returns the length of the string returned in source (excluding the null terminator).
            </para>
        </param>
        <param name="source">
          <para>
            Specifies an array of characters that is used to return the source code string.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the source code string from a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public static string GetString (MonoMac.OpenGL.StringName name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetString(valuetype MonoMac.OpenGL.StringName name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="MonoMac.OpenGL.StringName" />
      </Parameters>
      <Docs>
        <param name="name">
          <para>
            Specifies a symbolic constant, one of GL_VENDOR, GL_RENDERER, GL_VERSION, or GL_SHADING_LANGUAGE_VERSION. Additionally, glGetStringi accepts the GL_EXTENSIONS token.
            </para>
        </param>
        <summary>[requires: v1.0]
            Return a string describing the current GL connection
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public static string GetString (MonoMac.OpenGL.StringName name, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetString(valuetype MonoMac.OpenGL.StringName name, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="MonoMac.OpenGL.StringName" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <para>
            Specifies a symbolic constant, one of GL_VENDOR, GL_RENDERER, GL_VERSION, or GL_SHADING_LANGUAGE_VERSION. Additionally, glGetStringi accepts the GL_EXTENSIONS token.
            </para>
        </param>
        <param name="index">
          <para>
            For glGetStringi, specifies the index of the string to return.
            </para>
        </param>
        <summary>[requires: v3.0]
            Return a string describing the current GL connection
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public static string GetString (MonoMac.OpenGL.StringName name, uint index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetString(valuetype MonoMac.OpenGL.StringName name, unsigned int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="MonoMac.OpenGL.StringName" />
        <Parameter Name="index" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="name">
          <para>
            Specifies a symbolic constant, one of GL_VENDOR, GL_RENDERER, GL_VERSION, or GL_SHADING_LANGUAGE_VERSION. Additionally, glGetStringi accepts the GL_EXTENSIONS token.
            </para>
        </param>
        <param name="index">
          <para>
            For glGetStringi, specifies the index of the string to return.
            </para>
        </param>
        <summary>[requires: v3.0]
            Return a string describing the current GL connection
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexEnv">
      <MemberSignature Language="C#" Value="public static void GetTexEnv (MonoMac.OpenGL.TextureEnvTarget target, MonoMac.OpenGL.TextureEnvParameter pname, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexEnv(valuetype MonoMac.OpenGL.TextureEnvTarget target, valuetype MonoMac.OpenGL.TextureEnvParameter pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureEnvTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureEnvParameter" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies a texture environment. May be GL_TEXTURE_ENV, GL_TEXTURE_FILTER_CONTROL, or GL_POINT_SPRITE.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a texture environment parameter. Accepted values are GL_TEXTURE_ENV_MODE, GL_TEXTURE_ENV_COLOR, GL_TEXTURE_LOD_BIAS, GL_COMBINE_RGB, GL_COMBINE_ALPHA, GL_SRC0_RGB, GL_SRC1_RGB, GL_SRC2_RGB, GL_SRC0_ALPHA, GL_SRC1_ALPHA, GL_SRC2_ALPHA, GL_OPERAND0_RGB, GL_OPERAND1_RGB, GL_OPERAND2_RGB, GL_OPERAND0_ALPHA, GL_OPERAND1_ALPHA, GL_OPERAND2_ALPHA, GL_RGB_SCALE, GL_ALPHA_SCALE, or GL_COORD_REPLACE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return texture environment parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexEnv">
      <MemberSignature Language="C#" Value="public static void GetTexEnv (MonoMac.OpenGL.TextureEnvTarget target, MonoMac.OpenGL.TextureEnvParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexEnv(valuetype MonoMac.OpenGL.TextureEnvTarget target, valuetype MonoMac.OpenGL.TextureEnvParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureEnvTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureEnvParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies a texture environment. May be GL_TEXTURE_ENV, GL_TEXTURE_FILTER_CONTROL, or GL_POINT_SPRITE.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a texture environment parameter. Accepted values are GL_TEXTURE_ENV_MODE, GL_TEXTURE_ENV_COLOR, GL_TEXTURE_LOD_BIAS, GL_COMBINE_RGB, GL_COMBINE_ALPHA, GL_SRC0_RGB, GL_SRC1_RGB, GL_SRC2_RGB, GL_SRC0_ALPHA, GL_SRC1_ALPHA, GL_SRC2_ALPHA, GL_OPERAND0_RGB, GL_OPERAND1_RGB, GL_OPERAND2_RGB, GL_OPERAND0_ALPHA, GL_OPERAND1_ALPHA, GL_OPERAND2_ALPHA, GL_RGB_SCALE, GL_ALPHA_SCALE, or GL_COORD_REPLACE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return texture environment parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexEnv">
      <MemberSignature Language="C#" Value="public static void GetTexEnv (MonoMac.OpenGL.TextureEnvTarget target, MonoMac.OpenGL.TextureEnvParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexEnv(valuetype MonoMac.OpenGL.TextureEnvTarget target, valuetype MonoMac.OpenGL.TextureEnvParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureEnvTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureEnvParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies a texture environment. May be GL_TEXTURE_ENV, GL_TEXTURE_FILTER_CONTROL, or GL_POINT_SPRITE.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a texture environment parameter. Accepted values are GL_TEXTURE_ENV_MODE, GL_TEXTURE_ENV_COLOR, GL_TEXTURE_LOD_BIAS, GL_COMBINE_RGB, GL_COMBINE_ALPHA, GL_SRC0_RGB, GL_SRC1_RGB, GL_SRC2_RGB, GL_SRC0_ALPHA, GL_SRC1_ALPHA, GL_SRC2_ALPHA, GL_OPERAND0_RGB, GL_OPERAND1_RGB, GL_OPERAND2_RGB, GL_OPERAND0_ALPHA, GL_OPERAND1_ALPHA, GL_OPERAND2_ALPHA, GL_RGB_SCALE, GL_ALPHA_SCALE, or GL_COORD_REPLACE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return texture environment parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexEnv">
      <MemberSignature Language="C#" Value="public static void GetTexEnv (MonoMac.OpenGL.TextureEnvTarget target, MonoMac.OpenGL.TextureEnvParameter pname, out float params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexEnv(valuetype MonoMac.OpenGL.TextureEnvTarget target, valuetype MonoMac.OpenGL.TextureEnvParameter pname, float32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureEnvTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureEnvParameter" />
        <Parameter Name="params" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies a texture environment. May be GL_TEXTURE_ENV, GL_TEXTURE_FILTER_CONTROL, or GL_POINT_SPRITE.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a texture environment parameter. Accepted values are GL_TEXTURE_ENV_MODE, GL_TEXTURE_ENV_COLOR, GL_TEXTURE_LOD_BIAS, GL_COMBINE_RGB, GL_COMBINE_ALPHA, GL_SRC0_RGB, GL_SRC1_RGB, GL_SRC2_RGB, GL_SRC0_ALPHA, GL_SRC1_ALPHA, GL_SRC2_ALPHA, GL_OPERAND0_RGB, GL_OPERAND1_RGB, GL_OPERAND2_RGB, GL_OPERAND0_ALPHA, GL_OPERAND1_ALPHA, GL_OPERAND2_ALPHA, GL_RGB_SCALE, GL_ALPHA_SCALE, or GL_COORD_REPLACE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return texture environment parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexEnv">
      <MemberSignature Language="C#" Value="public static void GetTexEnv (MonoMac.OpenGL.TextureEnvTarget target, MonoMac.OpenGL.TextureEnvParameter pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexEnv(valuetype MonoMac.OpenGL.TextureEnvTarget target, valuetype MonoMac.OpenGL.TextureEnvParameter pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureEnvTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureEnvParameter" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies a texture environment. May be GL_TEXTURE_ENV, GL_TEXTURE_FILTER_CONTROL, or GL_POINT_SPRITE.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a texture environment parameter. Accepted values are GL_TEXTURE_ENV_MODE, GL_TEXTURE_ENV_COLOR, GL_TEXTURE_LOD_BIAS, GL_COMBINE_RGB, GL_COMBINE_ALPHA, GL_SRC0_RGB, GL_SRC1_RGB, GL_SRC2_RGB, GL_SRC0_ALPHA, GL_SRC1_ALPHA, GL_SRC2_ALPHA, GL_OPERAND0_RGB, GL_OPERAND1_RGB, GL_OPERAND2_RGB, GL_OPERAND0_ALPHA, GL_OPERAND1_ALPHA, GL_OPERAND2_ALPHA, GL_RGB_SCALE, GL_ALPHA_SCALE, or GL_COORD_REPLACE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return texture environment parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexEnv">
      <MemberSignature Language="C#" Value="public static void GetTexEnv (MonoMac.OpenGL.TextureEnvTarget target, MonoMac.OpenGL.TextureEnvParameter pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexEnv(valuetype MonoMac.OpenGL.TextureEnvTarget target, valuetype MonoMac.OpenGL.TextureEnvParameter pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureEnvTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureEnvParameter" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies a texture environment. May be GL_TEXTURE_ENV, GL_TEXTURE_FILTER_CONTROL, or GL_POINT_SPRITE.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a texture environment parameter. Accepted values are GL_TEXTURE_ENV_MODE, GL_TEXTURE_ENV_COLOR, GL_TEXTURE_LOD_BIAS, GL_COMBINE_RGB, GL_COMBINE_ALPHA, GL_SRC0_RGB, GL_SRC1_RGB, GL_SRC2_RGB, GL_SRC0_ALPHA, GL_SRC1_ALPHA, GL_SRC2_ALPHA, GL_OPERAND0_RGB, GL_OPERAND1_RGB, GL_OPERAND2_RGB, GL_OPERAND0_ALPHA, GL_OPERAND1_ALPHA, GL_OPERAND2_ALPHA, GL_RGB_SCALE, GL_ALPHA_SCALE, or GL_COORD_REPLACE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return texture environment parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexGen">
      <MemberSignature Language="C#" Value="public static void GetTexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, out double params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, float64 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="params" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the value(s) to be returned. Must be either GL_TEXTURE_GEN_MODE or the name of one of the texture generation plane equations: GL_OBJECT_PLANE or GL_EYE_PLANE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return texture coordinate generation parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexGen">
      <MemberSignature Language="C#" Value="public static void GetTexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, double* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, float64* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="params" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the value(s) to be returned. Must be either GL_TEXTURE_GEN_MODE or the name of one of the texture generation plane equations: GL_OBJECT_PLANE or GL_EYE_PLANE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return texture coordinate generation parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexGen">
      <MemberSignature Language="C#" Value="public static void GetTexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, double[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, float64[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="params" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the value(s) to be returned. Must be either GL_TEXTURE_GEN_MODE or the name of one of the texture generation plane equations: GL_OBJECT_PLANE or GL_EYE_PLANE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return texture coordinate generation parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexGen">
      <MemberSignature Language="C#" Value="public static void GetTexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the value(s) to be returned. Must be either GL_TEXTURE_GEN_MODE or the name of one of the texture generation plane equations: GL_OBJECT_PLANE or GL_EYE_PLANE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return texture coordinate generation parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexGen">
      <MemberSignature Language="C#" Value="public static void GetTexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the value(s) to be returned. Must be either GL_TEXTURE_GEN_MODE or the name of one of the texture generation plane equations: GL_OBJECT_PLANE or GL_EYE_PLANE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return texture coordinate generation parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexGen">
      <MemberSignature Language="C#" Value="public static void GetTexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the value(s) to be returned. Must be either GL_TEXTURE_GEN_MODE or the name of one of the texture generation plane equations: GL_OBJECT_PLANE or GL_EYE_PLANE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return texture coordinate generation parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexGen">
      <MemberSignature Language="C#" Value="public static void GetTexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, out float params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, float32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="params" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the value(s) to be returned. Must be either GL_TEXTURE_GEN_MODE or the name of one of the texture generation plane equations: GL_OBJECT_PLANE or GL_EYE_PLANE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return texture coordinate generation parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexGen">
      <MemberSignature Language="C#" Value="public static void GetTexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the value(s) to be returned. Must be either GL_TEXTURE_GEN_MODE or the name of one of the texture generation plane equations: GL_OBJECT_PLANE or GL_EYE_PLANE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return texture coordinate generation parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexGen">
      <MemberSignature Language="C#" Value="public static void GetTexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the value(s) to be returned. Must be either GL_TEXTURE_GEN_MODE or the name of one of the texture generation plane equations: GL_OBJECT_PLANE or GL_EYE_PLANE.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Return texture coordinate generation parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexImage">
      <MemberSignature Language="C#" Value="public static void GetTexImage (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr pixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexImage(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies which texture is to be obtained. GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, and GL_TEXTURE_CUBE_MAP_NEGATIVE_Z are accepted.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number of the desired image. Level 0 is the base image level. Level is the th mipmap reduction image.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies a pixel format for the returned data. The supported formats are GL_STENCIL_INDEX, GL_DEPTH_COMPONENT, GL_DEPTH_STENCIL, GL_RED, GL_GREEN, GL_BLUE, GL_RG, GL_RGB, GL_RGBA, GL_BGR, GL_BGRA, GL_RED_INTEGER, GL_GREEN_INTEGER, GL_BLUE_INTEGER, GL_RG_INTEGER, GL_RGB_INTEGER, GL_RGBA_INTEGER, GL_BGR_INTEGER, GL_BGRA_INTEGER.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies a pixel type for the returned data. The supported types are GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_HALF_FLOAT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, GL_UNSIGNED_INT_2_10_10_10_REV, GL_UNSIGNED_INT_24_8, GL_UNSIGNED_INT_10F_11F_11F_REV, GL_UNSIGNED_INT_5_9_9_9_REV, and GL_FLOAT_32_UNSIGNED_INT_24_8_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Return a texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexImage&lt;T4&gt;">
      <MemberSignature Language="C#" Value="public static void GetTexImage&lt;T4&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T4 pixels) where T4 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexImage&lt;struct .ctor (class System.ValueType) T4&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T4 pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T4&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies which texture is to be obtained. GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, and GL_TEXTURE_CUBE_MAP_NEGATIVE_Z are accepted.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number of the desired image. Level 0 is the base image level. Level is the th mipmap reduction image.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies a pixel format for the returned data. The supported formats are GL_STENCIL_INDEX, GL_DEPTH_COMPONENT, GL_DEPTH_STENCIL, GL_RED, GL_GREEN, GL_BLUE, GL_RG, GL_RGB, GL_RGBA, GL_BGR, GL_BGRA, GL_RED_INTEGER, GL_GREEN_INTEGER, GL_BLUE_INTEGER, GL_RG_INTEGER, GL_RGB_INTEGER, GL_RGBA_INTEGER, GL_BGR_INTEGER, GL_BGRA_INTEGER.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies a pixel type for the returned data. The supported types are GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_HALF_FLOAT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, GL_UNSIGNED_INT_2_10_10_10_REV, GL_UNSIGNED_INT_24_8, GL_UNSIGNED_INT_10F_11F_11F_REV, GL_UNSIGNED_INT_5_9_9_9_REV, and GL_FLOAT_32_UNSIGNED_INT_24_8_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Return a texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexImage&lt;T4&gt;">
      <MemberSignature Language="C#" Value="public static void GetTexImage&lt;T4&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T4[,,] pixels) where T4 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexImage&lt;struct .ctor (class System.ValueType) T4&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T4[,,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T4[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies which texture is to be obtained. GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, and GL_TEXTURE_CUBE_MAP_NEGATIVE_Z are accepted.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number of the desired image. Level 0 is the base image level. Level is the th mipmap reduction image.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies a pixel format for the returned data. The supported formats are GL_STENCIL_INDEX, GL_DEPTH_COMPONENT, GL_DEPTH_STENCIL, GL_RED, GL_GREEN, GL_BLUE, GL_RG, GL_RGB, GL_RGBA, GL_BGR, GL_BGRA, GL_RED_INTEGER, GL_GREEN_INTEGER, GL_BLUE_INTEGER, GL_RG_INTEGER, GL_RGB_INTEGER, GL_RGBA_INTEGER, GL_BGR_INTEGER, GL_BGRA_INTEGER.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies a pixel type for the returned data. The supported types are GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_HALF_FLOAT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, GL_UNSIGNED_INT_2_10_10_10_REV, GL_UNSIGNED_INT_24_8, GL_UNSIGNED_INT_10F_11F_11F_REV, GL_UNSIGNED_INT_5_9_9_9_REV, and GL_FLOAT_32_UNSIGNED_INT_24_8_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Return a texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexImage&lt;T4&gt;">
      <MemberSignature Language="C#" Value="public static void GetTexImage&lt;T4&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T4[,] pixels) where T4 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexImage&lt;struct .ctor (class System.ValueType) T4&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T4[,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T4[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies which texture is to be obtained. GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, and GL_TEXTURE_CUBE_MAP_NEGATIVE_Z are accepted.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number of the desired image. Level 0 is the base image level. Level is the th mipmap reduction image.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies a pixel format for the returned data. The supported formats are GL_STENCIL_INDEX, GL_DEPTH_COMPONENT, GL_DEPTH_STENCIL, GL_RED, GL_GREEN, GL_BLUE, GL_RG, GL_RGB, GL_RGBA, GL_BGR, GL_BGRA, GL_RED_INTEGER, GL_GREEN_INTEGER, GL_BLUE_INTEGER, GL_RG_INTEGER, GL_RGB_INTEGER, GL_RGBA_INTEGER, GL_BGR_INTEGER, GL_BGRA_INTEGER.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies a pixel type for the returned data. The supported types are GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_HALF_FLOAT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, GL_UNSIGNED_INT_2_10_10_10_REV, GL_UNSIGNED_INT_24_8, GL_UNSIGNED_INT_10F_11F_11F_REV, GL_UNSIGNED_INT_5_9_9_9_REV, and GL_FLOAT_32_UNSIGNED_INT_24_8_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Return a texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexImage&lt;T4&gt;">
      <MemberSignature Language="C#" Value="public static void GetTexImage&lt;T4&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T4[] pixels) where T4 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexImage&lt;struct .ctor (class System.ValueType) T4&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T4[] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T4">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T4[]" />
      </Parameters>
      <Docs>
        <typeparam name="T4">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies which texture is to be obtained. GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, and GL_TEXTURE_CUBE_MAP_NEGATIVE_Z are accepted.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number of the desired image. Level 0 is the base image level. Level is the th mipmap reduction image.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies a pixel format for the returned data. The supported formats are GL_STENCIL_INDEX, GL_DEPTH_COMPONENT, GL_DEPTH_STENCIL, GL_RED, GL_GREEN, GL_BLUE, GL_RG, GL_RGB, GL_RGBA, GL_BGR, GL_BGRA, GL_RED_INTEGER, GL_GREEN_INTEGER, GL_BLUE_INTEGER, GL_RG_INTEGER, GL_RGB_INTEGER, GL_RGBA_INTEGER, GL_BGR_INTEGER, GL_BGRA_INTEGER.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies a pixel type for the returned data. The supported types are GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_HALF_FLOAT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, GL_UNSIGNED_INT_2_10_10_10_REV, GL_UNSIGNED_INT_24_8, GL_UNSIGNED_INT_10F_11F_11F_REV, GL_UNSIGNED_INT_5_9_9_9_REV, and GL_FLOAT_32_UNSIGNED_INT_24_8_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Return a texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexLevelParameter">
      <MemberSignature Language="C#" Value="public static void GetTexLevelParameter (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.GetTextureParameter pname, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexLevelParameter(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.GetTextureParameter pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetTextureParameter" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of the target texture, one of GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, GL_TEXTURE_2D_MULTISAMPLE, GL_TEXTURE_2D_MULTISAMPLE_ARRAY, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, GL_PROXY_TEXTURE_1D, GL_PROXY_TEXTURE_2D, GL_PROXY_TEXTURE_3D, GL_PROXY_TEXTURE_1D_ARRAY, GL_PROXY_TEXTURE_2D_ARRAY, GL_PROXY_TEXTURE_RECTANGLE, GL_PROXY_TEXTURE_2D_MULTISAMPLE, GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY, GL_PROXY_TEXTURE_CUBE_MAP, or GL_TEXTURE_BUFFER.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number of the desired image. Level 0 is the base image level. Level is the th mipmap reduction image.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a texture parameter. GL_TEXTURE_WIDTH, GL_TEXTURE_HEIGHT, GL_TEXTURE_DEPTH, GL_TEXTURE_INTERNAL_FORMAT, GL_TEXTURE_BORDER, GL_TEXTURE_RED_SIZE, GL_TEXTURE_GREEN_SIZE, GL_TEXTURE_BLUE_SIZE, GL_TEXTURE_ALPHA_SIZE, GL_TEXTURE_DEPTH_SIZE, GL_TEXTURE_COMPRESSED, and GL_TEXTURE_COMPRESSED_IMAGE_SIZE are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0]
            Return texture parameter values for a specific level of detail
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexLevelParameter">
      <MemberSignature Language="C#" Value="public static void GetTexLevelParameter (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.GetTextureParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexLevelParameter(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.GetTextureParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetTextureParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of the target texture, one of GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, GL_TEXTURE_2D_MULTISAMPLE, GL_TEXTURE_2D_MULTISAMPLE_ARRAY, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, GL_PROXY_TEXTURE_1D, GL_PROXY_TEXTURE_2D, GL_PROXY_TEXTURE_3D, GL_PROXY_TEXTURE_1D_ARRAY, GL_PROXY_TEXTURE_2D_ARRAY, GL_PROXY_TEXTURE_RECTANGLE, GL_PROXY_TEXTURE_2D_MULTISAMPLE, GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY, GL_PROXY_TEXTURE_CUBE_MAP, or GL_TEXTURE_BUFFER.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number of the desired image. Level 0 is the base image level. Level is the th mipmap reduction image.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a texture parameter. GL_TEXTURE_WIDTH, GL_TEXTURE_HEIGHT, GL_TEXTURE_DEPTH, GL_TEXTURE_INTERNAL_FORMAT, GL_TEXTURE_BORDER, GL_TEXTURE_RED_SIZE, GL_TEXTURE_GREEN_SIZE, GL_TEXTURE_BLUE_SIZE, GL_TEXTURE_ALPHA_SIZE, GL_TEXTURE_DEPTH_SIZE, GL_TEXTURE_COMPRESSED, and GL_TEXTURE_COMPRESSED_IMAGE_SIZE are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0]
            Return texture parameter values for a specific level of detail
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexLevelParameter">
      <MemberSignature Language="C#" Value="public static void GetTexLevelParameter (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.GetTextureParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexLevelParameter(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.GetTextureParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetTextureParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of the target texture, one of GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, GL_TEXTURE_2D_MULTISAMPLE, GL_TEXTURE_2D_MULTISAMPLE_ARRAY, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, GL_PROXY_TEXTURE_1D, GL_PROXY_TEXTURE_2D, GL_PROXY_TEXTURE_3D, GL_PROXY_TEXTURE_1D_ARRAY, GL_PROXY_TEXTURE_2D_ARRAY, GL_PROXY_TEXTURE_RECTANGLE, GL_PROXY_TEXTURE_2D_MULTISAMPLE, GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY, GL_PROXY_TEXTURE_CUBE_MAP, or GL_TEXTURE_BUFFER.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number of the desired image. Level 0 is the base image level. Level is the th mipmap reduction image.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a texture parameter. GL_TEXTURE_WIDTH, GL_TEXTURE_HEIGHT, GL_TEXTURE_DEPTH, GL_TEXTURE_INTERNAL_FORMAT, GL_TEXTURE_BORDER, GL_TEXTURE_RED_SIZE, GL_TEXTURE_GREEN_SIZE, GL_TEXTURE_BLUE_SIZE, GL_TEXTURE_ALPHA_SIZE, GL_TEXTURE_DEPTH_SIZE, GL_TEXTURE_COMPRESSED, and GL_TEXTURE_COMPRESSED_IMAGE_SIZE are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0]
            Return texture parameter values for a specific level of detail
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexLevelParameter">
      <MemberSignature Language="C#" Value="public static void GetTexLevelParameter (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.GetTextureParameter pname, out float params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexLevelParameter(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.GetTextureParameter pname, float32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetTextureParameter" />
        <Parameter Name="params" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of the target texture, one of GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, GL_TEXTURE_2D_MULTISAMPLE, GL_TEXTURE_2D_MULTISAMPLE_ARRAY, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, GL_PROXY_TEXTURE_1D, GL_PROXY_TEXTURE_2D, GL_PROXY_TEXTURE_3D, GL_PROXY_TEXTURE_1D_ARRAY, GL_PROXY_TEXTURE_2D_ARRAY, GL_PROXY_TEXTURE_RECTANGLE, GL_PROXY_TEXTURE_2D_MULTISAMPLE, GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY, GL_PROXY_TEXTURE_CUBE_MAP, or GL_TEXTURE_BUFFER.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number of the desired image. Level 0 is the base image level. Level is the th mipmap reduction image.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a texture parameter. GL_TEXTURE_WIDTH, GL_TEXTURE_HEIGHT, GL_TEXTURE_DEPTH, GL_TEXTURE_INTERNAL_FORMAT, GL_TEXTURE_BORDER, GL_TEXTURE_RED_SIZE, GL_TEXTURE_GREEN_SIZE, GL_TEXTURE_BLUE_SIZE, GL_TEXTURE_ALPHA_SIZE, GL_TEXTURE_DEPTH_SIZE, GL_TEXTURE_COMPRESSED, and GL_TEXTURE_COMPRESSED_IMAGE_SIZE are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0]
            Return texture parameter values for a specific level of detail
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexLevelParameter">
      <MemberSignature Language="C#" Value="public static void GetTexLevelParameter (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.GetTextureParameter pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexLevelParameter(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.GetTextureParameter pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetTextureParameter" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of the target texture, one of GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, GL_TEXTURE_2D_MULTISAMPLE, GL_TEXTURE_2D_MULTISAMPLE_ARRAY, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, GL_PROXY_TEXTURE_1D, GL_PROXY_TEXTURE_2D, GL_PROXY_TEXTURE_3D, GL_PROXY_TEXTURE_1D_ARRAY, GL_PROXY_TEXTURE_2D_ARRAY, GL_PROXY_TEXTURE_RECTANGLE, GL_PROXY_TEXTURE_2D_MULTISAMPLE, GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY, GL_PROXY_TEXTURE_CUBE_MAP, or GL_TEXTURE_BUFFER.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number of the desired image. Level 0 is the base image level. Level is the th mipmap reduction image.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a texture parameter. GL_TEXTURE_WIDTH, GL_TEXTURE_HEIGHT, GL_TEXTURE_DEPTH, GL_TEXTURE_INTERNAL_FORMAT, GL_TEXTURE_BORDER, GL_TEXTURE_RED_SIZE, GL_TEXTURE_GREEN_SIZE, GL_TEXTURE_BLUE_SIZE, GL_TEXTURE_ALPHA_SIZE, GL_TEXTURE_DEPTH_SIZE, GL_TEXTURE_COMPRESSED, and GL_TEXTURE_COMPRESSED_IMAGE_SIZE are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0]
            Return texture parameter values for a specific level of detail
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexLevelParameter">
      <MemberSignature Language="C#" Value="public static void GetTexLevelParameter (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.GetTextureParameter pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexLevelParameter(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.GetTextureParameter pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetTextureParameter" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of the target texture, one of GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, GL_TEXTURE_2D_MULTISAMPLE, GL_TEXTURE_2D_MULTISAMPLE_ARRAY, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, GL_PROXY_TEXTURE_1D, GL_PROXY_TEXTURE_2D, GL_PROXY_TEXTURE_3D, GL_PROXY_TEXTURE_1D_ARRAY, GL_PROXY_TEXTURE_2D_ARRAY, GL_PROXY_TEXTURE_RECTANGLE, GL_PROXY_TEXTURE_2D_MULTISAMPLE, GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY, GL_PROXY_TEXTURE_CUBE_MAP, or GL_TEXTURE_BUFFER.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number of the desired image. Level 0 is the base image level. Level is the th mipmap reduction image.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a texture parameter. GL_TEXTURE_WIDTH, GL_TEXTURE_HEIGHT, GL_TEXTURE_DEPTH, GL_TEXTURE_INTERNAL_FORMAT, GL_TEXTURE_BORDER, GL_TEXTURE_RED_SIZE, GL_TEXTURE_GREEN_SIZE, GL_TEXTURE_BLUE_SIZE, GL_TEXTURE_ALPHA_SIZE, GL_TEXTURE_DEPTH_SIZE, GL_TEXTURE_COMPRESSED, and GL_TEXTURE_COMPRESSED_IMAGE_SIZE are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v1.0]
            Return texture parameter values for a specific level of detail
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexParameter">
      <MemberSignature Language="C#" Value="public static void GetTexParameter (MonoMac.OpenGL.TextureTarget target, MonoMac.OpenGL.GetTextureParameter pname, out float params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexParameter(valuetype MonoMac.OpenGL.TextureTarget target, valuetype MonoMac.OpenGL.GetTextureParameter pname, float32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetTextureParameter" />
        <Parameter Name="params" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of the target texture. GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_3D, GL_TEXTURE_RECTANGLE, and GL_TEXTURE_CUBE_MAP are accepted.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a texture parameter. GL_TEXTURE_BASE_LEVEL, GL_TEXTURE_BORDER_COLOR, GL_TEXTURE_COMPARE_MODE, GL_TEXTURE_COMPARE_FUNC, GL_TEXTURE_LOD_BIAS, GL_TEXTURE_MAG_FILTER, GL_TEXTURE_MAX_LEVEL, GL_TEXTURE_MAX_LOD, GL_TEXTURE_MIN_FILTER, GL_TEXTURE_MIN_LOD, GL_TEXTURE_SWIZZLE_R, GL_TEXTURE_SWIZZLE_G, GL_TEXTURE_SWIZZLE_B, GL_TEXTURE_SWIZZLE_A, GL_TEXTURE_SWIZZLE_RGBA, GL_TEXTURE_WRAP_S, GL_TEXTURE_WRAP_T, and GL_TEXTURE_WRAP_R are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the texture parameters.
            </para>
        </param>
        <summary>[requires: v1.0]
            Return texture parameter values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexParameter">
      <MemberSignature Language="C#" Value="public static void GetTexParameter (MonoMac.OpenGL.TextureTarget target, MonoMac.OpenGL.GetTextureParameter pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexParameter(valuetype MonoMac.OpenGL.TextureTarget target, valuetype MonoMac.OpenGL.GetTextureParameter pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetTextureParameter" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of the target texture. GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_3D, GL_TEXTURE_RECTANGLE, and GL_TEXTURE_CUBE_MAP are accepted.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a texture parameter. GL_TEXTURE_BASE_LEVEL, GL_TEXTURE_BORDER_COLOR, GL_TEXTURE_COMPARE_MODE, GL_TEXTURE_COMPARE_FUNC, GL_TEXTURE_LOD_BIAS, GL_TEXTURE_MAG_FILTER, GL_TEXTURE_MAX_LEVEL, GL_TEXTURE_MAX_LOD, GL_TEXTURE_MIN_FILTER, GL_TEXTURE_MIN_LOD, GL_TEXTURE_SWIZZLE_R, GL_TEXTURE_SWIZZLE_G, GL_TEXTURE_SWIZZLE_B, GL_TEXTURE_SWIZZLE_A, GL_TEXTURE_SWIZZLE_RGBA, GL_TEXTURE_WRAP_S, GL_TEXTURE_WRAP_T, and GL_TEXTURE_WRAP_R are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the texture parameters.
            </para>
        </param>
        <summary>[requires: v1.0]
            Return texture parameter values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTexParameter">
      <MemberSignature Language="C#" Value="public static void GetTexParameter (MonoMac.OpenGL.TextureTarget target, MonoMac.OpenGL.GetTextureParameter pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTexParameter(valuetype MonoMac.OpenGL.TextureTarget target, valuetype MonoMac.OpenGL.GetTextureParameter pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.GetTextureParameter" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the symbolic name of the target texture. GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_3D, GL_TEXTURE_RECTANGLE, and GL_TEXTURE_CUBE_MAP are accepted.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a texture parameter. GL_TEXTURE_BASE_LEVEL, GL_TEXTURE_BORDER_COLOR, GL_TEXTURE_COMPARE_MODE, GL_TEXTURE_COMPARE_FUNC, GL_TEXTURE_LOD_BIAS, GL_TEXTURE_MAG_FILTER, GL_TEXTURE_MAX_LEVEL, GL_TEXTURE_MAX_LOD, GL_TEXTURE_MIN_FILTER, GL_TEXTURE_MIN_LOD, GL_TEXTURE_SWIZZLE_R, GL_TEXTURE_SWIZZLE_G, GL_TEXTURE_SWIZZLE_B, GL_TEXTURE_SWIZZLE_A, GL_TEXTURE_SWIZZLE_RGBA, GL_TEXTURE_WRAP_S, GL_TEXTURE_WRAP_T, and GL_TEXTURE_WRAP_R are accepted.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the texture parameters.
            </para>
        </param>
        <summary>[requires: v1.0]
            Return texture parameter values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniform">
      <MemberSignature Language="C#" Value="public static void GetUniform (int program, int location, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetUniform(int32 program, int32 location, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be queried.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the value of the specified uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the value of a uniform variable
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniform">
      <MemberSignature Language="C#" Value="public static void GetUniform (int program, int location, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetUniform(int32 program, int32 location, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be queried.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the value of the specified uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the value of a uniform variable
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniform">
      <MemberSignature Language="C#" Value="public static void GetUniform (int program, int location, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetUniform(int32 program, int32 location, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be queried.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the value of the specified uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the value of a uniform variable
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniform">
      <MemberSignature Language="C#" Value="public static void GetUniform (int program, int location, out float params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetUniform(int32 program, int32 location, float32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="params" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be queried.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the value of the specified uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the value of a uniform variable
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniform">
      <MemberSignature Language="C#" Value="public static void GetUniform (int program, int location, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetUniform(int32 program, int32 location, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be queried.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the value of the specified uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the value of a uniform variable
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniform">
      <MemberSignature Language="C#" Value="public static void GetUniform (int program, int location, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetUniform(int32 program, int32 location, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be queried.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the value of the specified uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the value of a uniform variable
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniform">
      <MemberSignature Language="C#" Value="public static void GetUniform (uint program, int location, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetUniform(unsigned int32 program, int32 location, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be queried.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the value of the specified uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the value of a uniform variable
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniform">
      <MemberSignature Language="C#" Value="public static void GetUniform (uint program, int location, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetUniform(unsigned int32 program, int32 location, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be queried.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the value of the specified uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the value of a uniform variable
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniform">
      <MemberSignature Language="C#" Value="public static void GetUniform (uint program, int location, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetUniform(unsigned int32 program, int32 location, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be queried.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the value of the specified uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the value of a uniform variable
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniform">
      <MemberSignature Language="C#" Value="public static void GetUniform (uint program, int location, out float params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetUniform(unsigned int32 program, int32 location, float32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="params" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be queried.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the value of the specified uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the value of a uniform variable
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniform">
      <MemberSignature Language="C#" Value="public static void GetUniform (uint program, int location, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetUniform(unsigned int32 program, int32 location, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be queried.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the value of the specified uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the value of a uniform variable
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniform">
      <MemberSignature Language="C#" Value="public static void GetUniform (uint program, int location, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetUniform(unsigned int32 program, int32 location, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be queried.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the value of the specified uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the value of a uniform variable
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniformLocation">
      <MemberSignature Language="C#" Value="public static int GetUniformLocation (int program, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetUniformLocation(int32 program, string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="name">
          <para>
            Points to a null terminated string containing the name of the uniform variable whose location is to be queried.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the location of a uniform variable
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniformLocation">
      <MemberSignature Language="C#" Value="public static int GetUniformLocation (uint program, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetUniformLocation(unsigned int32 program, string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the program object to be queried.
            </para>
        </param>
        <param name="name">
          <para>
            Points to a null terminated string containing the name of the uniform variable whose location is to be queried.
            </para>
        </param>
        <summary>[requires: v2.0]
            Returns the location of a uniform variable
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (int index, MonoMac.OpenGL.VertexAttribParameter pname, out double params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, float64 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (int index, MonoMac.OpenGL.VertexAttribParameter pname, double* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, float64* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (int index, MonoMac.OpenGL.VertexAttribParameter pname, double[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, float64[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (int index, MonoMac.OpenGL.VertexAttribParameter pname, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (int index, MonoMac.OpenGL.VertexAttribParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (int index, MonoMac.OpenGL.VertexAttribParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (int index, MonoMac.OpenGL.VertexAttribParameter pname, out float params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, float32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (int index, MonoMac.OpenGL.VertexAttribParameter pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (int index, MonoMac.OpenGL.VertexAttribParameter pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (uint index, MonoMac.OpenGL.VertexAttribParameter pname, out double params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(unsigned int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, float64 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (uint index, MonoMac.OpenGL.VertexAttribParameter pname, double* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(unsigned int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, float64* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (uint index, MonoMac.OpenGL.VertexAttribParameter pname, double[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(unsigned int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, float64[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (uint index, MonoMac.OpenGL.VertexAttribParameter pname, out int params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(unsigned int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, int32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (uint index, MonoMac.OpenGL.VertexAttribParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(unsigned int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (uint index, MonoMac.OpenGL.VertexAttribParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(unsigned int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (uint index, MonoMac.OpenGL.VertexAttribParameter pname, out float params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(unsigned int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, float32 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Single&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (uint index, MonoMac.OpenGL.VertexAttribParameter pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(unsigned int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttrib">
      <MemberSignature Language="C#" Value="public static void GetVertexAttrib (uint index, MonoMac.OpenGL.VertexAttribParameter pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttrib(unsigned int32 index, valuetype MonoMac.OpenGL.VertexAttribParameter pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribParameter" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be queried.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the vertex attribute parameter to be queried. Accepted values are GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, GL_VERTEX_ATTRIB_ARRAY_ENABLED, GL_VERTEX_ATTRIB_ARRAY_SIZE, GL_VERTEX_ATTRIB_ARRAY_STRIDE, GL_VERTEX_ATTRIB_ARRAY_TYPE, GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, GL_VERTEX_ATTRIB_ARRAY_INTEGER, GL_VERTEX_ATTRIB_ARRAY_DIVISOR, or GL_CURRENT_VERTEX_ATTRIB.
            </para>
        </param>
        <param name="params">
          <para>
            Returns the requested data.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return a generic vertex attribute parameter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttribPointer">
      <MemberSignature Language="C#" Value="public static void GetVertexAttribPointer (int index, MonoMac.OpenGL.VertexAttribPointerParameter pname, IntPtr pointer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttribPointer(int32 index, valuetype MonoMac.OpenGL.VertexAttribPointerParameter pname, native int pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribPointerParameter" />
        <Parameter Name="pointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be returned.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the generic vertex attribute parameter to be returned. Must be GL_VERTEX_ATTRIB_ARRAY_POINTER.
            </para>
        </param>
        <param name="pointer">
          <para>
            Returns the pointer value.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return the address of the specified generic vertex attribute pointer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttribPointer">
      <MemberSignature Language="C#" Value="public static void GetVertexAttribPointer (uint index, MonoMac.OpenGL.VertexAttribPointerParameter pname, IntPtr pointer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttribPointer(unsigned int32 index, valuetype MonoMac.OpenGL.VertexAttribPointerParameter pname, native int pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribPointerParameter" />
        <Parameter Name="pointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be returned.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the generic vertex attribute parameter to be returned. Must be GL_VERTEX_ATTRIB_ARRAY_POINTER.
            </para>
        </param>
        <param name="pointer">
          <para>
            Returns the pointer value.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return the address of the specified generic vertex attribute pointer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttribPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void GetVertexAttribPointer&lt;T2&gt; (int index, MonoMac.OpenGL.VertexAttribPointerParameter pname, out T2 pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttribPointer&lt;struct .ctor (class System.ValueType) T2&gt;(int32 index, valuetype MonoMac.OpenGL.VertexAttribPointerParameter pname, !!T2 pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribPointerParameter" />
        <Parameter Name="pointer" Type="T2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be returned.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the generic vertex attribute parameter to be returned. Must be GL_VERTEX_ATTRIB_ARRAY_POINTER.
            </para>
        </param>
        <param name="pointer">
          <para>
            Returns the pointer value.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return the address of the specified generic vertex attribute pointer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttribPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void GetVertexAttribPointer&lt;T2&gt; (int index, MonoMac.OpenGL.VertexAttribPointerParameter pname, T2[,,] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttribPointer&lt;struct .ctor (class System.ValueType) T2&gt;(int32 index, valuetype MonoMac.OpenGL.VertexAttribPointerParameter pname, !!T2[,,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribPointerParameter" />
        <Parameter Name="pointer" Type="T2[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be returned.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the generic vertex attribute parameter to be returned. Must be GL_VERTEX_ATTRIB_ARRAY_POINTER.
            </para>
        </param>
        <param name="pointer">
          <para>
            Returns the pointer value.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return the address of the specified generic vertex attribute pointer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttribPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void GetVertexAttribPointer&lt;T2&gt; (int index, MonoMac.OpenGL.VertexAttribPointerParameter pname, T2[,] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttribPointer&lt;struct .ctor (class System.ValueType) T2&gt;(int32 index, valuetype MonoMac.OpenGL.VertexAttribPointerParameter pname, !!T2[,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribPointerParameter" />
        <Parameter Name="pointer" Type="T2[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be returned.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the generic vertex attribute parameter to be returned. Must be GL_VERTEX_ATTRIB_ARRAY_POINTER.
            </para>
        </param>
        <param name="pointer">
          <para>
            Returns the pointer value.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return the address of the specified generic vertex attribute pointer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttribPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void GetVertexAttribPointer&lt;T2&gt; (int index, MonoMac.OpenGL.VertexAttribPointerParameter pname, T2[] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttribPointer&lt;struct .ctor (class System.ValueType) T2&gt;(int32 index, valuetype MonoMac.OpenGL.VertexAttribPointerParameter pname, !!T2[] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribPointerParameter" />
        <Parameter Name="pointer" Type="T2[]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be returned.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the generic vertex attribute parameter to be returned. Must be GL_VERTEX_ATTRIB_ARRAY_POINTER.
            </para>
        </param>
        <param name="pointer">
          <para>
            Returns the pointer value.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return the address of the specified generic vertex attribute pointer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttribPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void GetVertexAttribPointer&lt;T2&gt; (uint index, MonoMac.OpenGL.VertexAttribPointerParameter pname, out T2 pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttribPointer&lt;struct .ctor (class System.ValueType) T2&gt;(unsigned int32 index, valuetype MonoMac.OpenGL.VertexAttribPointerParameter pname, !!T2 pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribPointerParameter" />
        <Parameter Name="pointer" Type="T2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be returned.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the generic vertex attribute parameter to be returned. Must be GL_VERTEX_ATTRIB_ARRAY_POINTER.
            </para>
        </param>
        <param name="pointer">
          <para>
            Returns the pointer value.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return the address of the specified generic vertex attribute pointer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttribPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void GetVertexAttribPointer&lt;T2&gt; (uint index, MonoMac.OpenGL.VertexAttribPointerParameter pname, T2[,,] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttribPointer&lt;struct .ctor (class System.ValueType) T2&gt;(unsigned int32 index, valuetype MonoMac.OpenGL.VertexAttribPointerParameter pname, !!T2[,,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribPointerParameter" />
        <Parameter Name="pointer" Type="T2[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be returned.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the generic vertex attribute parameter to be returned. Must be GL_VERTEX_ATTRIB_ARRAY_POINTER.
            </para>
        </param>
        <param name="pointer">
          <para>
            Returns the pointer value.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return the address of the specified generic vertex attribute pointer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttribPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void GetVertexAttribPointer&lt;T2&gt; (uint index, MonoMac.OpenGL.VertexAttribPointerParameter pname, T2[,] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttribPointer&lt;struct .ctor (class System.ValueType) T2&gt;(unsigned int32 index, valuetype MonoMac.OpenGL.VertexAttribPointerParameter pname, !!T2[,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribPointerParameter" />
        <Parameter Name="pointer" Type="T2[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be returned.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the generic vertex attribute parameter to be returned. Must be GL_VERTEX_ATTRIB_ARRAY_POINTER.
            </para>
        </param>
        <param name="pointer">
          <para>
            Returns the pointer value.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return the address of the specified generic vertex attribute pointer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVertexAttribPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void GetVertexAttribPointer&lt;T2&gt; (uint index, MonoMac.OpenGL.VertexAttribPointerParameter pname, T2[] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetVertexAttribPointer&lt;struct .ctor (class System.ValueType) T2&gt;(unsigned int32 index, valuetype MonoMac.OpenGL.VertexAttribPointerParameter pname, !!T2[] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.VertexAttribPointerParameter" />
        <Parameter Name="pointer" Type="T2[]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="index">
          <para>
            Specifies the generic vertex attribute parameter to be returned.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the generic vertex attribute parameter to be returned. Must be GL_VERTEX_ATTRIB_ARRAY_POINTER.
            </para>
        </param>
        <param name="pointer">
          <para>
            Returns the pointer value.
            </para>
        </param>
        <summary>[requires: v2.0]
            Return the address of the specified generic vertex attribute pointer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hint">
      <MemberSignature Language="C#" Value="public static void Hint (MonoMac.OpenGL.HintTarget target, MonoMac.OpenGL.HintMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Hint(valuetype MonoMac.OpenGL.HintTarget target, valuetype MonoMac.OpenGL.HintMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.HintTarget" />
        <Parameter Name="mode" Type="MonoMac.OpenGL.HintMode" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies a symbolic constant indicating the behavior to be controlled. GL_LINE_SMOOTH_HINT, GL_POLYGON_SMOOTH_HINT, GL_TEXTURE_COMPRESSION_HINT, and GL_FRAGMENT_SHADER_DERIVATIVE_HINT are accepted.
            </para>
        </param>
        <param name="mode">
          <para>
            Specifies a symbolic constant indicating the desired behavior. GL_FASTEST, GL_NICEST, and GL_DONT_CARE are accepted.
            </para>
        </param>
        <summary>[requires: v1.0]
            Specify implementation-specific hints
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Histogram">
      <MemberSignature Language="C#" Value="public static void Histogram (MonoMac.OpenGL.HistogramTarget target, int width, MonoMac.OpenGL.PixelInternalFormat internalformat, bool sink);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Histogram(valuetype MonoMac.OpenGL.HistogramTarget target, int32 width, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, bool sink) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.HistogramTarget" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="sink" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The histogram whose parameters are to be set. Must be one of GL_HISTOGRAM or GL_PROXY_HISTOGRAM.
            </para>
        </param>
        <param name="width">
          <para>
            The number of entries in the histogram table. Must be a power of 2.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The format of entries in the histogram table. Must be one of GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="sink">
          <para>
            If GL_TRUE, pixels will be consumed by the histogramming process and no drawing or texture loading will take place. If GL_FALSE, pixels will proceed to the minmax process after histogramming.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define histogram table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public static void Index (byte c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Index(unsigned int8 c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="c">
          <para>
            Specifies the new value for the current color index.
            </para>
          <para>
          </para>
        </param>
        <summary>[requires: v1.1]
            Set the current color index
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public static void Index (byte* c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Index(unsigned int8* c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="c">
          <para>
            Specifies the new value for the current color index.
            </para>
          <para>
          </para>
        </param>
        <summary>[requires: v1.1]
            Set the current color index
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public static void Index (double c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Index(float64 c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="c">
          <para>
            Specifies the new value for the current color index.
            </para>
          <para>
          </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color index
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public static void Index (double* c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Index(float64* c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="c">
          <para>
            Specifies the new value for the current color index.
            </para>
          <para>
          </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color index
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public static void Index (short c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Index(int16 c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="c">
          <para>
            Specifies the new value for the current color index.
            </para>
          <para>
          </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color index
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public static void Index (short* c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Index(int16* c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="c">
          <para>
            Specifies the new value for the current color index.
            </para>
          <para>
          </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color index
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public static void Index (int c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Index(int32 c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">
          <para>
            Specifies the new value for the current color index.
            </para>
          <para>
          </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color index
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public static void Index (int* c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Index(int32* c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="c">
          <para>
            Specifies the new value for the current color index.
            </para>
          <para>
          </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color index
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public static void Index (float c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Index(float32 c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="c">
          <para>
            Specifies the new value for the current color index.
            </para>
          <para>
          </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color index
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public static void Index (float* c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Index(float32* c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="c">
          <para>
            Specifies the new value for the current color index.
            </para>
          <para>
          </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current color index
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexMask">
      <MemberSignature Language="C#" Value="public static void IndexMask (int mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IndexMask(int32 mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mask">
          <para>
            Specifies a bit mask to enable and disable the writing of individual bits in the color index buffers. Initially, the mask is all 1's.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Control the writing of individual bits in the color index buffers
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexMask">
      <MemberSignature Language="C#" Value="public static void IndexMask (uint mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IndexMask(unsigned int32 mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="mask">
          <para>
            Specifies a bit mask to enable and disable the writing of individual bits in the color index buffers. Initially, the mask is all 1's.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Control the writing of individual bits in the color index buffers
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexPointer">
      <MemberSignature Language="C#" Value="public static void IndexPointer (MonoMac.OpenGL.IndexPointerType type, int stride, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IndexPointer(valuetype MonoMac.OpenGL.IndexPointerType type, int32 stride, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.IndexPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="stride">To be added.</param>
        <param name="offset">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexPointer">
      <MemberSignature Language="C#" Value="public static void IndexPointer (MonoMac.OpenGL.IndexPointerType type, int stride, IntPtr pointer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IndexPointer(valuetype MonoMac.OpenGL.IndexPointerType type, int32 stride, native int pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.IndexPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="type">
          <para>
            Specifies the data type of each color index in the array. Symbolic constants GL_UNSIGNED_BYTE, GL_SHORT, GL_INT, GL_FLOAT, and GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive color indexes. If stride is 0, the color indexes are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first index in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of color indexes
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void IndexPointer&lt;T2&gt; (MonoMac.OpenGL.IndexPointerType type, int stride, out T2 pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IndexPointer&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.IndexPointerType type, int32 stride, !!T2 pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.IndexPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="type">
          <para>
            Specifies the data type of each color index in the array. Symbolic constants GL_UNSIGNED_BYTE, GL_SHORT, GL_INT, GL_FLOAT, and GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive color indexes. If stride is 0, the color indexes are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first index in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of color indexes
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void IndexPointer&lt;T2&gt; (MonoMac.OpenGL.IndexPointerType type, int stride, T2[,,] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IndexPointer&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.IndexPointerType type, int32 stride, !!T2[,,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.IndexPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T2[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="type">
          <para>
            Specifies the data type of each color index in the array. Symbolic constants GL_UNSIGNED_BYTE, GL_SHORT, GL_INT, GL_FLOAT, and GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive color indexes. If stride is 0, the color indexes are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first index in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of color indexes
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void IndexPointer&lt;T2&gt; (MonoMac.OpenGL.IndexPointerType type, int stride, T2[,] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IndexPointer&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.IndexPointerType type, int32 stride, !!T2[,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.IndexPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T2[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="type">
          <para>
            Specifies the data type of each color index in the array. Symbolic constants GL_UNSIGNED_BYTE, GL_SHORT, GL_INT, GL_FLOAT, and GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive color indexes. If stride is 0, the color indexes are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first index in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of color indexes
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void IndexPointer&lt;T2&gt; (MonoMac.OpenGL.IndexPointerType type, int stride, T2[] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IndexPointer&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.IndexPointerType type, int32 stride, !!T2[] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.IndexPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T2[]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="type">
          <para>
            Specifies the data type of each color index in the array. Symbolic constants GL_UNSIGNED_BYTE, GL_SHORT, GL_INT, GL_FLOAT, and GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive color indexes. If stride is 0, the color indexes are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first index in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of color indexes
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitNames">
      <MemberSignature Language="C#" Value="public static void InitNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitNames() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[requires: v1.0][deprecated: v3.1]
            Initialize the name stack
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterleavedArrays">
      <MemberSignature Language="C#" Value="public static void InterleavedArrays (MonoMac.OpenGL.InterleavedArrayFormat format, int stride, IntPtr pointer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InterleavedArrays(valuetype MonoMac.OpenGL.InterleavedArrayFormat format, int32 stride, native int pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="MonoMac.OpenGL.InterleavedArrayFormat" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="format">
          <para>
            Specifies the type of array to enable. Symbolic constants GL_V2F, GL_V3F, GL_C4UB_V2F, GL_C4UB_V3F, GL_C3F_V3F, GL_N3F_V3F, GL_C4F_N3F_V3F, GL_T2F_V3F, GL_T4F_V4F, GL_T2F_C4UB_V3F, GL_T2F_C3F_V3F, GL_T2F_N3F_V3F, GL_T2F_C4F_N3F_V3F, and GL_T4F_C4F_N3F_V4F are accepted.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the offset in bytes between each aggregate array element.
            </para>
        </param>
        <param name="pointer">To be added.</param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Simultaneously specify and enable several interleaved arrays
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterleavedArrays&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void InterleavedArrays&lt;T2&gt; (MonoMac.OpenGL.InterleavedArrayFormat format, int stride, out T2 pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InterleavedArrays&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.InterleavedArrayFormat format, int32 stride, !!T2 pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="format" Type="MonoMac.OpenGL.InterleavedArrayFormat" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="format">
          <para>
            Specifies the type of array to enable. Symbolic constants GL_V2F, GL_V3F, GL_C4UB_V2F, GL_C4UB_V3F, GL_C3F_V3F, GL_N3F_V3F, GL_C4F_N3F_V3F, GL_T2F_V3F, GL_T4F_V4F, GL_T2F_C4UB_V3F, GL_T2F_C3F_V3F, GL_T2F_N3F_V3F, GL_T2F_C4F_N3F_V3F, and GL_T4F_C4F_N3F_V4F are accepted.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the offset in bytes between each aggregate array element.
            </para>
        </param>
        <param name="pointer">To be added.</param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Simultaneously specify and enable several interleaved arrays
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterleavedArrays&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void InterleavedArrays&lt;T2&gt; (MonoMac.OpenGL.InterleavedArrayFormat format, int stride, T2[,,] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InterleavedArrays&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.InterleavedArrayFormat format, int32 stride, !!T2[,,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="format" Type="MonoMac.OpenGL.InterleavedArrayFormat" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T2[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="format">
          <para>
            Specifies the type of array to enable. Symbolic constants GL_V2F, GL_V3F, GL_C4UB_V2F, GL_C4UB_V3F, GL_C3F_V3F, GL_N3F_V3F, GL_C4F_N3F_V3F, GL_T2F_V3F, GL_T4F_V4F, GL_T2F_C4UB_V3F, GL_T2F_C3F_V3F, GL_T2F_N3F_V3F, GL_T2F_C4F_N3F_V3F, and GL_T4F_C4F_N3F_V4F are accepted.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the offset in bytes between each aggregate array element.
            </para>
        </param>
        <param name="pointer">To be added.</param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Simultaneously specify and enable several interleaved arrays
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterleavedArrays&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void InterleavedArrays&lt;T2&gt; (MonoMac.OpenGL.InterleavedArrayFormat format, int stride, T2[,] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InterleavedArrays&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.InterleavedArrayFormat format, int32 stride, !!T2[,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="format" Type="MonoMac.OpenGL.InterleavedArrayFormat" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T2[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="format">
          <para>
            Specifies the type of array to enable. Symbolic constants GL_V2F, GL_V3F, GL_C4UB_V2F, GL_C4UB_V3F, GL_C3F_V3F, GL_N3F_V3F, GL_C4F_N3F_V3F, GL_T2F_V3F, GL_T4F_V4F, GL_T2F_C4UB_V3F, GL_T2F_C3F_V3F, GL_T2F_N3F_V3F, GL_T2F_C4F_N3F_V3F, and GL_T4F_C4F_N3F_V4F are accepted.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the offset in bytes between each aggregate array element.
            </para>
        </param>
        <param name="pointer">To be added.</param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Simultaneously specify and enable several interleaved arrays
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterleavedArrays&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void InterleavedArrays&lt;T2&gt; (MonoMac.OpenGL.InterleavedArrayFormat format, int stride, T2[] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InterleavedArrays&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.InterleavedArrayFormat format, int32 stride, !!T2[] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="format" Type="MonoMac.OpenGL.InterleavedArrayFormat" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T2[]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="format">
          <para>
            Specifies the type of array to enable. Symbolic constants GL_V2F, GL_V3F, GL_C4UB_V2F, GL_C4UB_V3F, GL_C3F_V3F, GL_N3F_V3F, GL_C4F_N3F_V3F, GL_T2F_V3F, GL_T4F_V4F, GL_T2F_C4UB_V3F, GL_T2F_C3F_V3F, GL_T2F_N3F_V3F, GL_T2F_C4F_N3F_V3F, and GL_T4F_C4F_N3F_V4F are accepted.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the offset in bytes between each aggregate array element.
            </para>
        </param>
        <param name="pointer">To be added.</param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Simultaneously specify and enable several interleaved arrays
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuffer">
      <MemberSignature Language="C#" Value="public static bool IsBuffer (int buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBuffer(int32 buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <para>
            Specifies a value that may be the name of a buffer object.
            </para>
        </param>
        <summary>[requires: v1.5]
            Determine if a name corresponds to a buffer object
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuffer">
      <MemberSignature Language="C#" Value="public static bool IsBuffer (uint buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBuffer(unsigned int32 buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <para>
            Specifies a value that may be the name of a buffer object.
            </para>
        </param>
        <summary>[requires: v1.5]
            Determine if a name corresponds to a buffer object
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public static bool IsEnabled (MonoMac.OpenGL.EnableCap cap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEnabled(valuetype MonoMac.OpenGL.EnableCap cap) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cap" Type="MonoMac.OpenGL.EnableCap" />
      </Parameters>
      <Docs>
        <param name="cap">
          <para>
            Specifies a symbolic constant indicating a GL capability.
            </para>
        </param>
        <summary>[requires: v1.0]
            Test whether a capability is enabled
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsList">
      <MemberSignature Language="C#" Value="public static bool IsList (int list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsList(int32 list) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="list">
          <para>
            Specifies a potential display list name.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Determine if a name corresponds to a display list
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsList">
      <MemberSignature Language="C#" Value="public static bool IsList (uint list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsList(unsigned int32 list) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="list">
          <para>
            Specifies a potential display list name.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Determine if a name corresponds to a display list
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProgram">
      <MemberSignature Language="C#" Value="public static bool IsProgram (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsProgram(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>[requires: NV_vertex_program]
            Determines if a name corresponds to a program object
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProgram">
      <MemberSignature Language="C#" Value="public static bool IsProgram (uint id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsProgram(unsigned int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>[requires: NV_vertex_program]
            Determines if a name corresponds to a program object
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsQuery">
      <MemberSignature Language="C#" Value="public static bool IsQuery (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsQuery(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">
          <para>
            Specifies a value that may be the name of a query object.
            </para>
        </param>
        <summary>[requires: v1.5]
            Determine if a name corresponds to a query object
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsQuery">
      <MemberSignature Language="C#" Value="public static bool IsQuery (uint id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsQuery(unsigned int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="id">
          <para>
            Specifies a value that may be the name of a query object.
            </para>
        </param>
        <summary>[requires: v1.5]
            Determine if a name corresponds to a query object
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsShader">
      <MemberSignature Language="C#" Value="public static bool IsShader (int shader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsShader(int32 shader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies a potential shader object.
            </para>
        </param>
        <summary>[requires: v2.0]
            Determines if a name corresponds to a shader object
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsShader">
      <MemberSignature Language="C#" Value="public static bool IsShader (uint shader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsShader(unsigned int32 shader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies a potential shader object.
            </para>
        </param>
        <summary>[requires: v2.0]
            Determines if a name corresponds to a shader object
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTexture">
      <MemberSignature Language="C#" Value="public static bool IsTexture (int texture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTexture(int32 texture) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="texture">
          <para>
            Specifies a value that may be the name of a texture.
            </para>
        </param>
        <summary>[requires: v1.1]
            Determine if a name corresponds to a texture
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTexture">
      <MemberSignature Language="C#" Value="public static bool IsTexture (uint texture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTexture(unsigned int32 texture) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="texture">
          <para>
            Specifies a value that may be the name of a texture.
            </para>
        </param>
        <summary>[requires: v1.1]
            Determine if a name corresponds to a texture
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static void Light (MonoMac.OpenGL.LightName name, MonoMac.OpenGL.LightParameter pname, MonoMac.OpenGL.Color4 params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Light(valuetype MonoMac.OpenGL.LightName name, valuetype MonoMac.OpenGL.LightParameter pname, valuetype MonoMac.OpenGL.Color4 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="MonoMac.OpenGL.LightName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightParameter" />
        <Parameter Name="params" Type="MonoMac.OpenGL.Color4" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static void Light (MonoMac.OpenGL.LightName name, MonoMac.OpenGL.LightParameter pname, MonoMac.OpenGL.Vector4 params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Light(valuetype MonoMac.OpenGL.LightName name, valuetype MonoMac.OpenGL.LightParameter pname, valuetype MonoMac.OpenGL.Vector4 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="MonoMac.OpenGL.LightName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightParameter" />
        <Parameter Name="params" Type="MonoMac.OpenGL.Vector4" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static void Light (MonoMac.OpenGL.LightName light, MonoMac.OpenGL.LightParameter pname, int param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Light(valuetype MonoMac.OpenGL.LightName light, valuetype MonoMac.OpenGL.LightParameter pname, int32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="light" Type="MonoMac.OpenGL.LightName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightParameter" />
        <Parameter Name="param" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="light">
          <para>
            Specifies a light. The number of lights depends on the implementation, but at least eight lights are supported. They are identified by symbolic names of the form GL_LIGHT , where i ranges from 0 to the value of GL_MAX_LIGHTS - 1.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies a single-valued light source parameter for light. GL_SPOT_EXPONENT, GL_SPOT_CUTOFF, GL_CONSTANT_ATTENUATION, GL_LINEAR_ATTENUATION, and GL_QUADRATIC_ATTENUATION are accepted.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies the value that parameter pname of light source light will be set to.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set light source parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static void Light (MonoMac.OpenGL.LightName light, MonoMac.OpenGL.LightParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Light(valuetype MonoMac.OpenGL.LightName light, valuetype MonoMac.OpenGL.LightParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="light" Type="MonoMac.OpenGL.LightName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="light">
          <para>
            Specifies a light. The number of lights depends on the implementation, but at least eight lights are supported. They are identified by symbolic names of the form GL_LIGHT , where i ranges from 0 to the value of GL_MAX_LIGHTS - 1.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies a single-valued light source parameter for light. GL_SPOT_EXPONENT, GL_SPOT_CUTOFF, GL_CONSTANT_ATTENUATION, GL_LINEAR_ATTENUATION, and GL_QUADRATIC_ATTENUATION are accepted.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set light source parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static void Light (MonoMac.OpenGL.LightName light, MonoMac.OpenGL.LightParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Light(valuetype MonoMac.OpenGL.LightName light, valuetype MonoMac.OpenGL.LightParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="light" Type="MonoMac.OpenGL.LightName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="light">
          <para>
            Specifies a light. The number of lights depends on the implementation, but at least eight lights are supported. They are identified by symbolic names of the form GL_LIGHT , where i ranges from 0 to the value of GL_MAX_LIGHTS - 1.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies a single-valued light source parameter for light. GL_SPOT_EXPONENT, GL_SPOT_CUTOFF, GL_CONSTANT_ATTENUATION, GL_LINEAR_ATTENUATION, and GL_QUADRATIC_ATTENUATION are accepted.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set light source parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static void Light (MonoMac.OpenGL.LightName light, MonoMac.OpenGL.LightParameter pname, float param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Light(valuetype MonoMac.OpenGL.LightName light, valuetype MonoMac.OpenGL.LightParameter pname, float32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="light" Type="MonoMac.OpenGL.LightName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightParameter" />
        <Parameter Name="param" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="light">
          <para>
            Specifies a light. The number of lights depends on the implementation, but at least eight lights are supported. They are identified by symbolic names of the form GL_LIGHT , where i ranges from 0 to the value of GL_MAX_LIGHTS - 1.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies a single-valued light source parameter for light. GL_SPOT_EXPONENT, GL_SPOT_CUTOFF, GL_CONSTANT_ATTENUATION, GL_LINEAR_ATTENUATION, and GL_QUADRATIC_ATTENUATION are accepted.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies the value that parameter pname of light source light will be set to.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set light source parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static void Light (MonoMac.OpenGL.LightName light, MonoMac.OpenGL.LightParameter pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Light(valuetype MonoMac.OpenGL.LightName light, valuetype MonoMac.OpenGL.LightParameter pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="light" Type="MonoMac.OpenGL.LightName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightParameter" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="light">
          <para>
            Specifies a light. The number of lights depends on the implementation, but at least eight lights are supported. They are identified by symbolic names of the form GL_LIGHT , where i ranges from 0 to the value of GL_MAX_LIGHTS - 1.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies a single-valued light source parameter for light. GL_SPOT_EXPONENT, GL_SPOT_CUTOFF, GL_CONSTANT_ATTENUATION, GL_LINEAR_ATTENUATION, and GL_QUADRATIC_ATTENUATION are accepted.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set light source parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static void Light (MonoMac.OpenGL.LightName light, MonoMac.OpenGL.LightParameter pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Light(valuetype MonoMac.OpenGL.LightName light, valuetype MonoMac.OpenGL.LightParameter pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="light" Type="MonoMac.OpenGL.LightName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightParameter" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="light">
          <para>
            Specifies a light. The number of lights depends on the implementation, but at least eight lights are supported. They are identified by symbolic names of the form GL_LIGHT , where i ranges from 0 to the value of GL_MAX_LIGHTS - 1.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies a single-valued light source parameter for light. GL_SPOT_EXPONENT, GL_SPOT_CUTOFF, GL_CONSTANT_ATTENUATION, GL_LINEAR_ATTENUATION, and GL_QUADRATIC_ATTENUATION are accepted.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set light source parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LightModel">
      <MemberSignature Language="C#" Value="public static void LightModel (MonoMac.OpenGL.LightModelParameter pname, int param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LightModel(valuetype MonoMac.OpenGL.LightModelParameter pname, int32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightModelParameter" />
        <Parameter Name="param" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued lighting model parameter. GL_LIGHT_MODEL_LOCAL_VIEWER, GL_LIGHT_MODEL_COLOR_CONTROL, and GL_LIGHT_MODEL_TWO_SIDE are accepted.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies the value that param will be set to.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the lighting model parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LightModel">
      <MemberSignature Language="C#" Value="public static void LightModel (MonoMac.OpenGL.LightModelParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LightModel(valuetype MonoMac.OpenGL.LightModelParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightModelParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued lighting model parameter. GL_LIGHT_MODEL_LOCAL_VIEWER, GL_LIGHT_MODEL_COLOR_CONTROL, and GL_LIGHT_MODEL_TWO_SIDE are accepted.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the lighting model parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LightModel">
      <MemberSignature Language="C#" Value="public static void LightModel (MonoMac.OpenGL.LightModelParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LightModel(valuetype MonoMac.OpenGL.LightModelParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightModelParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued lighting model parameter. GL_LIGHT_MODEL_LOCAL_VIEWER, GL_LIGHT_MODEL_COLOR_CONTROL, and GL_LIGHT_MODEL_TWO_SIDE are accepted.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the lighting model parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LightModel">
      <MemberSignature Language="C#" Value="public static void LightModel (MonoMac.OpenGL.LightModelParameter pname, float param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LightModel(valuetype MonoMac.OpenGL.LightModelParameter pname, float32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightModelParameter" />
        <Parameter Name="param" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued lighting model parameter. GL_LIGHT_MODEL_LOCAL_VIEWER, GL_LIGHT_MODEL_COLOR_CONTROL, and GL_LIGHT_MODEL_TWO_SIDE are accepted.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies the value that param will be set to.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the lighting model parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LightModel">
      <MemberSignature Language="C#" Value="public static void LightModel (MonoMac.OpenGL.LightModelParameter pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LightModel(valuetype MonoMac.OpenGL.LightModelParameter pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightModelParameter" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued lighting model parameter. GL_LIGHT_MODEL_LOCAL_VIEWER, GL_LIGHT_MODEL_COLOR_CONTROL, and GL_LIGHT_MODEL_TWO_SIDE are accepted.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the lighting model parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LightModel">
      <MemberSignature Language="C#" Value="public static void LightModel (MonoMac.OpenGL.LightModelParameter pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LightModel(valuetype MonoMac.OpenGL.LightModelParameter pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.LightModelParameter" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued lighting model parameter. GL_LIGHT_MODEL_LOCAL_VIEWER, GL_LIGHT_MODEL_COLOR_CONTROL, and GL_LIGHT_MODEL_TWO_SIDE are accepted.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the lighting model parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStipple">
      <MemberSignature Language="C#" Value="public static void LineStipple (int factor, short pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LineStipple(int32 factor, int16 pattern) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Int32" />
        <Parameter Name="pattern" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="factor">
          <para>
            Specifies a multiplier for each bit in the line stipple pattern. If factor is 3, for example, each bit in the pattern is used three times before the next bit in the pattern is used. factor is clamped to the range [1, 256] and defaults to 1.
            </para>
        </param>
        <param name="pattern">
          <para>
            Specifies a 16-bit integer whose bit pattern determines which fragments of a line will be drawn when the line is rasterized. Bit zero is used first; the default pattern is all 1's.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the line stipple pattern
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStipple">
      <MemberSignature Language="C#" Value="public static void LineStipple (int factor, ushort pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LineStipple(int32 factor, unsigned int16 pattern) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Int32" />
        <Parameter Name="pattern" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="factor">
          <para>
            Specifies a multiplier for each bit in the line stipple pattern. If factor is 3, for example, each bit in the pattern is used three times before the next bit in the pattern is used. factor is clamped to the range [1, 256] and defaults to 1.
            </para>
        </param>
        <param name="pattern">
          <para>
            Specifies a 16-bit integer whose bit pattern determines which fragments of a line will be drawn when the line is rasterized. Bit zero is used first; the default pattern is all 1's.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the line stipple pattern
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineWidth">
      <MemberSignature Language="C#" Value="public static void LineWidth (float width);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LineWidth(float32 width) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="width">
          <para>
            Specifies the width of rasterized lines. The initial value is 1.
            </para>
        </param>
        <summary>[requires: v1.0]
            Specify the width of rasterized lines
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkProgram">
      <MemberSignature Language="C#" Value="public static void LinkProgram (int program);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LinkProgram(int32 program) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the handle of the program object to be linked.
            </para>
        </param>
        <summary>[requires: v2.0]
            Links a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkProgram">
      <MemberSignature Language="C#" Value="public static void LinkProgram (uint program);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LinkProgram(unsigned int32 program) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the handle of the program object to be linked.
            </para>
        </param>
        <summary>[requires: v2.0]
            Links a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBase">
      <MemberSignature Language="C#" Value="public static void ListBase (int base);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ListBase(int32 base) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="base" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="base">
          <para>
            Specifies an integer offset that will be added to glCallLists offsets to generate display-list names. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the display-list base for glCallLists
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBase">
      <MemberSignature Language="C#" Value="public static void ListBase (uint base);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ListBase(unsigned int32 base) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="base" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="base">
          <para>
            Specifies an integer offset that will be added to glCallLists offsets to generate display-list names. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the display-list base for glCallLists
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIdentity">
      <MemberSignature Language="C#" Value="public static void LoadIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadIdentity() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[requires: v1.0][deprecated: v3.1]
            Replace the current matrix with the identity matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMatrix">
      <MemberSignature Language="C#" Value="public static void LoadMatrix (ref MonoMac.OpenGL.Matrix4 mat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadMatrix(valuetype MonoMac.OpenGL.Matrix4 mat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mat" Type="MonoMac.OpenGL.Matrix4&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="mat">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMatrix">
      <MemberSignature Language="C#" Value="public static void LoadMatrix (ref MonoMac.OpenGL.Matrix4d mat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadMatrix(valuetype MonoMac.OpenGL.Matrix4d mat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mat" Type="MonoMac.OpenGL.Matrix4d&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="mat">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMatrix">
      <MemberSignature Language="C#" Value="public static void LoadMatrix (ref double m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadMatrix(float64 m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Specifies a pointer to 16 consecutive values, which are used as the elements of a 4 times 4 column-major matrix.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Replace the current matrix with the specified matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMatrix">
      <MemberSignature Language="C#" Value="public static void LoadMatrix (double* m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadMatrix(float64* m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Specifies a pointer to 16 consecutive values, which are used as the elements of a 4 times 4 column-major matrix.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Replace the current matrix with the specified matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMatrix">
      <MemberSignature Language="C#" Value="public static void LoadMatrix (double[] m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadMatrix(float64[] m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Specifies a pointer to 16 consecutive values, which are used as the elements of a 4 times 4 column-major matrix.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Replace the current matrix with the specified matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMatrix">
      <MemberSignature Language="C#" Value="public static void LoadMatrix (ref float m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadMatrix(float32 m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Specifies a pointer to 16 consecutive values, which are used as the elements of a 4 times 4 column-major matrix.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Replace the current matrix with the specified matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMatrix">
      <MemberSignature Language="C#" Value="public static void LoadMatrix (float* m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadMatrix(float32* m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Specifies a pointer to 16 consecutive values, which are used as the elements of a 4 times 4 column-major matrix.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Replace the current matrix with the specified matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMatrix">
      <MemberSignature Language="C#" Value="public static void LoadMatrix (float[] m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadMatrix(float32[] m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Specifies a pointer to 16 consecutive values, which are used as the elements of a 4 times 4 column-major matrix.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Replace the current matrix with the specified matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadName">
      <MemberSignature Language="C#" Value="public static void LoadName (int name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadName(int32 name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <para>
            Specifies a name that will replace the top value on the name stack.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Load a name onto the name stack
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadName">
      <MemberSignature Language="C#" Value="public static void LoadName (uint name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadName(unsigned int32 name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="name">
          <para>
            Specifies a name that will replace the top value on the name stack.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Load a name onto the name stack
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTransposeMatrix">
      <MemberSignature Language="C#" Value="public static void LoadTransposeMatrix (ref MonoMac.OpenGL.Matrix4 mat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadTransposeMatrix(valuetype MonoMac.OpenGL.Matrix4 mat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mat" Type="MonoMac.OpenGL.Matrix4&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="mat">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTransposeMatrix">
      <MemberSignature Language="C#" Value="public static void LoadTransposeMatrix (ref MonoMac.OpenGL.Matrix4d mat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadTransposeMatrix(valuetype MonoMac.OpenGL.Matrix4d mat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mat" Type="MonoMac.OpenGL.Matrix4d&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="mat">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTransposeMatrix">
      <MemberSignature Language="C#" Value="public static void LoadTransposeMatrix (ref double m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadTransposeMatrix(float64 m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Specifies a pointer to 16 consecutive values, which are used as the elements of a 4 times 4 row-major matrix.
            </para>
        </param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Replace the current matrix with the specified row-major ordered matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTransposeMatrix">
      <MemberSignature Language="C#" Value="public static void LoadTransposeMatrix (double* m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadTransposeMatrix(float64* m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Specifies a pointer to 16 consecutive values, which are used as the elements of a 4 times 4 row-major matrix.
            </para>
        </param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Replace the current matrix with the specified row-major ordered matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTransposeMatrix">
      <MemberSignature Language="C#" Value="public static void LoadTransposeMatrix (double[] m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadTransposeMatrix(float64[] m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Specifies a pointer to 16 consecutive values, which are used as the elements of a 4 times 4 row-major matrix.
            </para>
        </param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Replace the current matrix with the specified row-major ordered matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTransposeMatrix">
      <MemberSignature Language="C#" Value="public static void LoadTransposeMatrix (ref float m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadTransposeMatrix(float32 m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Specifies a pointer to 16 consecutive values, which are used as the elements of a 4 times 4 row-major matrix.
            </para>
        </param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Replace the current matrix with the specified row-major ordered matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTransposeMatrix">
      <MemberSignature Language="C#" Value="public static void LoadTransposeMatrix (float* m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadTransposeMatrix(float32* m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Specifies a pointer to 16 consecutive values, which are used as the elements of a 4 times 4 row-major matrix.
            </para>
        </param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Replace the current matrix with the specified row-major ordered matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTransposeMatrix">
      <MemberSignature Language="C#" Value="public static void LoadTransposeMatrix (float[] m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadTransposeMatrix(float32[] m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Specifies a pointer to 16 consecutive values, which are used as the elements of a 4 times 4 row-major matrix.
            </para>
        </param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Replace the current matrix with the specified row-major ordered matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicOp">
      <MemberSignature Language="C#" Value="public static void LogicOp (MonoMac.OpenGL.LogicOp opcode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogicOp(valuetype MonoMac.OpenGL.LogicOp opcode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opcode" Type="MonoMac.OpenGL.LogicOp" />
      </Parameters>
      <Docs>
        <param name="opcode">
          <para>
            Specifies a symbolic constant that selects a logical operation. The following symbols are accepted: GL_CLEAR, GL_SET, GL_COPY, GL_COPY_INVERTED, GL_NOOP, GL_INVERT, GL_AND, GL_NAND, GL_OR, GL_NOR, GL_XOR, GL_EQUIV, GL_AND_REVERSE, GL_AND_INVERTED, GL_OR_REVERSE, and GL_OR_INVERTED. The initial value is GL_COPY.
            </para>
        </param>
        <summary>[requires: v1.0]
            Specify a logical pixel operation for rendering
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Map1">
      <MemberSignature Language="C#" Value="public static void Map1 (MonoMac.OpenGL.MapTarget target, double u1, double u2, int stride, int order, ref double points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Map1(valuetype MonoMac.OpenGL.MapTarget target, float64 u1, float64 u2, int32 stride, int32 order, float64 points) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="u1" Type="System.Double" />
        <Parameter Name="u2" Type="System.Double" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="order" Type="System.Int32" />
        <Parameter Name="points" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the kind of values that are generated by the evaluator. Symbolic constants GL_MAP1_VERTEX_3, GL_MAP1_VERTEX_4, GL_MAP1_INDEX, GL_MAP1_COLOR_4, GL_MAP1_NORMAL, GL_MAP1_TEXTURE_COORD_1, GL_MAP1_TEXTURE_COORD_2, GL_MAP1_TEXTURE_COORD_3, and GL_MAP1_TEXTURE_COORD_4 are accepted.
            </para>
        </param>
        <param name="u1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord1, to u hat, the variable that is evaluated by the equations specified by this command.
            </para>
        </param>
        <param name="u2">To be added.</param>
        <param name="stride">
          <para>
            Specifies the number of floats or doubles between the beginning of one control point and the beginning of the next one in the data structure referenced in points. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations.
            </para>
        </param>
        <param name="order">
          <para>
            Specifies the number of control points. Must be positive.
            </para>
        </param>
        <param name="points">
          <para>
            Specifies a pointer to the array of control points.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Define a one-dimensional evaluator
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Map1">
      <MemberSignature Language="C#" Value="public static void Map1 (MonoMac.OpenGL.MapTarget target, double u1, double u2, int stride, int order, double* points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Map1(valuetype MonoMac.OpenGL.MapTarget target, float64 u1, float64 u2, int32 stride, int32 order, float64* points) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="u1" Type="System.Double" />
        <Parameter Name="u2" Type="System.Double" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="order" Type="System.Int32" />
        <Parameter Name="points" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the kind of values that are generated by the evaluator. Symbolic constants GL_MAP1_VERTEX_3, GL_MAP1_VERTEX_4, GL_MAP1_INDEX, GL_MAP1_COLOR_4, GL_MAP1_NORMAL, GL_MAP1_TEXTURE_COORD_1, GL_MAP1_TEXTURE_COORD_2, GL_MAP1_TEXTURE_COORD_3, and GL_MAP1_TEXTURE_COORD_4 are accepted.
            </para>
        </param>
        <param name="u1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord1, to u hat, the variable that is evaluated by the equations specified by this command.
            </para>
        </param>
        <param name="u2">To be added.</param>
        <param name="stride">
          <para>
            Specifies the number of floats or doubles between the beginning of one control point and the beginning of the next one in the data structure referenced in points. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations.
            </para>
        </param>
        <param name="order">
          <para>
            Specifies the number of control points. Must be positive.
            </para>
        </param>
        <param name="points">
          <para>
            Specifies a pointer to the array of control points.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Define a one-dimensional evaluator
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Map1">
      <MemberSignature Language="C#" Value="public static void Map1 (MonoMac.OpenGL.MapTarget target, double u1, double u2, int stride, int order, double[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Map1(valuetype MonoMac.OpenGL.MapTarget target, float64 u1, float64 u2, int32 stride, int32 order, float64[] points) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="u1" Type="System.Double" />
        <Parameter Name="u2" Type="System.Double" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="order" Type="System.Int32" />
        <Parameter Name="points" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the kind of values that are generated by the evaluator. Symbolic constants GL_MAP1_VERTEX_3, GL_MAP1_VERTEX_4, GL_MAP1_INDEX, GL_MAP1_COLOR_4, GL_MAP1_NORMAL, GL_MAP1_TEXTURE_COORD_1, GL_MAP1_TEXTURE_COORD_2, GL_MAP1_TEXTURE_COORD_3, and GL_MAP1_TEXTURE_COORD_4 are accepted.
            </para>
        </param>
        <param name="u1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord1, to u hat, the variable that is evaluated by the equations specified by this command.
            </para>
        </param>
        <param name="u2">To be added.</param>
        <param name="stride">
          <para>
            Specifies the number of floats or doubles between the beginning of one control point and the beginning of the next one in the data structure referenced in points. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations.
            </para>
        </param>
        <param name="order">
          <para>
            Specifies the number of control points. Must be positive.
            </para>
        </param>
        <param name="points">
          <para>
            Specifies a pointer to the array of control points.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Define a one-dimensional evaluator
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Map1">
      <MemberSignature Language="C#" Value="public static void Map1 (MonoMac.OpenGL.MapTarget target, float u1, float u2, int stride, int order, ref float points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Map1(valuetype MonoMac.OpenGL.MapTarget target, float32 u1, float32 u2, int32 stride, int32 order, float32 points) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="u1" Type="System.Single" />
        <Parameter Name="u2" Type="System.Single" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="order" Type="System.Int32" />
        <Parameter Name="points" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the kind of values that are generated by the evaluator. Symbolic constants GL_MAP1_VERTEX_3, GL_MAP1_VERTEX_4, GL_MAP1_INDEX, GL_MAP1_COLOR_4, GL_MAP1_NORMAL, GL_MAP1_TEXTURE_COORD_1, GL_MAP1_TEXTURE_COORD_2, GL_MAP1_TEXTURE_COORD_3, and GL_MAP1_TEXTURE_COORD_4 are accepted.
            </para>
        </param>
        <param name="u1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord1, to u hat, the variable that is evaluated by the equations specified by this command.
            </para>
        </param>
        <param name="u2">To be added.</param>
        <param name="stride">
          <para>
            Specifies the number of floats or doubles between the beginning of one control point and the beginning of the next one in the data structure referenced in points. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations.
            </para>
        </param>
        <param name="order">
          <para>
            Specifies the number of control points. Must be positive.
            </para>
        </param>
        <param name="points">
          <para>
            Specifies a pointer to the array of control points.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Define a one-dimensional evaluator
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Map1">
      <MemberSignature Language="C#" Value="public static void Map1 (MonoMac.OpenGL.MapTarget target, float u1, float u2, int stride, int order, float* points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Map1(valuetype MonoMac.OpenGL.MapTarget target, float32 u1, float32 u2, int32 stride, int32 order, float32* points) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="u1" Type="System.Single" />
        <Parameter Name="u2" Type="System.Single" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="order" Type="System.Int32" />
        <Parameter Name="points" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the kind of values that are generated by the evaluator. Symbolic constants GL_MAP1_VERTEX_3, GL_MAP1_VERTEX_4, GL_MAP1_INDEX, GL_MAP1_COLOR_4, GL_MAP1_NORMAL, GL_MAP1_TEXTURE_COORD_1, GL_MAP1_TEXTURE_COORD_2, GL_MAP1_TEXTURE_COORD_3, and GL_MAP1_TEXTURE_COORD_4 are accepted.
            </para>
        </param>
        <param name="u1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord1, to u hat, the variable that is evaluated by the equations specified by this command.
            </para>
        </param>
        <param name="u2">To be added.</param>
        <param name="stride">
          <para>
            Specifies the number of floats or doubles between the beginning of one control point and the beginning of the next one in the data structure referenced in points. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations.
            </para>
        </param>
        <param name="order">
          <para>
            Specifies the number of control points. Must be positive.
            </para>
        </param>
        <param name="points">
          <para>
            Specifies a pointer to the array of control points.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Define a one-dimensional evaluator
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Map1">
      <MemberSignature Language="C#" Value="public static void Map1 (MonoMac.OpenGL.MapTarget target, float u1, float u2, int stride, int order, float[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Map1(valuetype MonoMac.OpenGL.MapTarget target, float32 u1, float32 u2, int32 stride, int32 order, float32[] points) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="u1" Type="System.Single" />
        <Parameter Name="u2" Type="System.Single" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="order" Type="System.Int32" />
        <Parameter Name="points" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the kind of values that are generated by the evaluator. Symbolic constants GL_MAP1_VERTEX_3, GL_MAP1_VERTEX_4, GL_MAP1_INDEX, GL_MAP1_COLOR_4, GL_MAP1_NORMAL, GL_MAP1_TEXTURE_COORD_1, GL_MAP1_TEXTURE_COORD_2, GL_MAP1_TEXTURE_COORD_3, and GL_MAP1_TEXTURE_COORD_4 are accepted.
            </para>
        </param>
        <param name="u1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord1, to u hat, the variable that is evaluated by the equations specified by this command.
            </para>
        </param>
        <param name="u2">To be added.</param>
        <param name="stride">
          <para>
            Specifies the number of floats or doubles between the beginning of one control point and the beginning of the next one in the data structure referenced in points. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations.
            </para>
        </param>
        <param name="order">
          <para>
            Specifies the number of control points. Must be positive.
            </para>
        </param>
        <param name="points">
          <para>
            Specifies a pointer to the array of control points.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Define a one-dimensional evaluator
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Map2">
      <MemberSignature Language="C#" Value="public static void Map2 (MonoMac.OpenGL.MapTarget target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, ref double points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Map2(valuetype MonoMac.OpenGL.MapTarget target, float64 u1, float64 u2, int32 ustride, int32 uorder, float64 v1, float64 v2, int32 vstride, int32 vorder, float64 points) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="u1" Type="System.Double" />
        <Parameter Name="u2" Type="System.Double" />
        <Parameter Name="ustride" Type="System.Int32" />
        <Parameter Name="uorder" Type="System.Int32" />
        <Parameter Name="v1" Type="System.Double" />
        <Parameter Name="v2" Type="System.Double" />
        <Parameter Name="vstride" Type="System.Int32" />
        <Parameter Name="vorder" Type="System.Int32" />
        <Parameter Name="points" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the kind of values that are generated by the evaluator. Symbolic constants GL_MAP2_VERTEX_3, GL_MAP2_VERTEX_4, GL_MAP2_INDEX, GL_MAP2_COLOR_4, GL_MAP2_NORMAL, GL_MAP2_TEXTURE_COORD_1, GL_MAP2_TEXTURE_COORD_2, GL_MAP2_TEXTURE_COORD_3, and GL_MAP2_TEXTURE_COORD_4 are accepted.
            </para>
        </param>
        <param name="u1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord2, to u hat, one of the two variables that are evaluated by the equations specified by this command. Initially, u1 is 0 and u2 is 1.
            </para>
        </param>
        <param name="u2">To be added.</param>
        <param name="ustride">
          <para>
            Specifies the number of floats or doubles between the beginning of control point R sub ij and the beginning of control point R sub { (i+1) j }, where and are the and control point indices, respectively. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations. The initial value of ustride is 0.
            </para>
        </param>
        <param name="uorder">
          <para>
            Specifies the dimension of the control point array in the axis. Must be positive. The initial value is 1.
            </para>
        </param>
        <param name="v1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord2, to v hat, one of the two variables that are evaluated by the equations specified by this command. Initially, v1 is 0 and v2 is 1.
            </para>
        </param>
        <param name="v2">To be added.</param>
        <param name="vstride">
          <para>
            Specifies the number of floats or doubles between the beginning of control point R sub ij and the beginning of control point R sub { i (j+1) }, where and are the and control point indices, respectively. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations. The initial value of vstride is 0.
            </para>
        </param>
        <param name="vorder">
          <para>
            Specifies the dimension of the control point array in the axis. Must be positive. The initial value is 1.
            </para>
        </param>
        <param name="points">
          <para>
            Specifies a pointer to the array of control points.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Define a two-dimensional evaluator
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Map2">
      <MemberSignature Language="C#" Value="public static void Map2 (MonoMac.OpenGL.MapTarget target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double* points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Map2(valuetype MonoMac.OpenGL.MapTarget target, float64 u1, float64 u2, int32 ustride, int32 uorder, float64 v1, float64 v2, int32 vstride, int32 vorder, float64* points) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="u1" Type="System.Double" />
        <Parameter Name="u2" Type="System.Double" />
        <Parameter Name="ustride" Type="System.Int32" />
        <Parameter Name="uorder" Type="System.Int32" />
        <Parameter Name="v1" Type="System.Double" />
        <Parameter Name="v2" Type="System.Double" />
        <Parameter Name="vstride" Type="System.Int32" />
        <Parameter Name="vorder" Type="System.Int32" />
        <Parameter Name="points" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the kind of values that are generated by the evaluator. Symbolic constants GL_MAP2_VERTEX_3, GL_MAP2_VERTEX_4, GL_MAP2_INDEX, GL_MAP2_COLOR_4, GL_MAP2_NORMAL, GL_MAP2_TEXTURE_COORD_1, GL_MAP2_TEXTURE_COORD_2, GL_MAP2_TEXTURE_COORD_3, and GL_MAP2_TEXTURE_COORD_4 are accepted.
            </para>
        </param>
        <param name="u1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord2, to u hat, one of the two variables that are evaluated by the equations specified by this command. Initially, u1 is 0 and u2 is 1.
            </para>
        </param>
        <param name="u2">To be added.</param>
        <param name="ustride">
          <para>
            Specifies the number of floats or doubles between the beginning of control point R sub ij and the beginning of control point R sub { (i+1) j }, where and are the and control point indices, respectively. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations. The initial value of ustride is 0.
            </para>
        </param>
        <param name="uorder">
          <para>
            Specifies the dimension of the control point array in the axis. Must be positive. The initial value is 1.
            </para>
        </param>
        <param name="v1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord2, to v hat, one of the two variables that are evaluated by the equations specified by this command. Initially, v1 is 0 and v2 is 1.
            </para>
        </param>
        <param name="v2">To be added.</param>
        <param name="vstride">
          <para>
            Specifies the number of floats or doubles between the beginning of control point R sub ij and the beginning of control point R sub { i (j+1) }, where and are the and control point indices, respectively. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations. The initial value of vstride is 0.
            </para>
        </param>
        <param name="vorder">
          <para>
            Specifies the dimension of the control point array in the axis. Must be positive. The initial value is 1.
            </para>
        </param>
        <param name="points">
          <para>
            Specifies a pointer to the array of control points.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Define a two-dimensional evaluator
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Map2">
      <MemberSignature Language="C#" Value="public static void Map2 (MonoMac.OpenGL.MapTarget target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Map2(valuetype MonoMac.OpenGL.MapTarget target, float64 u1, float64 u2, int32 ustride, int32 uorder, float64 v1, float64 v2, int32 vstride, int32 vorder, float64[] points) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="u1" Type="System.Double" />
        <Parameter Name="u2" Type="System.Double" />
        <Parameter Name="ustride" Type="System.Int32" />
        <Parameter Name="uorder" Type="System.Int32" />
        <Parameter Name="v1" Type="System.Double" />
        <Parameter Name="v2" Type="System.Double" />
        <Parameter Name="vstride" Type="System.Int32" />
        <Parameter Name="vorder" Type="System.Int32" />
        <Parameter Name="points" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the kind of values that are generated by the evaluator. Symbolic constants GL_MAP2_VERTEX_3, GL_MAP2_VERTEX_4, GL_MAP2_INDEX, GL_MAP2_COLOR_4, GL_MAP2_NORMAL, GL_MAP2_TEXTURE_COORD_1, GL_MAP2_TEXTURE_COORD_2, GL_MAP2_TEXTURE_COORD_3, and GL_MAP2_TEXTURE_COORD_4 are accepted.
            </para>
        </param>
        <param name="u1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord2, to u hat, one of the two variables that are evaluated by the equations specified by this command. Initially, u1 is 0 and u2 is 1.
            </para>
        </param>
        <param name="u2">To be added.</param>
        <param name="ustride">
          <para>
            Specifies the number of floats or doubles between the beginning of control point R sub ij and the beginning of control point R sub { (i+1) j }, where and are the and control point indices, respectively. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations. The initial value of ustride is 0.
            </para>
        </param>
        <param name="uorder">
          <para>
            Specifies the dimension of the control point array in the axis. Must be positive. The initial value is 1.
            </para>
        </param>
        <param name="v1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord2, to v hat, one of the two variables that are evaluated by the equations specified by this command. Initially, v1 is 0 and v2 is 1.
            </para>
        </param>
        <param name="v2">To be added.</param>
        <param name="vstride">
          <para>
            Specifies the number of floats or doubles between the beginning of control point R sub ij and the beginning of control point R sub { i (j+1) }, where and are the and control point indices, respectively. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations. The initial value of vstride is 0.
            </para>
        </param>
        <param name="vorder">
          <para>
            Specifies the dimension of the control point array in the axis. Must be positive. The initial value is 1.
            </para>
        </param>
        <param name="points">
          <para>
            Specifies a pointer to the array of control points.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Define a two-dimensional evaluator
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Map2">
      <MemberSignature Language="C#" Value="public static void Map2 (MonoMac.OpenGL.MapTarget target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, ref float points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Map2(valuetype MonoMac.OpenGL.MapTarget target, float32 u1, float32 u2, int32 ustride, int32 uorder, float32 v1, float32 v2, int32 vstride, int32 vorder, float32 points) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="u1" Type="System.Single" />
        <Parameter Name="u2" Type="System.Single" />
        <Parameter Name="ustride" Type="System.Int32" />
        <Parameter Name="uorder" Type="System.Int32" />
        <Parameter Name="v1" Type="System.Single" />
        <Parameter Name="v2" Type="System.Single" />
        <Parameter Name="vstride" Type="System.Int32" />
        <Parameter Name="vorder" Type="System.Int32" />
        <Parameter Name="points" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the kind of values that are generated by the evaluator. Symbolic constants GL_MAP2_VERTEX_3, GL_MAP2_VERTEX_4, GL_MAP2_INDEX, GL_MAP2_COLOR_4, GL_MAP2_NORMAL, GL_MAP2_TEXTURE_COORD_1, GL_MAP2_TEXTURE_COORD_2, GL_MAP2_TEXTURE_COORD_3, and GL_MAP2_TEXTURE_COORD_4 are accepted.
            </para>
        </param>
        <param name="u1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord2, to u hat, one of the two variables that are evaluated by the equations specified by this command. Initially, u1 is 0 and u2 is 1.
            </para>
        </param>
        <param name="u2">To be added.</param>
        <param name="ustride">
          <para>
            Specifies the number of floats or doubles between the beginning of control point R sub ij and the beginning of control point R sub { (i+1) j }, where and are the and control point indices, respectively. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations. The initial value of ustride is 0.
            </para>
        </param>
        <param name="uorder">
          <para>
            Specifies the dimension of the control point array in the axis. Must be positive. The initial value is 1.
            </para>
        </param>
        <param name="v1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord2, to v hat, one of the two variables that are evaluated by the equations specified by this command. Initially, v1 is 0 and v2 is 1.
            </para>
        </param>
        <param name="v2">To be added.</param>
        <param name="vstride">
          <para>
            Specifies the number of floats or doubles between the beginning of control point R sub ij and the beginning of control point R sub { i (j+1) }, where and are the and control point indices, respectively. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations. The initial value of vstride is 0.
            </para>
        </param>
        <param name="vorder">
          <para>
            Specifies the dimension of the control point array in the axis. Must be positive. The initial value is 1.
            </para>
        </param>
        <param name="points">
          <para>
            Specifies a pointer to the array of control points.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Define a two-dimensional evaluator
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Map2">
      <MemberSignature Language="C#" Value="public static void Map2 (MonoMac.OpenGL.MapTarget target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float* points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Map2(valuetype MonoMac.OpenGL.MapTarget target, float32 u1, float32 u2, int32 ustride, int32 uorder, float32 v1, float32 v2, int32 vstride, int32 vorder, float32* points) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="u1" Type="System.Single" />
        <Parameter Name="u2" Type="System.Single" />
        <Parameter Name="ustride" Type="System.Int32" />
        <Parameter Name="uorder" Type="System.Int32" />
        <Parameter Name="v1" Type="System.Single" />
        <Parameter Name="v2" Type="System.Single" />
        <Parameter Name="vstride" Type="System.Int32" />
        <Parameter Name="vorder" Type="System.Int32" />
        <Parameter Name="points" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the kind of values that are generated by the evaluator. Symbolic constants GL_MAP2_VERTEX_3, GL_MAP2_VERTEX_4, GL_MAP2_INDEX, GL_MAP2_COLOR_4, GL_MAP2_NORMAL, GL_MAP2_TEXTURE_COORD_1, GL_MAP2_TEXTURE_COORD_2, GL_MAP2_TEXTURE_COORD_3, and GL_MAP2_TEXTURE_COORD_4 are accepted.
            </para>
        </param>
        <param name="u1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord2, to u hat, one of the two variables that are evaluated by the equations specified by this command. Initially, u1 is 0 and u2 is 1.
            </para>
        </param>
        <param name="u2">To be added.</param>
        <param name="ustride">
          <para>
            Specifies the number of floats or doubles between the beginning of control point R sub ij and the beginning of control point R sub { (i+1) j }, where and are the and control point indices, respectively. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations. The initial value of ustride is 0.
            </para>
        </param>
        <param name="uorder">
          <para>
            Specifies the dimension of the control point array in the axis. Must be positive. The initial value is 1.
            </para>
        </param>
        <param name="v1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord2, to v hat, one of the two variables that are evaluated by the equations specified by this command. Initially, v1 is 0 and v2 is 1.
            </para>
        </param>
        <param name="v2">To be added.</param>
        <param name="vstride">
          <para>
            Specifies the number of floats or doubles between the beginning of control point R sub ij and the beginning of control point R sub { i (j+1) }, where and are the and control point indices, respectively. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations. The initial value of vstride is 0.
            </para>
        </param>
        <param name="vorder">
          <para>
            Specifies the dimension of the control point array in the axis. Must be positive. The initial value is 1.
            </para>
        </param>
        <param name="points">
          <para>
            Specifies a pointer to the array of control points.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Define a two-dimensional evaluator
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Map2">
      <MemberSignature Language="C#" Value="public static void Map2 (MonoMac.OpenGL.MapTarget target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Map2(valuetype MonoMac.OpenGL.MapTarget target, float32 u1, float32 u2, int32 ustride, int32 uorder, float32 v1, float32 v2, int32 vstride, int32 vorder, float32[] points) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MapTarget" />
        <Parameter Name="u1" Type="System.Single" />
        <Parameter Name="u2" Type="System.Single" />
        <Parameter Name="ustride" Type="System.Int32" />
        <Parameter Name="uorder" Type="System.Int32" />
        <Parameter Name="v1" Type="System.Single" />
        <Parameter Name="v2" Type="System.Single" />
        <Parameter Name="vstride" Type="System.Int32" />
        <Parameter Name="vorder" Type="System.Int32" />
        <Parameter Name="points" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the kind of values that are generated by the evaluator. Symbolic constants GL_MAP2_VERTEX_3, GL_MAP2_VERTEX_4, GL_MAP2_INDEX, GL_MAP2_COLOR_4, GL_MAP2_NORMAL, GL_MAP2_TEXTURE_COORD_1, GL_MAP2_TEXTURE_COORD_2, GL_MAP2_TEXTURE_COORD_3, and GL_MAP2_TEXTURE_COORD_4 are accepted.
            </para>
        </param>
        <param name="u1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord2, to u hat, one of the two variables that are evaluated by the equations specified by this command. Initially, u1 is 0 and u2 is 1.
            </para>
        </param>
        <param name="u2">To be added.</param>
        <param name="ustride">
          <para>
            Specifies the number of floats or doubles between the beginning of control point R sub ij and the beginning of control point R sub { (i+1) j }, where and are the and control point indices, respectively. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations. The initial value of ustride is 0.
            </para>
        </param>
        <param name="uorder">
          <para>
            Specifies the dimension of the control point array in the axis. Must be positive. The initial value is 1.
            </para>
        </param>
        <param name="v1">
          <para>
            Specify a linear mapping of , as presented to glEvalCoord2, to v hat, one of the two variables that are evaluated by the equations specified by this command. Initially, v1 is 0 and v2 is 1.
            </para>
        </param>
        <param name="v2">To be added.</param>
        <param name="vstride">
          <para>
            Specifies the number of floats or doubles between the beginning of control point R sub ij and the beginning of control point R sub { i (j+1) }, where and are the and control point indices, respectively. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations. The initial value of vstride is 0.
            </para>
        </param>
        <param name="vorder">
          <para>
            Specifies the dimension of the control point array in the axis. Must be positive. The initial value is 1.
            </para>
        </param>
        <param name="points">
          <para>
            Specifies a pointer to the array of control points.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Define a two-dimensional evaluator
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapBuffer">
      <MemberSignature Language="C#" Value="public static IntPtr MapBuffer (MonoMac.OpenGL.BufferTarget target, MonoMac.OpenGL.BufferAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int MapBuffer(valuetype MonoMac.OpenGL.BufferTarget target, valuetype MonoMac.OpenGL.BufferAccess access) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
        <Parameter Name="access" Type="MonoMac.OpenGL.BufferAccess" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target buffer object being mapped. The symbolic constant must be GL_ARRAY_BUFFER, GL_COPY_READ_BUFFER, GL_COPY_WRITE_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_PIXEL_PACK_BUFFER, GL_PIXEL_UNPACK_BUFFER, GL_TEXTURE_BUFFER, GL_TRANSFORM_FEEDBACK_BUFFER or GL_UNIFORM_BUFFER.
            </para>
        </param>
        <param name="access">
          <para>
            Specifies the access policy, indicating whether it will be possible to read from, write to, or both read from and write to the buffer object's mapped data store. The symbolic constant must be GL_READ_ONLY, GL_WRITE_ONLY, or GL_READ_WRITE.
            </para>
        </param>
        <summary>[requires: v1.5]
            Map a buffer object's data store
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapGrid1">
      <MemberSignature Language="C#" Value="public static void MapGrid1 (int un, double u1, double u2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapGrid1(int32 un, float64 u1, float64 u2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="un" Type="System.Int32" />
        <Parameter Name="u1" Type="System.Double" />
        <Parameter Name="u2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="un">
          <para>
            Specifies the number of partitions in the grid range interval [u1, u2]. Must be positive.
            </para>
        </param>
        <param name="u1">
          <para>
            Specify the mappings for integer grid domain values i = 0 and i = un.
            </para>
        </param>
        <param name="u2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Define a one- or two-dimensional mesh
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapGrid1">
      <MemberSignature Language="C#" Value="public static void MapGrid1 (int un, float u1, float u2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapGrid1(int32 un, float32 u1, float32 u2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="un" Type="System.Int32" />
        <Parameter Name="u1" Type="System.Single" />
        <Parameter Name="u2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="un">
          <para>
            Specifies the number of partitions in the grid range interval [u1, u2]. Must be positive.
            </para>
        </param>
        <param name="u1">
          <para>
            Specify the mappings for integer grid domain values i = 0 and i = un.
            </para>
        </param>
        <param name="u2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Define a one- or two-dimensional mesh
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapGrid2">
      <MemberSignature Language="C#" Value="public static void MapGrid2 (int un, double u1, double u2, int vn, double v1, double v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapGrid2(int32 un, float64 u1, float64 u2, int32 vn, float64 v1, float64 v2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="un" Type="System.Int32" />
        <Parameter Name="u1" Type="System.Double" />
        <Parameter Name="u2" Type="System.Double" />
        <Parameter Name="vn" Type="System.Int32" />
        <Parameter Name="v1" Type="System.Double" />
        <Parameter Name="v2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="un">
          <para>
            Specifies the number of partitions in the grid range interval [u1, u2]. Must be positive.
            </para>
        </param>
        <param name="u1">
          <para>
            Specify the mappings for integer grid domain values i = 0 and i = un.
            </para>
        </param>
        <param name="u2">To be added.</param>
        <param name="vn">
          <para>
            Specifies the number of partitions in the grid range interval [v1, v2] (glMapGrid2 only).
            </para>
        </param>
        <param name="v1">
          <para>
            Specify the mappings for integer grid domain values j = 0 and j = vn (glMapGrid2 only).
            </para>
        </param>
        <param name="v2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Define a one- or two-dimensional mesh
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapGrid2">
      <MemberSignature Language="C#" Value="public static void MapGrid2 (int un, float u1, float u2, int vn, float v1, float v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapGrid2(int32 un, float32 u1, float32 u2, int32 vn, float32 v1, float32 v2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="un" Type="System.Int32" />
        <Parameter Name="u1" Type="System.Single" />
        <Parameter Name="u2" Type="System.Single" />
        <Parameter Name="vn" Type="System.Int32" />
        <Parameter Name="v1" Type="System.Single" />
        <Parameter Name="v2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="un">
          <para>
            Specifies the number of partitions in the grid range interval [u1, u2]. Must be positive.
            </para>
        </param>
        <param name="u1">
          <para>
            Specify the mappings for integer grid domain values i = 0 and i = un.
            </para>
        </param>
        <param name="u2">To be added.</param>
        <param name="vn">
          <para>
            Specifies the number of partitions in the grid range interval [v1, v2] (glMapGrid2 only).
            </para>
        </param>
        <param name="v1">
          <para>
            Specify the mappings for integer grid domain values j = 0 and j = vn (glMapGrid2 only).
            </para>
        </param>
        <param name="v2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Define a one- or two-dimensional mesh
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Material">
      <MemberSignature Language="C#" Value="public static void Material (MonoMac.OpenGL.MaterialFace face, MonoMac.OpenGL.MaterialParameter pname, MonoMac.OpenGL.Color4 params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Material(valuetype MonoMac.OpenGL.MaterialFace face, valuetype MonoMac.OpenGL.MaterialParameter pname, valuetype MonoMac.OpenGL.Color4 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.MaterialFace" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.MaterialParameter" />
        <Parameter Name="params" Type="MonoMac.OpenGL.Color4" />
      </Parameters>
      <Docs>
        <param name="face">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Material">
      <MemberSignature Language="C#" Value="public static void Material (MonoMac.OpenGL.MaterialFace face, MonoMac.OpenGL.MaterialParameter pname, MonoMac.OpenGL.Vector4 params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Material(valuetype MonoMac.OpenGL.MaterialFace face, valuetype MonoMac.OpenGL.MaterialParameter pname, valuetype MonoMac.OpenGL.Vector4 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.MaterialFace" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.MaterialParameter" />
        <Parameter Name="params" Type="MonoMac.OpenGL.Vector4" />
      </Parameters>
      <Docs>
        <param name="face">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="params">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Material">
      <MemberSignature Language="C#" Value="public static void Material (MonoMac.OpenGL.MaterialFace face, MonoMac.OpenGL.MaterialParameter pname, int param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Material(valuetype MonoMac.OpenGL.MaterialFace face, valuetype MonoMac.OpenGL.MaterialParameter pname, int32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.MaterialFace" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.MaterialParameter" />
        <Parameter Name="param" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies which face or faces are being updated. Must be one of GL_FRONT, GL_BACK, or GL_FRONT_AND_BACK.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the single-valued material parameter of the face or faces that is being updated. Must be GL_SHININESS.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies the value that parameter GL_SHININESS will be set to.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify material parameters for the lighting model
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Material">
      <MemberSignature Language="C#" Value="public static void Material (MonoMac.OpenGL.MaterialFace face, MonoMac.OpenGL.MaterialParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Material(valuetype MonoMac.OpenGL.MaterialFace face, valuetype MonoMac.OpenGL.MaterialParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.MaterialFace" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.MaterialParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies which face or faces are being updated. Must be one of GL_FRONT, GL_BACK, or GL_FRONT_AND_BACK.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the single-valued material parameter of the face or faces that is being updated. Must be GL_SHININESS.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify material parameters for the lighting model
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Material">
      <MemberSignature Language="C#" Value="public static void Material (MonoMac.OpenGL.MaterialFace face, MonoMac.OpenGL.MaterialParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Material(valuetype MonoMac.OpenGL.MaterialFace face, valuetype MonoMac.OpenGL.MaterialParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.MaterialFace" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.MaterialParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies which face or faces are being updated. Must be one of GL_FRONT, GL_BACK, or GL_FRONT_AND_BACK.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the single-valued material parameter of the face or faces that is being updated. Must be GL_SHININESS.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify material parameters for the lighting model
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Material">
      <MemberSignature Language="C#" Value="public static void Material (MonoMac.OpenGL.MaterialFace face, MonoMac.OpenGL.MaterialParameter pname, float param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Material(valuetype MonoMac.OpenGL.MaterialFace face, valuetype MonoMac.OpenGL.MaterialParameter pname, float32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.MaterialFace" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.MaterialParameter" />
        <Parameter Name="param" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies which face or faces are being updated. Must be one of GL_FRONT, GL_BACK, or GL_FRONT_AND_BACK.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the single-valued material parameter of the face or faces that is being updated. Must be GL_SHININESS.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies the value that parameter GL_SHININESS will be set to.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify material parameters for the lighting model
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Material">
      <MemberSignature Language="C#" Value="public static void Material (MonoMac.OpenGL.MaterialFace face, MonoMac.OpenGL.MaterialParameter pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Material(valuetype MonoMac.OpenGL.MaterialFace face, valuetype MonoMac.OpenGL.MaterialParameter pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.MaterialFace" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.MaterialParameter" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies which face or faces are being updated. Must be one of GL_FRONT, GL_BACK, or GL_FRONT_AND_BACK.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the single-valued material parameter of the face or faces that is being updated. Must be GL_SHININESS.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify material parameters for the lighting model
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Material">
      <MemberSignature Language="C#" Value="public static void Material (MonoMac.OpenGL.MaterialFace face, MonoMac.OpenGL.MaterialParameter pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Material(valuetype MonoMac.OpenGL.MaterialFace face, valuetype MonoMac.OpenGL.MaterialParameter pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.MaterialFace" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.MaterialParameter" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies which face or faces are being updated. Must be one of GL_FRONT, GL_BACK, or GL_FRONT_AND_BACK.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the single-valued material parameter of the face or faces that is being updated. Must be GL_SHININESS.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify material parameters for the lighting model
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatrixMode">
      <MemberSignature Language="C#" Value="public static void MatrixMode (MonoMac.OpenGL.MatrixMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MatrixMode(valuetype MonoMac.OpenGL.MatrixMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.MatrixMode" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies which matrix stack is the target for subsequent matrix operations. Three values are accepted: GL_MODELVIEW, GL_PROJECTION, and GL_TEXTURE. The initial value is GL_MODELVIEW. Additionally, if the ARB_imaging extension is supported, GL_COLOR is also accepted.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify which matrix is the current matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Minmax">
      <MemberSignature Language="C#" Value="public static void Minmax (MonoMac.OpenGL.MinmaxTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, bool sink);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Minmax(valuetype MonoMac.OpenGL.MinmaxTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, bool sink) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MinmaxTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="sink" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            The minmax table whose parameters are to be set. Must be GL_MINMAX.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The format of entries in the minmax table. Must be one of GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="sink">
          <para>
            If GL_TRUE, pixels will be consumed by the minmax process and no drawing or texture loading will take place. If GL_FALSE, pixels will proceed to the final conversion process after minmax.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define minmax table
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawArrays">
      <MemberSignature Language="C#" Value="public static void MultiDrawArrays (MonoMac.OpenGL.BeginMode mode, ref int first, ref int count, int primcount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawArrays(valuetype MonoMac.OpenGL.BeginMode mode, int32 first, int32 count, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="first" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="count" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="first">
          <para>
            Points to an array of starting indices in the enabled arrays.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the number of indices to be rendered.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the first and count
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawArrays">
      <MemberSignature Language="C#" Value="public static void MultiDrawArrays (MonoMac.OpenGL.BeginMode mode, int* first, int* count, int primcount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawArrays(valuetype MonoMac.OpenGL.BeginMode mode, int32* first, int32* count, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="first" Type="System.Int32*" />
        <Parameter Name="count" Type="System.Int32*" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="first">
          <para>
            Points to an array of starting indices in the enabled arrays.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the number of indices to be rendered.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the first and count
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawArrays">
      <MemberSignature Language="C#" Value="public static void MultiDrawArrays (MonoMac.OpenGL.BeginMode mode, int[] first, int[] count, int primcount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawArrays(valuetype MonoMac.OpenGL.BeginMode mode, int32[] first, int32[] count, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="first" Type="System.Int32[]" />
        <Parameter Name="count" Type="System.Int32[]" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="first">
          <para>
            Points to an array of starting indices in the enabled arrays.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the number of indices to be rendered.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the first and count
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives from array data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawElements">
      <MemberSignature Language="C#" Value="public static void MultiDrawElements (MonoMac.OpenGL.BeginMode mode, ref int count, MonoMac.OpenGL.DrawElementsType type, IntPtr indices, int primcount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawElements(valuetype MonoMac.OpenGL.BeginMode mode, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, native int indices, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="System.IntPtr" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the elements counts.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the count array.
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives by specifying indices of array data elements
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawElements">
      <MemberSignature Language="C#" Value="public static void MultiDrawElements (MonoMac.OpenGL.BeginMode mode, int* count, MonoMac.OpenGL.DrawElementsType type, IntPtr indices, int primcount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawElements(valuetype MonoMac.OpenGL.BeginMode mode, int32* count, valuetype MonoMac.OpenGL.DrawElementsType type, native int indices, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32*" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="System.IntPtr" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the elements counts.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the count array.
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives by specifying indices of array data elements
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawElements">
      <MemberSignature Language="C#" Value="public static void MultiDrawElements (MonoMac.OpenGL.BeginMode mode, int[] count, MonoMac.OpenGL.DrawElementsType type, IntPtr indices, int primcount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawElements(valuetype MonoMac.OpenGL.BeginMode mode, int32[] count, valuetype MonoMac.OpenGL.DrawElementsType type, native int indices, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32[]" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="System.IntPtr" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the elements counts.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the count array.
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives by specifying indices of array data elements
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawElements&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void MultiDrawElements&lt;T3&gt; (MonoMac.OpenGL.BeginMode mode, ref int count, MonoMac.OpenGL.DrawElementsType type, out T3 indices, int primcount) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawElements&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T3 indices, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T3&amp;" RefType="out" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the elements counts.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the count array.
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives by specifying indices of array data elements
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawElements&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void MultiDrawElements&lt;T3&gt; (MonoMac.OpenGL.BeginMode mode, ref int count, MonoMac.OpenGL.DrawElementsType type, T3[,,] indices, int primcount) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawElements&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T3[,,] indices, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T3[,,]" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the elements counts.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the count array.
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives by specifying indices of array data elements
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawElements&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void MultiDrawElements&lt;T3&gt; (MonoMac.OpenGL.BeginMode mode, ref int count, MonoMac.OpenGL.DrawElementsType type, T3[,] indices, int primcount) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawElements&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T3[,] indices, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T3[,]" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the elements counts.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the count array.
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives by specifying indices of array data elements
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawElements&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void MultiDrawElements&lt;T3&gt; (MonoMac.OpenGL.BeginMode mode, ref int count, MonoMac.OpenGL.DrawElementsType type, T3[] indices, int primcount) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawElements&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32 count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T3[] indices, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T3[]" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the elements counts.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the count array.
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives by specifying indices of array data elements
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawElements&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void MultiDrawElements&lt;T3&gt; (MonoMac.OpenGL.BeginMode mode, int* count, MonoMac.OpenGL.DrawElementsType type, out T3 indices, int primcount) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawElements&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32* count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T3 indices, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32*" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T3&amp;" RefType="out" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the elements counts.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the count array.
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives by specifying indices of array data elements
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawElements&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void MultiDrawElements&lt;T3&gt; (MonoMac.OpenGL.BeginMode mode, int* count, MonoMac.OpenGL.DrawElementsType type, T3[,,] indices, int primcount) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawElements&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32* count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T3[,,] indices, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32*" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T3[,,]" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the elements counts.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the count array.
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives by specifying indices of array data elements
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawElements&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void MultiDrawElements&lt;T3&gt; (MonoMac.OpenGL.BeginMode mode, int* count, MonoMac.OpenGL.DrawElementsType type, T3[,] indices, int primcount) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawElements&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32* count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T3[,] indices, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32*" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T3[,]" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the elements counts.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the count array.
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives by specifying indices of array data elements
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawElements&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void MultiDrawElements&lt;T3&gt; (MonoMac.OpenGL.BeginMode mode, int* count, MonoMac.OpenGL.DrawElementsType type, T3[] indices, int primcount) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawElements&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32* count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T3[] indices, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32*" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T3[]" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the elements counts.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the count array.
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives by specifying indices of array data elements
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawElements&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void MultiDrawElements&lt;T3&gt; (MonoMac.OpenGL.BeginMode mode, int[] count, MonoMac.OpenGL.DrawElementsType type, out T3 indices, int primcount) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawElements&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32[] count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T3 indices, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32[]" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T3&amp;" RefType="out" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the elements counts.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the count array.
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives by specifying indices of array data elements
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawElements&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void MultiDrawElements&lt;T3&gt; (MonoMac.OpenGL.BeginMode mode, int[] count, MonoMac.OpenGL.DrawElementsType type, T3[,,] indices, int primcount) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawElements&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32[] count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T3[,,] indices, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32[]" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T3[,,]" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the elements counts.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the count array.
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives by specifying indices of array data elements
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawElements&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void MultiDrawElements&lt;T3&gt; (MonoMac.OpenGL.BeginMode mode, int[] count, MonoMac.OpenGL.DrawElementsType type, T3[,] indices, int primcount) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawElements&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32[] count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T3[,] indices, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32[]" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T3[,]" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the elements counts.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the count array.
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives by specifying indices of array data elements
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiDrawElements&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void MultiDrawElements&lt;T3&gt; (MonoMac.OpenGL.BeginMode mode, int[] count, MonoMac.OpenGL.DrawElementsType type, T3[] indices, int primcount) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiDrawElements&lt;struct .ctor (class System.ValueType) T3&gt;(valuetype MonoMac.OpenGL.BeginMode mode, int32[] count, valuetype MonoMac.OpenGL.DrawElementsType type, !!T3[] indices, int32 primcount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.BeginMode" />
        <Parameter Name="count" Type="System.Int32[]" />
        <Parameter Name="type" Type="MonoMac.OpenGL.DrawElementsType" />
        <Parameter Name="indices" Type="T3[]" />
        <Parameter Name="primcount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="mode">
          <para>
            Specifies what kind of primitives to render. Symbolic constants GL_POINTS, GL_LINE_STRIP, GL_LINE_LOOP, GL_LINES, GL_LINE_STRIP_ADJACENCY, GL_LINES_ADJACENCY, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_TRIANGLES, GL_TRIANGLE_STRIP_ADJACENCY, GL_TRIANGLES_ADJACENCY and GL_PATCHES are accepted.
            </para>
        </param>
        <param name="count">
          <para>
            Points to an array of the elements counts.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the type of the values in indices. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT.
            </para>
        </param>
        <param name="indices">
          <para>
            Specifies a pointer to the location where the indices are stored.
            </para>
        </param>
        <param name="primcount">
          <para>
            Specifies the size of the count array.
            </para>
        </param>
        <summary>[requires: v1.4]
            Render multiple sets of primitives by specifying indices of array data elements
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord1">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord1 (MonoMac.OpenGL.TextureUnit target, double s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord1(valuetype MonoMac.OpenGL.TextureUnit target, float64 s) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="s" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord1">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord1 (MonoMac.OpenGL.TextureUnit target, double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord1(valuetype MonoMac.OpenGL.TextureUnit target, float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord1">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord1 (MonoMac.OpenGL.TextureUnit target, short s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord1(valuetype MonoMac.OpenGL.TextureUnit target, int16 s) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="s" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord1">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord1 (MonoMac.OpenGL.TextureUnit target, short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord1(valuetype MonoMac.OpenGL.TextureUnit target, int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord1">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord1 (MonoMac.OpenGL.TextureUnit target, int s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord1(valuetype MonoMac.OpenGL.TextureUnit target, int32 s) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="s" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord1">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord1 (MonoMac.OpenGL.TextureUnit target, int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord1(valuetype MonoMac.OpenGL.TextureUnit target, int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord1">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord1 (MonoMac.OpenGL.TextureUnit target, float s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord1(valuetype MonoMac.OpenGL.TextureUnit target, float32 s) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="s" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord1">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord1 (MonoMac.OpenGL.TextureUnit target, float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord1(valuetype MonoMac.OpenGL.TextureUnit target, float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, ref MonoMac.OpenGL.Vector2 v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, valuetype MonoMac.OpenGL.Vector2 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, ref MonoMac.OpenGL.Vector2d v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, valuetype MonoMac.OpenGL.Vector2d v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, double s, double t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, float64 s, float64 t) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="s" Type="System.Double" />
        <Parameter Name="t" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, short s, short t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, int16 s, int16 t) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="s" Type="System.Int16" />
        <Parameter Name="t" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, int s, int t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, int32 s, int32 t) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="s" Type="System.Int32" />
        <Parameter Name="t" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord2">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord2 (MonoMac.OpenGL.TextureUnit target, float s, float t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord2(valuetype MonoMac.OpenGL.TextureUnit target, float32 s, float32 t) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="s" Type="System.Single" />
        <Parameter Name="t" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, ref MonoMac.OpenGL.Vector3 v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, valuetype MonoMac.OpenGL.Vector3 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector3&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, ref MonoMac.OpenGL.Vector3d v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, valuetype MonoMac.OpenGL.Vector3d v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector3d&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, double s, double t, double r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, float64 s, float64 t, float64 r) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="s" Type="System.Double" />
        <Parameter Name="t" Type="System.Double" />
        <Parameter Name="r" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <param name="r">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, short s, short t, short r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, int16 s, int16 t, int16 r) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="s" Type="System.Int16" />
        <Parameter Name="t" Type="System.Int16" />
        <Parameter Name="r" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <param name="r">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, int s, int t, int r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, int32 s, int32 t, int32 r) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="s" Type="System.Int32" />
        <Parameter Name="t" Type="System.Int32" />
        <Parameter Name="r" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <param name="r">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord3">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord3 (MonoMac.OpenGL.TextureUnit target, float s, float t, float r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord3(valuetype MonoMac.OpenGL.TextureUnit target, float32 s, float32 t, float32 r) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="s" Type="System.Single" />
        <Parameter Name="t" Type="System.Single" />
        <Parameter Name="r" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <param name="r">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, ref MonoMac.OpenGL.Vector4 v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, valuetype MonoMac.OpenGL.Vector4 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector4&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, ref MonoMac.OpenGL.Vector4d v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, valuetype MonoMac.OpenGL.Vector4d v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector4d&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, double s, double t, double r, double q);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, float64 s, float64 t, float64 r, float64 q) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="s" Type="System.Double" />
        <Parameter Name="t" Type="System.Double" />
        <Parameter Name="r" Type="System.Double" />
        <Parameter Name="q" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <param name="r">To be added.</param>
        <param name="q">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, short s, short t, short r, short q);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, int16 s, int16 t, int16 r, int16 q) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="s" Type="System.Int16" />
        <Parameter Name="t" Type="System.Int16" />
        <Parameter Name="r" Type="System.Int16" />
        <Parameter Name="q" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <param name="r">To be added.</param>
        <param name="q">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, int s, int t, int r, int q);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, int32 s, int32 t, int32 r, int32 q) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="s" Type="System.Int32" />
        <Parameter Name="t" Type="System.Int32" />
        <Parameter Name="r" Type="System.Int32" />
        <Parameter Name="q" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <param name="r">To be added.</param>
        <param name="q">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiTexCoord4">
      <MemberSignature Language="C#" Value="public static void MultiTexCoord4 (MonoMac.OpenGL.TextureUnit target, float s, float t, float r, float q);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiTexCoord4(valuetype MonoMac.OpenGL.TextureUnit target, float32 s, float32 t, float32 r, float32 q) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureUnit" />
        <Parameter Name="s" Type="System.Single" />
        <Parameter Name="t" Type="System.Single" />
        <Parameter Name="r" Type="System.Single" />
        <Parameter Name="q" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the texture unit whose coordinates should be modified. The number of texture units is implementation dependent, but must be at least two. Symbolic constant must be one of GL_TEXTURE, where i ranges from 0 to GL_MAX_TEXTURE_COORDS - 1, which is an implementation-dependent value.
            </para>
        </param>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates for target texture unit. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <param name="r">To be added.</param>
        <param name="q">To be added.</param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultMatrix">
      <MemberSignature Language="C#" Value="public static void MultMatrix (ref MonoMac.OpenGL.Matrix4 mat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultMatrix(valuetype MonoMac.OpenGL.Matrix4 mat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mat" Type="MonoMac.OpenGL.Matrix4&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="mat">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultMatrix">
      <MemberSignature Language="C#" Value="public static void MultMatrix (ref MonoMac.OpenGL.Matrix4d mat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultMatrix(valuetype MonoMac.OpenGL.Matrix4d mat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mat" Type="MonoMac.OpenGL.Matrix4d&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="mat">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultMatrix">
      <MemberSignature Language="C#" Value="public static void MultMatrix (ref double m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultMatrix(float64 m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Points to 16 consecutive values that are used as the elements of a 4 times 4 column-major matrix.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Multiply the current matrix with the specified matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultMatrix">
      <MemberSignature Language="C#" Value="public static void MultMatrix (double* m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultMatrix(float64* m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Points to 16 consecutive values that are used as the elements of a 4 times 4 column-major matrix.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Multiply the current matrix with the specified matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultMatrix">
      <MemberSignature Language="C#" Value="public static void MultMatrix (double[] m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultMatrix(float64[] m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Points to 16 consecutive values that are used as the elements of a 4 times 4 column-major matrix.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Multiply the current matrix with the specified matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultMatrix">
      <MemberSignature Language="C#" Value="public static void MultMatrix (ref float m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultMatrix(float32 m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Points to 16 consecutive values that are used as the elements of a 4 times 4 column-major matrix.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Multiply the current matrix with the specified matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultMatrix">
      <MemberSignature Language="C#" Value="public static void MultMatrix (float* m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultMatrix(float32* m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Points to 16 consecutive values that are used as the elements of a 4 times 4 column-major matrix.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Multiply the current matrix with the specified matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultMatrix">
      <MemberSignature Language="C#" Value="public static void MultMatrix (float[] m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultMatrix(float32[] m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Points to 16 consecutive values that are used as the elements of a 4 times 4 column-major matrix.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Multiply the current matrix with the specified matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultTransposeMatrix">
      <MemberSignature Language="C#" Value="public static void MultTransposeMatrix (ref MonoMac.OpenGL.Matrix4 mat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultTransposeMatrix(valuetype MonoMac.OpenGL.Matrix4 mat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mat" Type="MonoMac.OpenGL.Matrix4&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="mat">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultTransposeMatrix">
      <MemberSignature Language="C#" Value="public static void MultTransposeMatrix (ref MonoMac.OpenGL.Matrix4d mat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultTransposeMatrix(valuetype MonoMac.OpenGL.Matrix4d mat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mat" Type="MonoMac.OpenGL.Matrix4d&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="mat">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultTransposeMatrix">
      <MemberSignature Language="C#" Value="public static void MultTransposeMatrix (ref double m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultTransposeMatrix(float64 m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Points to 16 consecutive values that are used as the elements of a 4 times 4 row-major matrix.
            </para>
        </param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Multiply the current matrix with the specified row-major ordered matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultTransposeMatrix">
      <MemberSignature Language="C#" Value="public static void MultTransposeMatrix (double* m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultTransposeMatrix(float64* m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Points to 16 consecutive values that are used as the elements of a 4 times 4 row-major matrix.
            </para>
        </param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Multiply the current matrix with the specified row-major ordered matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultTransposeMatrix">
      <MemberSignature Language="C#" Value="public static void MultTransposeMatrix (double[] m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultTransposeMatrix(float64[] m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Points to 16 consecutive values that are used as the elements of a 4 times 4 row-major matrix.
            </para>
        </param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Multiply the current matrix with the specified row-major ordered matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultTransposeMatrix">
      <MemberSignature Language="C#" Value="public static void MultTransposeMatrix (ref float m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultTransposeMatrix(float32 m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Points to 16 consecutive values that are used as the elements of a 4 times 4 row-major matrix.
            </para>
        </param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Multiply the current matrix with the specified row-major ordered matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultTransposeMatrix">
      <MemberSignature Language="C#" Value="public static void MultTransposeMatrix (float* m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultTransposeMatrix(float32* m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Points to 16 consecutive values that are used as the elements of a 4 times 4 row-major matrix.
            </para>
        </param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Multiply the current matrix with the specified row-major ordered matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultTransposeMatrix">
      <MemberSignature Language="C#" Value="public static void MultTransposeMatrix (float[] m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultTransposeMatrix(float32[] m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="m">
          <para>
            Points to 16 consecutive values that are used as the elements of a 4 times 4 row-major matrix.
            </para>
        </param>
        <summary>[requires: v1.3][deprecated: v3.1]
            Multiply the current matrix with the specified row-major ordered matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewList">
      <MemberSignature Language="C#" Value="public static void NewList (int list, MonoMac.OpenGL.ListMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NewList(int32 list, valuetype MonoMac.OpenGL.ListMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Int32" />
        <Parameter Name="mode" Type="MonoMac.OpenGL.ListMode" />
      </Parameters>
      <Docs>
        <param name="list">
          <para>
            Specifies the display-list name.
            </para>
        </param>
        <param name="mode">
          <para>
            Specifies the compilation mode, which can be GL_COMPILE or GL_COMPILE_AND_EXECUTE.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Create or replace a display list
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewList">
      <MemberSignature Language="C#" Value="public static void NewList (uint list, MonoMac.OpenGL.ListMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NewList(unsigned int32 list, valuetype MonoMac.OpenGL.ListMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.UInt32" />
        <Parameter Name="mode" Type="MonoMac.OpenGL.ListMode" />
      </Parameters>
      <Docs>
        <param name="list">
          <para>
            Specifies the display-list name.
            </para>
        </param>
        <param name="mode">
          <para>
            Specifies the compilation mode, which can be GL_COMPILE or GL_COMPILE_AND_EXECUTE.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Create or replace a display list
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (MonoMac.OpenGL.Vector3 normal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(valuetype MonoMac.OpenGL.Vector3 normal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normal" Type="MonoMac.OpenGL.Vector3" />
      </Parameters>
      <Docs>
        <param name="normal">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (MonoMac.OpenGL.Vector3d normal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(valuetype MonoMac.OpenGL.Vector3d normal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normal" Type="MonoMac.OpenGL.Vector3d" />
      </Parameters>
      <Docs>
        <param name="normal">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (ref byte v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(unsigned int8 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Byte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (byte* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(unsigned int8* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (byte[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(unsigned int8[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (ref sbyte v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(int8 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.SByte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (sbyte* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(int8* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (sbyte[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(int8[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.SByte[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (byte nx, byte ny, byte nz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(unsigned int8 nx, unsigned int8 ny, unsigned int8 nz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nx" Type="System.Byte" />
        <Parameter Name="ny" Type="System.Byte" />
        <Parameter Name="nz" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="nx">
          <para>
            Specify the , , and coordinates of the new current normal. The initial value of the current normal is the unit vector, (0, 0, 1).
            </para>
          <para>
          </para>
        </param>
        <param name="ny">To be added.</param>
        <param name="nz">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (double nx, double ny, double nz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(float64 nx, float64 ny, float64 nz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nx" Type="System.Double" />
        <Parameter Name="ny" Type="System.Double" />
        <Parameter Name="nz" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="nx">
          <para>
            Specify the , , and coordinates of the new current normal. The initial value of the current normal is the unit vector, (0, 0, 1).
            </para>
          <para>
          </para>
        </param>
        <param name="ny">To be added.</param>
        <param name="nz">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (short nx, short ny, short nz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(int16 nx, int16 ny, int16 nz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nx" Type="System.Int16" />
        <Parameter Name="ny" Type="System.Int16" />
        <Parameter Name="nz" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="nx">
          <para>
            Specify the , , and coordinates of the new current normal. The initial value of the current normal is the unit vector, (0, 0, 1).
            </para>
          <para>
          </para>
        </param>
        <param name="ny">To be added.</param>
        <param name="nz">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (int nx, int ny, int nz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(int32 nx, int32 ny, int32 nz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nx" Type="System.Int32" />
        <Parameter Name="ny" Type="System.Int32" />
        <Parameter Name="nz" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="nx">
          <para>
            Specify the , , and coordinates of the new current normal. The initial value of the current normal is the unit vector, (0, 0, 1).
            </para>
          <para>
          </para>
        </param>
        <param name="ny">To be added.</param>
        <param name="nz">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (sbyte nx, sbyte ny, sbyte nz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(int8 nx, int8 ny, int8 nz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nx" Type="System.SByte" />
        <Parameter Name="ny" Type="System.SByte" />
        <Parameter Name="nz" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="nx">
          <para>
            Specify the , , and coordinates of the new current normal. The initial value of the current normal is the unit vector, (0, 0, 1).
            </para>
          <para>
          </para>
        </param>
        <param name="ny">To be added.</param>
        <param name="nz">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normal3">
      <MemberSignature Language="C#" Value="public static void Normal3 (float nx, float ny, float nz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normal3(float32 nx, float32 ny, float32 nz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nx" Type="System.Single" />
        <Parameter Name="ny" Type="System.Single" />
        <Parameter Name="nz" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="nx">
          <para>
            Specify the , , and coordinates of the new current normal. The initial value of the current normal is the unit vector, (0, 0, 1).
            </para>
          <para>
          </para>
        </param>
        <param name="ny">To be added.</param>
        <param name="nz">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current normal vector
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalPointer">
      <MemberSignature Language="C#" Value="public static void NormalPointer (MonoMac.OpenGL.NormalPointerType type, int stride, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NormalPointer(valuetype MonoMac.OpenGL.NormalPointerType type, int32 stride, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.NormalPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="stride">To be added.</param>
        <param name="offset">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalPointer">
      <MemberSignature Language="C#" Value="public static void NormalPointer (MonoMac.OpenGL.NormalPointerType type, int stride, IntPtr pointer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NormalPointer(valuetype MonoMac.OpenGL.NormalPointerType type, int32 stride, native int pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.NormalPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="type">
          <para>
            Specifies the data type of each coordinate in the array. Symbolic constants GL_BYTE, GL_SHORT, GL_INT, GL_FLOAT, and GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive normals. If stride is 0, the normals are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first normal in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of normals
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void NormalPointer&lt;T2&gt; (MonoMac.OpenGL.NormalPointerType type, int stride, out T2 pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NormalPointer&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.NormalPointerType type, int32 stride, !!T2 pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.NormalPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T2&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="type">
          <para>
            Specifies the data type of each coordinate in the array. Symbolic constants GL_BYTE, GL_SHORT, GL_INT, GL_FLOAT, and GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive normals. If stride is 0, the normals are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first normal in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of normals
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void NormalPointer&lt;T2&gt; (MonoMac.OpenGL.NormalPointerType type, int stride, T2[,,] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NormalPointer&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.NormalPointerType type, int32 stride, !!T2[,,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.NormalPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T2[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="type">
          <para>
            Specifies the data type of each coordinate in the array. Symbolic constants GL_BYTE, GL_SHORT, GL_INT, GL_FLOAT, and GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive normals. If stride is 0, the normals are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first normal in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of normals
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void NormalPointer&lt;T2&gt; (MonoMac.OpenGL.NormalPointerType type, int stride, T2[,] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NormalPointer&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.NormalPointerType type, int32 stride, !!T2[,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.NormalPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T2[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="type">
          <para>
            Specifies the data type of each coordinate in the array. Symbolic constants GL_BYTE, GL_SHORT, GL_INT, GL_FLOAT, and GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive normals. If stride is 0, the normals are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first normal in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of normals
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalPointer&lt;T2&gt;">
      <MemberSignature Language="C#" Value="public static void NormalPointer&lt;T2&gt; (MonoMac.OpenGL.NormalPointerType type, int stride, T2[] pointer) where T2 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NormalPointer&lt;struct .ctor (class System.ValueType) T2&gt;(valuetype MonoMac.OpenGL.NormalPointerType type, int32 stride, !!T2[] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T2">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="type" Type="MonoMac.OpenGL.NormalPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T2[]" />
      </Parameters>
      <Docs>
        <typeparam name="T2">To be added.</typeparam>
        <param name="type">
          <para>
            Specifies the data type of each coordinate in the array. Symbolic constants GL_BYTE, GL_SHORT, GL_INT, GL_FLOAT, and GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive normals. If stride is 0, the normals are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first normal in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of normals
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ortho">
      <MemberSignature Language="C#" Value="public static void Ortho (double left, double right, double bottom, double top, double zNear, double zFar);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Ortho(float64 left, float64 right, float64 bottom, float64 top, float64 zNear, float64 zFar) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="right" Type="System.Double" />
        <Parameter Name="bottom" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="zNear" Type="System.Double" />
        <Parameter Name="zFar" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="left">
          <para>
            Specify the coordinates for the left and right vertical clipping planes.
            </para>
        </param>
        <param name="right">To be added.</param>
        <param name="bottom">
          <para>
            Specify the coordinates for the bottom and top horizontal clipping planes.
            </para>
        </param>
        <param name="top">To be added.</param>
        <param name="zNear">To be added.</param>
        <param name="zFar">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Multiply the current matrix with an orthographic matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PassThrough">
      <MemberSignature Language="C#" Value="public static void PassThrough (float token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PassThrough(float32 token) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="token">
          <para>
            Specifies a marker value to be placed in the feedback buffer following a GL_PASS_THROUGH_TOKEN.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Place a marker in the feedback buffer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelMap">
      <MemberSignature Language="C#" Value="public static void PixelMap (MonoMac.OpenGL.PixelMap map, int mapsize, ref short values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32 mapsize, int16 values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="mapsize" Type="System.Int32" />
        <Parameter Name="values" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies a symbolic map name. Must be one of the following: GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, or GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="mapsize">
          <para>
            Specifies the size of the map being defined.
            </para>
        </param>
        <param name="values">
          <para>
            Specifies an array of mapsize values.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set up pixel transfer maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelMap">
      <MemberSignature Language="C#" Value="public static void PixelMap (MonoMac.OpenGL.PixelMap map, int mapsize, short* values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32 mapsize, int16* values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="mapsize" Type="System.Int32" />
        <Parameter Name="values" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies a symbolic map name. Must be one of the following: GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, or GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="mapsize">
          <para>
            Specifies the size of the map being defined.
            </para>
        </param>
        <param name="values">
          <para>
            Specifies an array of mapsize values.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set up pixel transfer maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelMap">
      <MemberSignature Language="C#" Value="public static void PixelMap (MonoMac.OpenGL.PixelMap map, int mapsize, short[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32 mapsize, int16[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="mapsize" Type="System.Int32" />
        <Parameter Name="values" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies a symbolic map name. Must be one of the following: GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, or GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="mapsize">
          <para>
            Specifies the size of the map being defined.
            </para>
        </param>
        <param name="values">
          <para>
            Specifies an array of mapsize values.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set up pixel transfer maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelMap">
      <MemberSignature Language="C#" Value="public static void PixelMap (MonoMac.OpenGL.PixelMap map, int mapsize, ref int values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32 mapsize, int32 values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="mapsize" Type="System.Int32" />
        <Parameter Name="values" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies a symbolic map name. Must be one of the following: GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, or GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="mapsize">
          <para>
            Specifies the size of the map being defined.
            </para>
        </param>
        <param name="values">
          <para>
            Specifies an array of mapsize values.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set up pixel transfer maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelMap">
      <MemberSignature Language="C#" Value="public static void PixelMap (MonoMac.OpenGL.PixelMap map, int mapsize, int* values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32 mapsize, int32* values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="mapsize" Type="System.Int32" />
        <Parameter Name="values" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies a symbolic map name. Must be one of the following: GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, or GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="mapsize">
          <para>
            Specifies the size of the map being defined.
            </para>
        </param>
        <param name="values">
          <para>
            Specifies an array of mapsize values.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set up pixel transfer maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelMap">
      <MemberSignature Language="C#" Value="public static void PixelMap (MonoMac.OpenGL.PixelMap map, int mapsize, int[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32 mapsize, int32[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="mapsize" Type="System.Int32" />
        <Parameter Name="values" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies a symbolic map name. Must be one of the following: GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, or GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="mapsize">
          <para>
            Specifies the size of the map being defined.
            </para>
        </param>
        <param name="values">
          <para>
            Specifies an array of mapsize values.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set up pixel transfer maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelMap">
      <MemberSignature Language="C#" Value="public static void PixelMap (MonoMac.OpenGL.PixelMap map, int mapsize, ref float values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32 mapsize, float32 values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="mapsize" Type="System.Int32" />
        <Parameter Name="values" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies a symbolic map name. Must be one of the following: GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, or GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="mapsize">
          <para>
            Specifies the size of the map being defined.
            </para>
        </param>
        <param name="values">
          <para>
            Specifies an array of mapsize values.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set up pixel transfer maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelMap">
      <MemberSignature Language="C#" Value="public static void PixelMap (MonoMac.OpenGL.PixelMap map, int mapsize, float* values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32 mapsize, float32* values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="mapsize" Type="System.Int32" />
        <Parameter Name="values" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies a symbolic map name. Must be one of the following: GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, or GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="mapsize">
          <para>
            Specifies the size of the map being defined.
            </para>
        </param>
        <param name="values">
          <para>
            Specifies an array of mapsize values.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set up pixel transfer maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelMap">
      <MemberSignature Language="C#" Value="public static void PixelMap (MonoMac.OpenGL.PixelMap map, int mapsize, float[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32 mapsize, float32[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="mapsize" Type="System.Int32" />
        <Parameter Name="values" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies a symbolic map name. Must be one of the following: GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, or GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="mapsize">
          <para>
            Specifies the size of the map being defined.
            </para>
        </param>
        <param name="values">
          <para>
            Specifies an array of mapsize values.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set up pixel transfer maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelMap">
      <MemberSignature Language="C#" Value="public static void PixelMap (MonoMac.OpenGL.PixelMap map, int mapsize, ref ushort values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32 mapsize, unsigned int16 values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="mapsize" Type="System.Int32" />
        <Parameter Name="values" Type="System.UInt16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies a symbolic map name. Must be one of the following: GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, or GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="mapsize">
          <para>
            Specifies the size of the map being defined.
            </para>
        </param>
        <param name="values">
          <para>
            Specifies an array of mapsize values.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set up pixel transfer maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelMap">
      <MemberSignature Language="C#" Value="public static void PixelMap (MonoMac.OpenGL.PixelMap map, int mapsize, ushort* values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32 mapsize, unsigned int16* values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="mapsize" Type="System.Int32" />
        <Parameter Name="values" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies a symbolic map name. Must be one of the following: GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, or GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="mapsize">
          <para>
            Specifies the size of the map being defined.
            </para>
        </param>
        <param name="values">
          <para>
            Specifies an array of mapsize values.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set up pixel transfer maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelMap">
      <MemberSignature Language="C#" Value="public static void PixelMap (MonoMac.OpenGL.PixelMap map, int mapsize, ushort[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32 mapsize, unsigned int16[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="mapsize" Type="System.Int32" />
        <Parameter Name="values" Type="System.UInt16[]" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies a symbolic map name. Must be one of the following: GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, or GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="mapsize">
          <para>
            Specifies the size of the map being defined.
            </para>
        </param>
        <param name="values">
          <para>
            Specifies an array of mapsize values.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set up pixel transfer maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelMap">
      <MemberSignature Language="C#" Value="public static void PixelMap (MonoMac.OpenGL.PixelMap map, int mapsize, ref uint values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32 mapsize, unsigned int32 values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="mapsize" Type="System.Int32" />
        <Parameter Name="values" Type="System.UInt32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies a symbolic map name. Must be one of the following: GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, or GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="mapsize">
          <para>
            Specifies the size of the map being defined.
            </para>
        </param>
        <param name="values">
          <para>
            Specifies an array of mapsize values.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set up pixel transfer maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelMap">
      <MemberSignature Language="C#" Value="public static void PixelMap (MonoMac.OpenGL.PixelMap map, int mapsize, uint* values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32 mapsize, unsigned int32* values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="mapsize" Type="System.Int32" />
        <Parameter Name="values" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies a symbolic map name. Must be one of the following: GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, or GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="mapsize">
          <para>
            Specifies the size of the map being defined.
            </para>
        </param>
        <param name="values">
          <para>
            Specifies an array of mapsize values.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set up pixel transfer maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelMap">
      <MemberSignature Language="C#" Value="public static void PixelMap (MonoMac.OpenGL.PixelMap map, int mapsize, uint[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelMap(valuetype MonoMac.OpenGL.PixelMap map, int32 mapsize, unsigned int32[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="MonoMac.OpenGL.PixelMap" />
        <Parameter Name="mapsize" Type="System.Int32" />
        <Parameter Name="values" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="map">
          <para>
            Specifies a symbolic map name. Must be one of the following: GL_PIXEL_MAP_I_TO_I, GL_PIXEL_MAP_S_TO_S, GL_PIXEL_MAP_I_TO_R, GL_PIXEL_MAP_I_TO_G, GL_PIXEL_MAP_I_TO_B, GL_PIXEL_MAP_I_TO_A, GL_PIXEL_MAP_R_TO_R, GL_PIXEL_MAP_G_TO_G, GL_PIXEL_MAP_B_TO_B, or GL_PIXEL_MAP_A_TO_A.
            </para>
        </param>
        <param name="mapsize">
          <para>
            Specifies the size of the map being defined.
            </para>
        </param>
        <param name="values">
          <para>
            Specifies an array of mapsize values.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set up pixel transfer maps
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelStore">
      <MemberSignature Language="C#" Value="public static void PixelStore (MonoMac.OpenGL.PixelStoreParameter pname, int param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelStore(valuetype MonoMac.OpenGL.PixelStoreParameter pname, int32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.PixelStoreParameter" />
        <Parameter Name="param" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies the symbolic name of the parameter to be set. Six values affect the packing of pixel data into memory: GL_PACK_SWAP_BYTES, GL_PACK_LSB_FIRST, GL_PACK_ROW_LENGTH, GL_PACK_IMAGE_HEIGHT, GL_PACK_SKIP_PIXELS, GL_PACK_SKIP_ROWS, GL_PACK_SKIP_IMAGES, and GL_PACK_ALIGNMENT. Six more affect the unpacking of pixel data from memory: GL_UNPACK_SWAP_BYTES, GL_UNPACK_LSB_FIRST, GL_UNPACK_ROW_LENGTH, GL_UNPACK_IMAGE_HEIGHT, GL_UNPACK_SKIP_PIXELS, GL_UNPACK_SKIP_ROWS, GL_UNPACK_SKIP_IMAGES, and GL_UNPACK_ALIGNMENT.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies the value that pname is set to.
            </para>
        </param>
        <summary>[requires: v1.0]
            Set pixel storage modes
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelStore">
      <MemberSignature Language="C#" Value="public static void PixelStore (MonoMac.OpenGL.PixelStoreParameter pname, float param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelStore(valuetype MonoMac.OpenGL.PixelStoreParameter pname, float32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.PixelStoreParameter" />
        <Parameter Name="param" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies the symbolic name of the parameter to be set. Six values affect the packing of pixel data into memory: GL_PACK_SWAP_BYTES, GL_PACK_LSB_FIRST, GL_PACK_ROW_LENGTH, GL_PACK_IMAGE_HEIGHT, GL_PACK_SKIP_PIXELS, GL_PACK_SKIP_ROWS, GL_PACK_SKIP_IMAGES, and GL_PACK_ALIGNMENT. Six more affect the unpacking of pixel data from memory: GL_UNPACK_SWAP_BYTES, GL_UNPACK_LSB_FIRST, GL_UNPACK_ROW_LENGTH, GL_UNPACK_IMAGE_HEIGHT, GL_UNPACK_SKIP_PIXELS, GL_UNPACK_SKIP_ROWS, GL_UNPACK_SKIP_IMAGES, and GL_UNPACK_ALIGNMENT.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies the value that pname is set to.
            </para>
        </param>
        <summary>[requires: v1.0]
            Set pixel storage modes
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelTransfer">
      <MemberSignature Language="C#" Value="public static void PixelTransfer (MonoMac.OpenGL.PixelTransferParameter pname, int param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelTransfer(valuetype MonoMac.OpenGL.PixelTransferParameter pname, int32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.PixelTransferParameter" />
        <Parameter Name="param" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies the symbolic name of the pixel transfer parameter to be set. Must be one of the following: GL_MAP_COLOR, GL_MAP_STENCIL, GL_INDEX_SHIFT, GL_INDEX_OFFSET, GL_RED_SCALE, GL_RED_BIAS, GL_GREEN_SCALE, GL_GREEN_BIAS, GL_BLUE_SCALE, GL_BLUE_BIAS, GL_ALPHA_SCALE, GL_ALPHA_BIAS, GL_DEPTH_SCALE, or GL_DEPTH_BIAS.
            </para>
          <para>
            Additionally, if the ARB_imaging extension is supported, the following symbolic names are accepted: GL_POST_COLOR_MATRIX_RED_SCALE, GL_POST_COLOR_MATRIX_GREEN_SCALE, GL_POST_COLOR_MATRIX_BLUE_SCALE, GL_POST_COLOR_MATRIX_ALPHA_SCALE, GL_POST_COLOR_MATRIX_RED_BIAS, GL_POST_COLOR_MATRIX_GREEN_BIAS, GL_POST_COLOR_MATRIX_BLUE_BIAS, GL_POST_COLOR_MATRIX_ALPHA_BIAS, GL_POST_CONVOLUTION_RED_SCALE, GL_POST_CONVOLUTION_GREEN_SCALE, GL_POST_CONVOLUTION_BLUE_SCALE, GL_POST_CONVOLUTION_ALPHA_SCALE, GL_POST_CONVOLUTION_RED_BIAS, GL_POST_CONVOLUTION_GREEN_BIAS, GL_POST_CONVOLUTION_BLUE_BIAS, and GL_POST_CONVOLUTION_ALPHA_BIAS.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies the value that pname is set to.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set pixel transfer modes
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelTransfer">
      <MemberSignature Language="C#" Value="public static void PixelTransfer (MonoMac.OpenGL.PixelTransferParameter pname, float param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelTransfer(valuetype MonoMac.OpenGL.PixelTransferParameter pname, float32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.PixelTransferParameter" />
        <Parameter Name="param" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies the symbolic name of the pixel transfer parameter to be set. Must be one of the following: GL_MAP_COLOR, GL_MAP_STENCIL, GL_INDEX_SHIFT, GL_INDEX_OFFSET, GL_RED_SCALE, GL_RED_BIAS, GL_GREEN_SCALE, GL_GREEN_BIAS, GL_BLUE_SCALE, GL_BLUE_BIAS, GL_ALPHA_SCALE, GL_ALPHA_BIAS, GL_DEPTH_SCALE, or GL_DEPTH_BIAS.
            </para>
          <para>
            Additionally, if the ARB_imaging extension is supported, the following symbolic names are accepted: GL_POST_COLOR_MATRIX_RED_SCALE, GL_POST_COLOR_MATRIX_GREEN_SCALE, GL_POST_COLOR_MATRIX_BLUE_SCALE, GL_POST_COLOR_MATRIX_ALPHA_SCALE, GL_POST_COLOR_MATRIX_RED_BIAS, GL_POST_COLOR_MATRIX_GREEN_BIAS, GL_POST_COLOR_MATRIX_BLUE_BIAS, GL_POST_COLOR_MATRIX_ALPHA_BIAS, GL_POST_CONVOLUTION_RED_SCALE, GL_POST_CONVOLUTION_GREEN_SCALE, GL_POST_CONVOLUTION_BLUE_SCALE, GL_POST_CONVOLUTION_ALPHA_SCALE, GL_POST_CONVOLUTION_RED_BIAS, GL_POST_CONVOLUTION_GREEN_BIAS, GL_POST_CONVOLUTION_BLUE_BIAS, and GL_POST_CONVOLUTION_ALPHA_BIAS.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies the value that pname is set to.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set pixel transfer modes
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelZoom">
      <MemberSignature Language="C#" Value="public static void PixelZoom (float xfactor, float yfactor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PixelZoom(float32 xfactor, float32 yfactor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xfactor" Type="System.Single" />
        <Parameter Name="yfactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="xfactor">
          <para>
            Specify the and zoom factors for pixel write operations.
            </para>
        </param>
        <param name="yfactor">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the pixel zoom factors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointParameter">
      <MemberSignature Language="C#" Value="public static void PointParameter (MonoMac.OpenGL.PointSpriteCoordOriginParameter param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PointParameter(valuetype MonoMac.OpenGL.PointSpriteCoordOriginParameter param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="param" Type="MonoMac.OpenGL.PointSpriteCoordOriginParameter" />
      </Parameters>
      <Docs>
        <param name="param">
            A MonoMac.OpenGL.GL.PointSpriteCoordOriginParameter token,
            denoting the origin of the Point Sprite.
            </param>
        <summary>
            Helper function that defines the coordinate origin of the Point Sprite.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointParameter">
      <MemberSignature Language="C#" Value="public static void PointParameter (MonoMac.OpenGL.PointParameterName pname, int param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PointParameter(valuetype MonoMac.OpenGL.PointParameterName pname, int32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.PointParameterName" />
        <Parameter Name="param" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued point parameter. GL_POINT_FADE_THRESHOLD_SIZE, and GL_POINT_SPRITE_COORD_ORIGIN are accepted.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies the value that pname will be set to.
            </para>
        </param>
        <summary>[requires: v1.4]
            Specify point parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointParameter">
      <MemberSignature Language="C#" Value="public static void PointParameter (MonoMac.OpenGL.PointParameterName pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PointParameter(valuetype MonoMac.OpenGL.PointParameterName pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.PointParameterName" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued point parameter. GL_POINT_FADE_THRESHOLD_SIZE, and GL_POINT_SPRITE_COORD_ORIGIN are accepted.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.4]
            Specify point parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointParameter">
      <MemberSignature Language="C#" Value="public static void PointParameter (MonoMac.OpenGL.PointParameterName pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PointParameter(valuetype MonoMac.OpenGL.PointParameterName pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.PointParameterName" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued point parameter. GL_POINT_FADE_THRESHOLD_SIZE, and GL_POINT_SPRITE_COORD_ORIGIN are accepted.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.4]
            Specify point parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointParameter">
      <MemberSignature Language="C#" Value="public static void PointParameter (MonoMac.OpenGL.PointParameterName pname, float param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PointParameter(valuetype MonoMac.OpenGL.PointParameterName pname, float32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.PointParameterName" />
        <Parameter Name="param" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued point parameter. GL_POINT_FADE_THRESHOLD_SIZE, and GL_POINT_SPRITE_COORD_ORIGIN are accepted.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies the value that pname will be set to.
            </para>
        </param>
        <summary>[requires: v1.4]
            Specify point parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointParameter">
      <MemberSignature Language="C#" Value="public static void PointParameter (MonoMac.OpenGL.PointParameterName pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PointParameter(valuetype MonoMac.OpenGL.PointParameterName pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.PointParameterName" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued point parameter. GL_POINT_FADE_THRESHOLD_SIZE, and GL_POINT_SPRITE_COORD_ORIGIN are accepted.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.4]
            Specify point parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointParameter">
      <MemberSignature Language="C#" Value="public static void PointParameter (MonoMac.OpenGL.PointParameterName pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PointParameter(valuetype MonoMac.OpenGL.PointParameterName pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pname" Type="MonoMac.OpenGL.PointParameterName" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="pname">
          <para>
            Specifies a single-valued point parameter. GL_POINT_FADE_THRESHOLD_SIZE, and GL_POINT_SPRITE_COORD_ORIGIN are accepted.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.4]
            Specify point parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointSize">
      <MemberSignature Language="C#" Value="public static void PointSize (float size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PointSize(float32 size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="size">
          <para>
            Specifies the diameter of rasterized points. The initial value is 1.
            </para>
        </param>
        <summary>[requires: v1.0]
            Specify the diameter of rasterized points
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PolygonMode">
      <MemberSignature Language="C#" Value="public static void PolygonMode (MonoMac.OpenGL.MaterialFace face, MonoMac.OpenGL.PolygonMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PolygonMode(valuetype MonoMac.OpenGL.MaterialFace face, valuetype MonoMac.OpenGL.PolygonMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.MaterialFace" />
        <Parameter Name="mode" Type="MonoMac.OpenGL.PolygonMode" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies the polygons that mode applies to. Must be GL_FRONT_AND_BACK for front- and back-facing polygons.
            </para>
        </param>
        <param name="mode">
          <para>
            Specifies how polygons will be rasterized. Accepted values are GL_POINT, GL_LINE, and GL_FILL. The initial value is GL_FILL for both front- and back-facing polygons.
            </para>
        </param>
        <summary>[requires: v1.0]
            Select a polygon rasterization mode
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PolygonOffset">
      <MemberSignature Language="C#" Value="public static void PolygonOffset (float factor, float units);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PolygonOffset(float32 factor, float32 units) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Single" />
        <Parameter Name="units" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="factor">
          <para>
            Specifies a scale factor that is used to create a variable depth offset for each polygon. The initial value is 0.
            </para>
        </param>
        <param name="units">
          <para>
            Is multiplied by an implementation-specific value to create a constant depth offset. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1]
            Set the scale and units used to calculate depth values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PolygonStipple">
      <MemberSignature Language="C#" Value="public static void PolygonStipple (ref byte mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PolygonStipple(unsigned int8 mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Byte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the polygon stippling pattern
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PolygonStipple">
      <MemberSignature Language="C#" Value="public static void PolygonStipple (byte* mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PolygonStipple(unsigned int8* mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the polygon stippling pattern
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PolygonStipple">
      <MemberSignature Language="C#" Value="public static void PolygonStipple (byte[] mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PolygonStipple(unsigned int8[] mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the polygon stippling pattern
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopAttrib">
      <MemberSignature Language="C#" Value="public static void PopAttrib ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PopAttrib() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[requires: v1.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopClientAttrib">
      <MemberSignature Language="C#" Value="public static void PopClientAttrib ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PopClientAttrib() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[requires: v1.1][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopMatrix">
      <MemberSignature Language="C#" Value="public static void PopMatrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PopMatrix() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[requires: v1.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopName">
      <MemberSignature Language="C#" Value="public static void PopName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PopName() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[requires: v1.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrioritizeTextures">
      <MemberSignature Language="C#" Value="public static void PrioritizeTextures (int n, ref int textures, ref float priorities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrioritizeTextures(int32 n, int32 textures, float32 priorities) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="priorities" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of textures to be prioritized.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array containing the names of the textures to be prioritized.
            </para>
        </param>
        <param name="priorities">
          <para>
            Specifies an array containing the texture priorities. A priority given in an element of priorities applies to the texture named by the corresponding element of textures.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Set texture residence priority
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrioritizeTextures">
      <MemberSignature Language="C#" Value="public static void PrioritizeTextures (int n, int* textures, float* priorities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrioritizeTextures(int32 n, int32* textures, float32* priorities) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.Int32*" />
        <Parameter Name="priorities" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of textures to be prioritized.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array containing the names of the textures to be prioritized.
            </para>
        </param>
        <param name="priorities">
          <para>
            Specifies an array containing the texture priorities. A priority given in an element of priorities applies to the texture named by the corresponding element of textures.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Set texture residence priority
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrioritizeTextures">
      <MemberSignature Language="C#" Value="public static void PrioritizeTextures (int n, int[] textures, float[] priorities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrioritizeTextures(int32 n, int32[] textures, float32[] priorities) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.Int32[]" />
        <Parameter Name="priorities" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of textures to be prioritized.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array containing the names of the textures to be prioritized.
            </para>
        </param>
        <param name="priorities">
          <para>
            Specifies an array containing the texture priorities. A priority given in an element of priorities applies to the texture named by the corresponding element of textures.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Set texture residence priority
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrioritizeTextures">
      <MemberSignature Language="C#" Value="public static void PrioritizeTextures (int n, ref uint textures, ref float priorities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrioritizeTextures(int32 n, unsigned int32 textures, float32 priorities) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.UInt32&amp;" RefType="ref" />
        <Parameter Name="priorities" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of textures to be prioritized.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array containing the names of the textures to be prioritized.
            </para>
        </param>
        <param name="priorities">
          <para>
            Specifies an array containing the texture priorities. A priority given in an element of priorities applies to the texture named by the corresponding element of textures.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Set texture residence priority
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrioritizeTextures">
      <MemberSignature Language="C#" Value="public static void PrioritizeTextures (int n, uint* textures, float* priorities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrioritizeTextures(int32 n, unsigned int32* textures, float32* priorities) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.UInt32*" />
        <Parameter Name="priorities" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of textures to be prioritized.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array containing the names of the textures to be prioritized.
            </para>
        </param>
        <param name="priorities">
          <para>
            Specifies an array containing the texture priorities. A priority given in an element of priorities applies to the texture named by the corresponding element of textures.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Set texture residence priority
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrioritizeTextures">
      <MemberSignature Language="C#" Value="public static void PrioritizeTextures (int n, uint[] textures, float[] priorities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrioritizeTextures(int32 n, unsigned int32[] textures, float32[] priorities) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="textures" Type="System.UInt32[]" />
        <Parameter Name="priorities" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="n">
          <para>
            Specifies the number of textures to be prioritized.
            </para>
        </param>
        <param name="textures">
          <para>
            Specifies an array containing the names of the textures to be prioritized.
            </para>
        </param>
        <param name="priorities">
          <para>
            Specifies an array containing the texture priorities. A priority given in an element of priorities applies to the texture named by the corresponding element of textures.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Set texture residence priority
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgramUniformMatrix2x3">
      <MemberSignature Language="C#" Value="public static void ProgramUniformMatrix2x3 (int program, int location, int count, bool transpose, ref float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProgramUniformMatrix2x3(int32 program, int32 location, int32 count, bool transpose, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="program">To be added.</param>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v4.1 and ARB_separate_shader_objects]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgramUniformMatrix2x3">
      <MemberSignature Language="C#" Value="public static void ProgramUniformMatrix2x3 (int program, int location, int count, bool transpose, float* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProgramUniformMatrix2x3(int32 program, int32 location, int32 count, bool transpose, float32* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="program">To be added.</param>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v4.1 and ARB_separate_shader_objects]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgramUniformMatrix2x3">
      <MemberSignature Language="C#" Value="public static void ProgramUniformMatrix2x3 (int program, int location, int count, bool transpose, float[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProgramUniformMatrix2x3(int32 program, int32 location, int32 count, bool transpose, float32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="program">To be added.</param>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v4.1 and ARB_separate_shader_objects]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgramUniformMatrix2x3">
      <MemberSignature Language="C#" Value="public static void ProgramUniformMatrix2x3 (uint program, int location, int count, bool transpose, ref float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProgramUniformMatrix2x3(unsigned int32 program, int32 location, int32 count, bool transpose, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="program">To be added.</param>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v4.1 and ARB_separate_shader_objects]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgramUniformMatrix2x3">
      <MemberSignature Language="C#" Value="public static void ProgramUniformMatrix2x3 (uint program, int location, int count, bool transpose, float* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProgramUniformMatrix2x3(unsigned int32 program, int32 location, int32 count, bool transpose, float32* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="program">To be added.</param>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v4.1 and ARB_separate_shader_objects]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgramUniformMatrix2x3">
      <MemberSignature Language="C#" Value="public static void ProgramUniformMatrix2x3 (uint program, int location, int count, bool transpose, float[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProgramUniformMatrix2x3(unsigned int32 program, int32 location, int32 count, bool transpose, float32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="program">To be added.</param>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v4.1 and ARB_separate_shader_objects]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PushAttrib">
      <MemberSignature Language="C#" Value="public static void PushAttrib (MonoMac.OpenGL.AttribMask mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushAttrib(valuetype MonoMac.OpenGL.AttribMask mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="MonoMac.OpenGL.AttribMask" />
      </Parameters>
      <Docs>
        <param name="mask">
          <para>
            Specifies a mask that indicates which attributes to save. Values for mask are listed below.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Push and pop the server attribute stack
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PushClientAttrib">
      <MemberSignature Language="C#" Value="public static void PushClientAttrib (MonoMac.OpenGL.ClientAttribMask mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushClientAttrib(valuetype MonoMac.OpenGL.ClientAttribMask mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="MonoMac.OpenGL.ClientAttribMask" />
      </Parameters>
      <Docs>
        <param name="mask">
          <para>
            Specifies a mask that indicates which attributes to save. Values for mask are listed below.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Push and pop the client attribute stack
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PushMatrix">
      <MemberSignature Language="C#" Value="public static void PushMatrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushMatrix() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[requires: v1.0][deprecated: v3.1]
            Push and pop the current matrix stack
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PushName">
      <MemberSignature Language="C#" Value="public static void PushName (int name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushName(int32 name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <para>
            Specifies a name that will be pushed onto the name stack.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Push and pop the name stack
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PushName">
      <MemberSignature Language="C#" Value="public static void PushName (uint name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushName(unsigned int32 name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="name">
          <para>
            Specifies a name that will be pushed onto the name stack.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Push and pop the name stack
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (MonoMac.OpenGL.Vector2 pos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(valuetype MonoMac.OpenGL.Vector2 pos) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (MonoMac.OpenGL.Vector2d pos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(valuetype MonoMac.OpenGL.Vector2d pos) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(float64 x, float64 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , , and object coordinates (if present) for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (short x, short y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(int16 x, int16 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int16" />
        <Parameter Name="y" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , , and object coordinates (if present) for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(int32 x, int32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , , and object coordinates (if present) for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos2">
      <MemberSignature Language="C#" Value="public static void RasterPos2 (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos2(float32 x, float32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , , and object coordinates (if present) for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (MonoMac.OpenGL.Vector3 pos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(valuetype MonoMac.OpenGL.Vector3 pos) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="MonoMac.OpenGL.Vector3" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (MonoMac.OpenGL.Vector3d pos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(valuetype MonoMac.OpenGL.Vector3d pos) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="MonoMac.OpenGL.Vector3d" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (double x, double y, double z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(float64 x, float64 y, float64 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="z" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , , and object coordinates (if present) for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (short x, short y, short z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(int16 x, int16 y, int16 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int16" />
        <Parameter Name="y" Type="System.Int16" />
        <Parameter Name="z" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , , and object coordinates (if present) for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (int x, int y, int z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(int32 x, int32 y, int32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="z" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , , and object coordinates (if present) for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos3">
      <MemberSignature Language="C#" Value="public static void RasterPos3 (float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos3(float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , , and object coordinates (if present) for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (MonoMac.OpenGL.Vector4 pos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(valuetype MonoMac.OpenGL.Vector4 pos) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="MonoMac.OpenGL.Vector4" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (MonoMac.OpenGL.Vector4d pos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(valuetype MonoMac.OpenGL.Vector4d pos) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="MonoMac.OpenGL.Vector4d" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (double x, double y, double z, double w);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(float64 x, float64 y, float64 z, float64 w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="z" Type="System.Double" />
        <Parameter Name="w" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , , and object coordinates (if present) for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <param name="w">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (short x, short y, short z, short w);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(int16 x, int16 y, int16 z, int16 w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int16" />
        <Parameter Name="y" Type="System.Int16" />
        <Parameter Name="z" Type="System.Int16" />
        <Parameter Name="w" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , , and object coordinates (if present) for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <param name="w">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (int x, int y, int z, int w);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(int32 x, int32 y, int32 z, int32 w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="z" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , , and object coordinates (if present) for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <param name="w">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RasterPos4">
      <MemberSignature Language="C#" Value="public static void RasterPos4 (float x, float y, float z, float w);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RasterPos4(float32 x, float32 y, float32 z, float32 w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
        <Parameter Name="w" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , , and object coordinates (if present) for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <param name="w">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify the raster position for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBuffer">
      <MemberSignature Language="C#" Value="public static void ReadBuffer (MonoMac.OpenGL.ReadBufferMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReadBuffer(valuetype MonoMac.OpenGL.ReadBufferMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.ReadBufferMode" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies a color buffer. Accepted values are GL_FRONT_LEFT, GL_FRONT_RIGHT, GL_BACK_LEFT, GL_BACK_RIGHT, GL_FRONT, GL_BACK, GL_LEFT, and GL_RIGHT.
            </para>
        </param>
        <summary>[requires: v1.0]
            Select a color buffer source for pixels
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPixels">
      <MemberSignature Language="C#" Value="public static void ReadPixels (int x, int y, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr pixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReadPixels(int32 x, int32 y, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the window coordinates of the first pixel that is read from the frame buffer. This location is the lower left corner of a rectangular block of pixels.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="width">
          <para>
            Specify the dimensions of the pixel rectangle. width and height of one correspond to a single pixel.
            </para>
        </param>
        <param name="height">To be added.</param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_STENCIL_INDEX, GL_DEPTH_COMPONENT, GL_DEPTH_STENCIL, GL_RED, GL_GREEN, GL_BLUE, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. Must be one of GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_HALF_FLOAT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, GL_UNSIGNED_INT_2_10_10_10_REV, GL_UNSIGNED_INT_24_8, GL_UNSIGNED_INT_10F_11F_11F_REV, GL_UNSIGNED_INT_5_9_9_9_REV, or GL_FLOAT_32_UNSIGNED_INT_24_8_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Read a block of pixels from the frame buffer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPixels&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void ReadPixels&lt;T6&gt; (int x, int y, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T6 pixels) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReadPixels&lt;struct .ctor (class System.ValueType) T6&gt;(int32 x, int32 y, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T6 pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T6&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="x">
          <para>
            Specify the window coordinates of the first pixel that is read from the frame buffer. This location is the lower left corner of a rectangular block of pixels.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="width">
          <para>
            Specify the dimensions of the pixel rectangle. width and height of one correspond to a single pixel.
            </para>
        </param>
        <param name="height">To be added.</param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_STENCIL_INDEX, GL_DEPTH_COMPONENT, GL_DEPTH_STENCIL, GL_RED, GL_GREEN, GL_BLUE, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. Must be one of GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_HALF_FLOAT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, GL_UNSIGNED_INT_2_10_10_10_REV, GL_UNSIGNED_INT_24_8, GL_UNSIGNED_INT_10F_11F_11F_REV, GL_UNSIGNED_INT_5_9_9_9_REV, or GL_FLOAT_32_UNSIGNED_INT_24_8_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Read a block of pixels from the frame buffer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPixels&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void ReadPixels&lt;T6&gt; (int x, int y, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T6[,,] pixels) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReadPixels&lt;struct .ctor (class System.ValueType) T6&gt;(int32 x, int32 y, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T6[,,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T6[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="x">
          <para>
            Specify the window coordinates of the first pixel that is read from the frame buffer. This location is the lower left corner of a rectangular block of pixels.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="width">
          <para>
            Specify the dimensions of the pixel rectangle. width and height of one correspond to a single pixel.
            </para>
        </param>
        <param name="height">To be added.</param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_STENCIL_INDEX, GL_DEPTH_COMPONENT, GL_DEPTH_STENCIL, GL_RED, GL_GREEN, GL_BLUE, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. Must be one of GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_HALF_FLOAT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, GL_UNSIGNED_INT_2_10_10_10_REV, GL_UNSIGNED_INT_24_8, GL_UNSIGNED_INT_10F_11F_11F_REV, GL_UNSIGNED_INT_5_9_9_9_REV, or GL_FLOAT_32_UNSIGNED_INT_24_8_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Read a block of pixels from the frame buffer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPixels&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void ReadPixels&lt;T6&gt; (int x, int y, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T6[,] pixels) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReadPixels&lt;struct .ctor (class System.ValueType) T6&gt;(int32 x, int32 y, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T6[,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T6[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="x">
          <para>
            Specify the window coordinates of the first pixel that is read from the frame buffer. This location is the lower left corner of a rectangular block of pixels.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="width">
          <para>
            Specify the dimensions of the pixel rectangle. width and height of one correspond to a single pixel.
            </para>
        </param>
        <param name="height">To be added.</param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_STENCIL_INDEX, GL_DEPTH_COMPONENT, GL_DEPTH_STENCIL, GL_RED, GL_GREEN, GL_BLUE, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. Must be one of GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_HALF_FLOAT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, GL_UNSIGNED_INT_2_10_10_10_REV, GL_UNSIGNED_INT_24_8, GL_UNSIGNED_INT_10F_11F_11F_REV, GL_UNSIGNED_INT_5_9_9_9_REV, or GL_FLOAT_32_UNSIGNED_INT_24_8_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Read a block of pixels from the frame buffer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPixels&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void ReadPixels&lt;T6&gt; (int x, int y, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T6[] pixels) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReadPixels&lt;struct .ctor (class System.ValueType) T6&gt;(int32 x, int32 y, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T6[] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T6[]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="x">
          <para>
            Specify the window coordinates of the first pixel that is read from the frame buffer. This location is the lower left corner of a rectangular block of pixels.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="width">
          <para>
            Specify the dimensions of the pixel rectangle. width and height of one correspond to a single pixel.
            </para>
        </param>
        <param name="height">To be added.</param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_STENCIL_INDEX, GL_DEPTH_COMPONENT, GL_DEPTH_STENCIL, GL_RED, GL_GREEN, GL_BLUE, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. Must be one of GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_HALF_FLOAT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, GL_UNSIGNED_INT_2_10_10_10_REV, GL_UNSIGNED_INT_24_8, GL_UNSIGNED_INT_10F_11F_11F_REV, GL_UNSIGNED_INT_5_9_9_9_REV, or GL_FLOAT_32_UNSIGNED_INT_24_8_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Read a block of pixels from the frame buffer
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (ref System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (ref System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (ref double v1, ref double v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(float64 v1, float64 v2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Double&amp;" RefType="ref" />
        <Parameter Name="v2" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a rectangle
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (double* v1, double* v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(float64* v1, float64* v2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Double*" />
        <Parameter Name="v2" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a rectangle
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (double[] v1, double[] v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(float64[] v1, float64[] v2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Double[]" />
        <Parameter Name="v2" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a rectangle
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (ref short v1, ref short v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(int16 v1, int16 v2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int16&amp;" RefType="ref" />
        <Parameter Name="v2" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a rectangle
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (short* v1, short* v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(int16* v1, int16* v2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int16*" />
        <Parameter Name="v2" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a rectangle
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (short[] v1, short[] v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(int16[] v1, int16[] v2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int16[]" />
        <Parameter Name="v2" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a rectangle
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (ref int v1, ref int v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(int32 v1, int32 v2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="v2" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a rectangle
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (int* v1, int* v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(int32* v1, int32* v2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int32*" />
        <Parameter Name="v2" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a rectangle
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (int[] v1, int[] v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(int32[] v1, int32[] v2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Int32[]" />
        <Parameter Name="v2" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a rectangle
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (ref float v1, ref float v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(float32 v1, float32 v2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Single&amp;" RefType="ref" />
        <Parameter Name="v2" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a rectangle
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (float* v1, float* v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(float32* v1, float32* v2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Single*" />
        <Parameter Name="v2" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a rectangle
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (float[] v1, float[] v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(float32[] v1, float32[] v2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="System.Single[]" />
        <Parameter Name="v2" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a rectangle
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (double x1, double y1, double x2, double y2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(float64 x1, float64 y1, float64 x2, float64 y2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Double" />
        <Parameter Name="y1" Type="System.Double" />
        <Parameter Name="x2" Type="System.Double" />
        <Parameter Name="y2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x1">
          <para>
            Specify one vertex of a rectangle.
            </para>
        </param>
        <param name="y1">To be added.</param>
        <param name="x2">
          <para>
            Specify the opposite vertex of the rectangle.
            </para>
        </param>
        <param name="y2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a rectangle
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(int32 x1, int32 y1, int32 x2, int32 y2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1">
          <para>
            Specify one vertex of a rectangle.
            </para>
        </param>
        <param name="y1">To be added.</param>
        <param name="x2">
          <para>
            Specify the opposite vertex of the rectangle.
            </para>
        </param>
        <param name="y2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a rectangle
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public static void Rect (float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rect(float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1">
          <para>
            Specify one vertex of a rectangle.
            </para>
        </param>
        <param name="y1">To be added.</param>
        <param name="x2">
          <para>
            Specify the opposite vertex of the rectangle.
            </para>
        </param>
        <param name="y2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Draw a rectangle
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rects">
      <MemberSignature Language="C#" Value="public static void Rects (short x1, short y1, short x2, short y2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rects(int16 x1, int16 y1, int16 x2, int16 y2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int16" />
        <Parameter Name="y1" Type="System.Int16" />
        <Parameter Name="x2" Type="System.Int16" />
        <Parameter Name="y2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="x1">To be added.</param>
        <param name="y1">To be added.</param>
        <param name="x2">To be added.</param>
        <param name="y2">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public static int RenderMode (MonoMac.OpenGL.RenderingMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 RenderMode(valuetype MonoMac.OpenGL.RenderingMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.RenderingMode" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies the rasterization mode. Three values are accepted: GL_RENDER, GL_SELECT, and GL_FEEDBACK. The initial value is GL_RENDER.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set rasterization mode
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetHistogram">
      <MemberSignature Language="C#" Value="public static void ResetHistogram (MonoMac.OpenGL.HistogramTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetHistogram(valuetype MonoMac.OpenGL.HistogramTarget target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.HistogramTarget" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be GL_HISTOGRAM.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Reset histogram table entries to zero
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetMinmax">
      <MemberSignature Language="C#" Value="public static void ResetMinmax (MonoMac.OpenGL.MinmaxTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetMinmax(valuetype MonoMac.OpenGL.MinmaxTarget target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.MinmaxTarget" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be GL_MINMAX.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Reset minmax table entries to initial values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public static void Rotate (double angle, MonoMac.OpenGL.Vector3d axis);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rotate(float64 angle, valuetype MonoMac.OpenGL.Vector3d axis) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
        <Parameter Name="axis" Type="MonoMac.OpenGL.Vector3d" />
      </Parameters>
      <Docs>
        <param name="angle">To be added.</param>
        <param name="axis">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public static void Rotate (float angle, MonoMac.OpenGL.Vector3 axis);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rotate(float32 angle, valuetype MonoMac.OpenGL.Vector3 axis) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="axis" Type="MonoMac.OpenGL.Vector3" />
      </Parameters>
      <Docs>
        <param name="angle">To be added.</param>
        <param name="axis">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public static void Rotate (double angle, double x, double y, double z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rotate(float64 angle, float64 x, float64 y, float64 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="z" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle">
          <para>
            Specifies the angle of rotation, in degrees.
            </para>
        </param>
        <param name="x">
          <para>
            Specify the x, y, and z coordinates of a vector, respectively.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Multiply the current matrix by a rotation matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public static void Rotate (float angle, float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Rotate(float32 angle, float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">
          <para>
            Specifies the angle of rotation, in degrees.
            </para>
        </param>
        <param name="x">
          <para>
            Specify the x, y, and z coordinates of a vector, respectively.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Multiply the current matrix by a rotation matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public static void Scale (MonoMac.OpenGL.Vector3 scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scale(valuetype MonoMac.OpenGL.Vector3 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="MonoMac.OpenGL.Vector3" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public static void Scale (MonoMac.OpenGL.Vector3d scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scale(valuetype MonoMac.OpenGL.Vector3d scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="MonoMac.OpenGL.Vector3d" />
      </Parameters>
      <Docs>
        <param name="scale">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public static void Scale (double x, double y, double z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scale(float64 x, float64 y, float64 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="z" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify scale factors along the x, y, and z axes, respectively.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Multiply the current matrix by a general scaling matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public static void Scale (float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scale(float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify scale factors along the x, y, and z axes, respectively.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Multiply the current matrix by a general scaling matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scissor">
      <MemberSignature Language="C#" Value="public static void Scissor (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scissor(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the lower left corner of the scissor box. Initially (0, 0).
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="width">
          <para>
            Specify the width and height of the scissor box. When a GL context is first attached to a window, width and height are set to the dimensions of that window.
            </para>
        </param>
        <param name="height">To be added.</param>
        <summary>[requires: v1.0]
            Define the scissor box
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (ref byte v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(unsigned int8 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Byte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (byte* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(unsigned int8* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (byte[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(unsigned int8[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (ref sbyte v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(int8 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.SByte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (sbyte* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(int8* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (sbyte[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(int8[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.SByte[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (ref ushort v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(unsigned int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (ushort* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(unsigned int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (ushort[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(unsigned int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (ref uint v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(unsigned int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (uint* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(unsigned int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (uint[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(unsigned int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (byte red, byte green, byte blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(unsigned int8 red, unsigned int8 green, unsigned int8 blue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Byte" />
        <Parameter Name="green" Type="System.Byte" />
        <Parameter Name="blue" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current secondary color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (double red, double green, double blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(float64 red, float64 green, float64 blue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Double" />
        <Parameter Name="green" Type="System.Double" />
        <Parameter Name="blue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current secondary color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (short red, short green, short blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(int16 red, int16 green, int16 blue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Int16" />
        <Parameter Name="green" Type="System.Int16" />
        <Parameter Name="blue" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current secondary color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (int red, int green, int blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(int32 red, int32 green, int32 blue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Int32" />
        <Parameter Name="green" Type="System.Int32" />
        <Parameter Name="blue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current secondary color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (sbyte red, sbyte green, sbyte blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(int8 red, int8 green, int8 blue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.SByte" />
        <Parameter Name="green" Type="System.SByte" />
        <Parameter Name="blue" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current secondary color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (float red, float green, float blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(float32 red, float32 green, float32 blue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.Single" />
        <Parameter Name="green" Type="System.Single" />
        <Parameter Name="blue" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current secondary color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (ushort red, ushort green, ushort blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(unsigned int16 red, unsigned int16 green, unsigned int16 blue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.UInt16" />
        <Parameter Name="green" Type="System.UInt16" />
        <Parameter Name="blue" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current secondary color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColor3">
      <MemberSignature Language="C#" Value="public static void SecondaryColor3 (uint red, uint green, uint blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColor3(unsigned int32 red, unsigned int32 green, unsigned int32 blue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="red" Type="System.UInt32" />
        <Parameter Name="green" Type="System.UInt32" />
        <Parameter Name="blue" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="red">
          <para>
            Specify new red, green, and blue values for the current secondary color.
            </para>
        </param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Set the current secondary color
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColorPointer">
      <MemberSignature Language="C#" Value="public static void SecondaryColorPointer (int size, MonoMac.OpenGL.ColorPointerType type, int stride, IntPtr pointer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColorPointer(int32 size, valuetype MonoMac.OpenGL.ColorPointerType type, int32 stride, native int pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ColorPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="size">
          <para>
            Specifies the number of components per color. Must be 3.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each color component in the array. Symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive colors. If stride is 0, the colors are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first component of the first color element in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Define an array of secondary colors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColorPointer&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void SecondaryColorPointer&lt;T3&gt; (int size, MonoMac.OpenGL.ColorPointerType type, int stride, out T3 pointer) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColorPointer&lt;struct .ctor (class System.ValueType) T3&gt;(int32 size, valuetype MonoMac.OpenGL.ColorPointerType type, int32 stride, !!T3 pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ColorPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="size">
          <para>
            Specifies the number of components per color. Must be 3.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each color component in the array. Symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive colors. If stride is 0, the colors are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first component of the first color element in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Define an array of secondary colors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColorPointer&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void SecondaryColorPointer&lt;T3&gt; (int size, MonoMac.OpenGL.ColorPointerType type, int stride, T3[,,] pointer) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColorPointer&lt;struct .ctor (class System.ValueType) T3&gt;(int32 size, valuetype MonoMac.OpenGL.ColorPointerType type, int32 stride, !!T3[,,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ColorPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T3[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="size">
          <para>
            Specifies the number of components per color. Must be 3.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each color component in the array. Symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive colors. If stride is 0, the colors are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first component of the first color element in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Define an array of secondary colors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColorPointer&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void SecondaryColorPointer&lt;T3&gt; (int size, MonoMac.OpenGL.ColorPointerType type, int stride, T3[,] pointer) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColorPointer&lt;struct .ctor (class System.ValueType) T3&gt;(int32 size, valuetype MonoMac.OpenGL.ColorPointerType type, int32 stride, !!T3[,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ColorPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T3[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="size">
          <para>
            Specifies the number of components per color. Must be 3.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each color component in the array. Symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive colors. If stride is 0, the colors are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first component of the first color element in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Define an array of secondary colors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryColorPointer&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void SecondaryColorPointer&lt;T3&gt; (int size, MonoMac.OpenGL.ColorPointerType type, int stride, T3[] pointer) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SecondaryColorPointer&lt;struct .ctor (class System.ValueType) T3&gt;(int32 size, valuetype MonoMac.OpenGL.ColorPointerType type, int32 stride, !!T3[] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.ColorPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T3[]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="size">
          <para>
            Specifies the number of components per color. Must be 3.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each color component in the array. Symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive colors. If stride is 0, the colors are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first component of the first color element in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Define an array of secondary colors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectBuffer">
      <MemberSignature Language="C#" Value="public static void SelectBuffer (int size, out int buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SelectBuffer(int32 size, int32 buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="size">
          <para>
            Specifies the size of buffer.
            </para>
        </param>
        <param name="buffer">
          <para>
            Returns the selection data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Establish a buffer for selection mode values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectBuffer">
      <MemberSignature Language="C#" Value="public static void SelectBuffer (int size, int* buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SelectBuffer(int32 size, int32* buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="size">
          <para>
            Specifies the size of buffer.
            </para>
        </param>
        <param name="buffer">
          <para>
            Returns the selection data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Establish a buffer for selection mode values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectBuffer">
      <MemberSignature Language="C#" Value="public static void SelectBuffer (int size, int[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SelectBuffer(int32 size, int32[] buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="size">
          <para>
            Specifies the size of buffer.
            </para>
        </param>
        <param name="buffer">
          <para>
            Returns the selection data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Establish a buffer for selection mode values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectBuffer">
      <MemberSignature Language="C#" Value="public static void SelectBuffer (int size, out uint buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SelectBuffer(int32 size, unsigned int32 buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="size">
          <para>
            Specifies the size of buffer.
            </para>
        </param>
        <param name="buffer">
          <para>
            Returns the selection data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Establish a buffer for selection mode values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectBuffer">
      <MemberSignature Language="C#" Value="public static void SelectBuffer (int size, uint* buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SelectBuffer(int32 size, unsigned int32* buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="size">
          <para>
            Specifies the size of buffer.
            </para>
        </param>
        <param name="buffer">
          <para>
            Returns the selection data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Establish a buffer for selection mode values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectBuffer">
      <MemberSignature Language="C#" Value="public static void SelectBuffer (int size, uint[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SelectBuffer(int32 size, unsigned int32[] buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="size">
          <para>
            Specifies the size of buffer.
            </para>
        </param>
        <param name="buffer">
          <para>
            Returns the selection data.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Establish a buffer for selection mode values
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparableFilter2D">
      <MemberSignature Language="C#" Value="public static void SeparableFilter2D (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr row, IntPtr column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SeparableFilter2D(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int row, native int column) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="System.IntPtr" />
        <Parameter Name="column" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The number of elements in the pixel array referenced by row. (This is the width of the separable filter kernel.)
            </para>
        </param>
        <param name="height">
          <para>
            The number of elements in the pixel array referenced by column. (This is the height of the separable filter kernel.)
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in row and column. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_INTENSITY, GL_LUMINANCE, and GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in row and column. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the row filter kernel.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the column filter kernel.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a separable two-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparableFilter2D&lt;T7&gt;">
      <MemberSignature Language="C#" Value="public static void SeparableFilter2D&lt;T7&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr row, out T7 column) where T7 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SeparableFilter2D&lt;struct .ctor (class System.ValueType) T7&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int row, !!T7 column) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T7">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="System.IntPtr" />
        <Parameter Name="column" Type="T7&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T7">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The number of elements in the pixel array referenced by row. (This is the width of the separable filter kernel.)
            </para>
        </param>
        <param name="height">
          <para>
            The number of elements in the pixel array referenced by column. (This is the height of the separable filter kernel.)
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in row and column. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_INTENSITY, GL_LUMINANCE, and GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in row and column. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the row filter kernel.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the column filter kernel.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a separable two-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparableFilter2D&lt;T7&gt;">
      <MemberSignature Language="C#" Value="public static void SeparableFilter2D&lt;T7&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr row, T7[,,] column) where T7 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SeparableFilter2D&lt;struct .ctor (class System.ValueType) T7&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int row, !!T7[,,] column) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T7">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="System.IntPtr" />
        <Parameter Name="column" Type="T7[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T7">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The number of elements in the pixel array referenced by row. (This is the width of the separable filter kernel.)
            </para>
        </param>
        <param name="height">
          <para>
            The number of elements in the pixel array referenced by column. (This is the height of the separable filter kernel.)
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in row and column. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_INTENSITY, GL_LUMINANCE, and GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in row and column. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the row filter kernel.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the column filter kernel.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a separable two-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparableFilter2D&lt;T7&gt;">
      <MemberSignature Language="C#" Value="public static void SeparableFilter2D&lt;T7&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr row, T7[,] column) where T7 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SeparableFilter2D&lt;struct .ctor (class System.ValueType) T7&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int row, !!T7[,] column) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T7">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="System.IntPtr" />
        <Parameter Name="column" Type="T7[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T7">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The number of elements in the pixel array referenced by row. (This is the width of the separable filter kernel.)
            </para>
        </param>
        <param name="height">
          <para>
            The number of elements in the pixel array referenced by column. (This is the height of the separable filter kernel.)
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in row and column. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_INTENSITY, GL_LUMINANCE, and GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in row and column. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the row filter kernel.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the column filter kernel.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a separable two-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparableFilter2D&lt;T7&gt;">
      <MemberSignature Language="C#" Value="public static void SeparableFilter2D&lt;T7&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr row, T7[] column) where T7 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SeparableFilter2D&lt;struct .ctor (class System.ValueType) T7&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int row, !!T7[] column) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T7">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="System.IntPtr" />
        <Parameter Name="column" Type="T7[]" />
      </Parameters>
      <Docs>
        <typeparam name="T7">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The number of elements in the pixel array referenced by row. (This is the width of the separable filter kernel.)
            </para>
        </param>
        <param name="height">
          <para>
            The number of elements in the pixel array referenced by column. (This is the height of the separable filter kernel.)
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in row and column. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_INTENSITY, GL_LUMINANCE, and GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in row and column. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the row filter kernel.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the column filter kernel.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a separable two-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparableFilter2D&lt;T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static void SeparableFilter2D&lt;T6,T7&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T6 row, T7[,,] column) where T6 : struct where T7 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SeparableFilter2D&lt;struct .ctor (class System.ValueType) T6, struct .ctor (class System.ValueType) T7&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T6 row, !!T7[,,] column) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="T7">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="T6&amp;" RefType="out" />
        <Parameter Name="column" Type="T7[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The number of elements in the pixel array referenced by row. (This is the width of the separable filter kernel.)
            </para>
        </param>
        <param name="height">
          <para>
            The number of elements in the pixel array referenced by column. (This is the height of the separable filter kernel.)
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in row and column. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_INTENSITY, GL_LUMINANCE, and GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in row and column. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the row filter kernel.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the column filter kernel.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a separable two-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparableFilter2D&lt;T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static void SeparableFilter2D&lt;T6,T7&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T6[,,] row, T7[,,] column) where T6 : struct where T7 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SeparableFilter2D&lt;struct .ctor (class System.ValueType) T6, struct .ctor (class System.ValueType) T7&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T6[,,] row, !!T7[,,] column) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="T7">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="T6[,,]" />
        <Parameter Name="column" Type="T7[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The number of elements in the pixel array referenced by row. (This is the width of the separable filter kernel.)
            </para>
        </param>
        <param name="height">
          <para>
            The number of elements in the pixel array referenced by column. (This is the height of the separable filter kernel.)
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in row and column. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_INTENSITY, GL_LUMINANCE, and GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in row and column. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the row filter kernel.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the column filter kernel.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a separable two-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparableFilter2D&lt;T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static void SeparableFilter2D&lt;T6,T7&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T6[,] row, T7[,,] column) where T6 : struct where T7 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SeparableFilter2D&lt;struct .ctor (class System.ValueType) T6, struct .ctor (class System.ValueType) T7&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T6[,] row, !!T7[,,] column) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="T7">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="T6[,]" />
        <Parameter Name="column" Type="T7[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The number of elements in the pixel array referenced by row. (This is the width of the separable filter kernel.)
            </para>
        </param>
        <param name="height">
          <para>
            The number of elements in the pixel array referenced by column. (This is the height of the separable filter kernel.)
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in row and column. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_INTENSITY, GL_LUMINANCE, and GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in row and column. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the row filter kernel.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the column filter kernel.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a separable two-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparableFilter2D&lt;T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static void SeparableFilter2D&lt;T6,T7&gt; (MonoMac.OpenGL.SeparableTarget target, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T6[] row, T7[,,] column) where T6 : struct where T7 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SeparableFilter2D&lt;struct .ctor (class System.ValueType) T6, struct .ctor (class System.ValueType) T7&gt;(valuetype MonoMac.OpenGL.SeparableTarget target, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T6[] row, !!T7[,,] column) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="T7">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.SeparableTarget" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="row" Type="T6[]" />
        <Parameter Name="column" Type="T7[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <typeparam name="T7">To be added.</typeparam>
        <param name="target">
          <para>
            Must be GL_SEPARABLE_2D.
            </para>
        </param>
        <param name="internalformat">
          <para>
            The internal format of the convolution filter kernel. The allowable values are GL_ALPHA, GL_ALPHA4, GL_ALPHA8, GL_ALPHA12, GL_ALPHA16, GL_LUMINANCE, GL_LUMINANCE4, GL_LUMINANCE8, GL_LUMINANCE12, GL_LUMINANCE16, GL_LUMINANCE_ALPHA, GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8, GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_ALPHA16, GL_INTENSITY, GL_INTENSITY4, GL_INTENSITY8, GL_INTENSITY12, GL_INTENSITY16, GL_R3_G3_B2, GL_RGB, GL_RGB4, GL_RGB5, GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2, GL_RGBA4, GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.
            </para>
        </param>
        <param name="width">
          <para>
            The number of elements in the pixel array referenced by row. (This is the width of the separable filter kernel.)
            </para>
        </param>
        <param name="height">
          <para>
            The number of elements in the pixel array referenced by column. (This is the height of the separable filter kernel.)
            </para>
        </param>
        <param name="format">
          <para>
            The format of the pixel data in row and column. The allowable values are GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_BGR, GL_RGBA, GL_BGRA, GL_INTENSITY, GL_LUMINANCE, and GL_LUMINANCE_ALPHA.
            </para>
        </param>
        <param name="type">
          <para>
            The type of the pixel data in row and column. Symbolic constants GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted.
            </para>
        </param>
        <param name="row">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the row filter kernel.
            </para>
        </param>
        <param name="column">
          <para>
            Pointer to a one-dimensional array of pixel data that is processed to build the column filter kernel.
            </para>
        </param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Define a separable two-dimensional convolution filter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadeModel">
      <MemberSignature Language="C#" Value="public static void ShadeModel (MonoMac.OpenGL.ShadingModel mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ShadeModel(valuetype MonoMac.OpenGL.ShadingModel mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="MonoMac.OpenGL.ShadingModel" />
      </Parameters>
      <Docs>
        <param name="mode">
          <para>
            Specifies a symbolic value representing a shading technique. Accepted values are GL_FLAT and GL_SMOOTH. The initial value is GL_SMOOTH.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Select flat or smooth shading
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShaderSource">
      <MemberSignature Language="C#" Value="public static void ShaderSource (int shader, string string);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ShaderSource(int32 shader, string string) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.Int32" />
        <Parameter Name="string" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="shader">To be added.</param>
        <param name="string">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShaderSource">
      <MemberSignature Language="C#" Value="public static void ShaderSource (int shader, int count, string[] string, ref int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ShaderSource(int32 shader, int32 count, string[] string, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="string" Type="System.String[]" />
        <Parameter Name="length" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the handle of the shader object whose source code is to be replaced.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements in the string and length arrays.
            </para>
        </param>
        <param name="string">
          <para>
            Specifies an array of pointers to strings containing the source code to be loaded into the shader.
            </para>
        </param>
        <param name="length">
          <para>
            Specifies an array of string lengths.
            </para>
        </param>
        <summary>[requires: v2.0]
            Replaces the source code in a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShaderSource">
      <MemberSignature Language="C#" Value="public static void ShaderSource (int shader, int count, string[] string, int* length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ShaderSource(int32 shader, int32 count, string[] string, int32* length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="string" Type="System.String[]" />
        <Parameter Name="length" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the handle of the shader object whose source code is to be replaced.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements in the string and length arrays.
            </para>
        </param>
        <param name="string">
          <para>
            Specifies an array of pointers to strings containing the source code to be loaded into the shader.
            </para>
        </param>
        <param name="length">
          <para>
            Specifies an array of string lengths.
            </para>
        </param>
        <summary>[requires: v2.0]
            Replaces the source code in a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShaderSource">
      <MemberSignature Language="C#" Value="public static void ShaderSource (uint shader, int count, string[] string, ref int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ShaderSource(unsigned int32 shader, int32 count, string[] string, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.UInt32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="string" Type="System.String[]" />
        <Parameter Name="length" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the handle of the shader object whose source code is to be replaced.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements in the string and length arrays.
            </para>
        </param>
        <param name="string">
          <para>
            Specifies an array of pointers to strings containing the source code to be loaded into the shader.
            </para>
        </param>
        <param name="length">
          <para>
            Specifies an array of string lengths.
            </para>
        </param>
        <summary>[requires: v2.0]
            Replaces the source code in a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShaderSource">
      <MemberSignature Language="C#" Value="public static void ShaderSource (uint shader, int count, string[] string, int* length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ShaderSource(unsigned int32 shader, int32 count, string[] string, int32* length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="System.UInt32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="string" Type="System.String[]" />
        <Parameter Name="length" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="shader">
          <para>
            Specifies the handle of the shader object whose source code is to be replaced.
            </para>
        </param>
        <param name="count">
          <para>
            Specifies the number of elements in the string and length arrays.
            </para>
        </param>
        <param name="string">
          <para>
            Specifies an array of pointers to strings containing the source code to be loaded into the shader.
            </para>
        </param>
        <param name="length">
          <para>
            Specifies an array of string lengths.
            </para>
        </param>
        <summary>[requires: v2.0]
            Replaces the source code in a shader object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StencilFunc">
      <MemberSignature Language="C#" Value="public static void StencilFunc (MonoMac.OpenGL.StencilFunction func, int ref, int mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StencilFunc(valuetype MonoMac.OpenGL.StencilFunction func, int32 ref, int32 mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="func" Type="MonoMac.OpenGL.StencilFunction" />
        <Parameter Name="ref" Type="System.Int32" />
        <Parameter Name="mask" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="func">
          <para>
            Specifies the test function. Eight symbolic constants are valid: GL_NEVER, GL_LESS, GL_LEQUAL, GL_GREATER, GL_GEQUAL, GL_EQUAL, GL_NOTEQUAL, and GL_ALWAYS. The initial value is GL_ALWAYS.
            </para>
        </param>
        <param name="ref">
          <para>
            Specifies the reference value for the stencil test. ref is clamped to the range [0, 2 sup n - 1], where is the number of bitplanes in the stencil buffer. The initial value is 0.
            </para>
        </param>
        <param name="mask">
          <para>
            Specifies a mask that is ANDed with both the reference value and the stored stencil value when the test is done. The initial value is all 1's.
            </para>
        </param>
        <summary>[requires: v1.0]
            Set front and back function and reference value for stencil testing
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StencilFunc">
      <MemberSignature Language="C#" Value="public static void StencilFunc (MonoMac.OpenGL.StencilFunction func, int ref, uint mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StencilFunc(valuetype MonoMac.OpenGL.StencilFunction func, int32 ref, unsigned int32 mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="func" Type="MonoMac.OpenGL.StencilFunction" />
        <Parameter Name="ref" Type="System.Int32" />
        <Parameter Name="mask" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="func">
          <para>
            Specifies the test function. Eight symbolic constants are valid: GL_NEVER, GL_LESS, GL_LEQUAL, GL_GREATER, GL_GEQUAL, GL_EQUAL, GL_NOTEQUAL, and GL_ALWAYS. The initial value is GL_ALWAYS.
            </para>
        </param>
        <param name="ref">
          <para>
            Specifies the reference value for the stencil test. ref is clamped to the range [0, 2 sup n - 1], where is the number of bitplanes in the stencil buffer. The initial value is 0.
            </para>
        </param>
        <param name="mask">
          <para>
            Specifies a mask that is ANDed with both the reference value and the stored stencil value when the test is done. The initial value is all 1's.
            </para>
        </param>
        <summary>[requires: v1.0]
            Set front and back function and reference value for stencil testing
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StencilFuncSeparate">
      <MemberSignature Language="C#" Value="public static void StencilFuncSeparate (MonoMac.OpenGL.Version20 face, MonoMac.OpenGL.StencilFunction func, int ref, int mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StencilFuncSeparate(valuetype MonoMac.OpenGL.Version20 face, valuetype MonoMac.OpenGL.StencilFunction func, int32 ref, int32 mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.Version20" />
        <Parameter Name="func" Type="MonoMac.OpenGL.StencilFunction" />
        <Parameter Name="ref" Type="System.Int32" />
        <Parameter Name="mask" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies whether front and/or back stencil state is updated. Three symbolic constants are valid: GL_FRONT, GL_BACK, and GL_FRONT_AND_BACK.
            </para>
        </param>
        <param name="func">
          <para>
            Specifies the test function. Eight symbolic constants are valid: GL_NEVER, GL_LESS, GL_LEQUAL, GL_GREATER, GL_GEQUAL, GL_EQUAL, GL_NOTEQUAL, and GL_ALWAYS. The initial value is GL_ALWAYS.
            </para>
        </param>
        <param name="ref">
          <para>
            Specifies the reference value for the stencil test. ref is clamped to the range [0, 2 sup n - 1], where is the number of bitplanes in the stencil buffer. The initial value is 0.
            </para>
        </param>
        <param name="mask">
          <para>
            Specifies a mask that is ANDed with both the reference value and the stored stencil value when the test is done. The initial value is all 1's.
            </para>
        </param>
        <summary>[requires: v2.0]
            Set front and/or back function and reference value for stencil testing
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StencilFuncSeparate">
      <MemberSignature Language="C#" Value="public static void StencilFuncSeparate (MonoMac.OpenGL.Version20 face, MonoMac.OpenGL.StencilFunction func, int ref, uint mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StencilFuncSeparate(valuetype MonoMac.OpenGL.Version20 face, valuetype MonoMac.OpenGL.StencilFunction func, int32 ref, unsigned int32 mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.Version20" />
        <Parameter Name="func" Type="MonoMac.OpenGL.StencilFunction" />
        <Parameter Name="ref" Type="System.Int32" />
        <Parameter Name="mask" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies whether front and/or back stencil state is updated. Three symbolic constants are valid: GL_FRONT, GL_BACK, and GL_FRONT_AND_BACK.
            </para>
        </param>
        <param name="func">
          <para>
            Specifies the test function. Eight symbolic constants are valid: GL_NEVER, GL_LESS, GL_LEQUAL, GL_GREATER, GL_GEQUAL, GL_EQUAL, GL_NOTEQUAL, and GL_ALWAYS. The initial value is GL_ALWAYS.
            </para>
        </param>
        <param name="ref">
          <para>
            Specifies the reference value for the stencil test. ref is clamped to the range [0, 2 sup n - 1], where is the number of bitplanes in the stencil buffer. The initial value is 0.
            </para>
        </param>
        <param name="mask">
          <para>
            Specifies a mask that is ANDed with both the reference value and the stored stencil value when the test is done. The initial value is all 1's.
            </para>
        </param>
        <summary>[requires: v2.0]
            Set front and/or back function and reference value for stencil testing
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StencilMask">
      <MemberSignature Language="C#" Value="public static void StencilMask (int mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StencilMask(int32 mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mask">
          <para>
            Specifies a bit mask to enable and disable writing of individual bits in the stencil planes. Initially, the mask is all 1's.
            </para>
        </param>
        <summary>[requires: v1.0]
            Control the front and back writing of individual bits in the stencil planes
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StencilMask">
      <MemberSignature Language="C#" Value="public static void StencilMask (uint mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StencilMask(unsigned int32 mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="mask">
          <para>
            Specifies a bit mask to enable and disable writing of individual bits in the stencil planes. Initially, the mask is all 1's.
            </para>
        </param>
        <summary>[requires: v1.0]
            Control the front and back writing of individual bits in the stencil planes
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StencilMaskSeparate">
      <MemberSignature Language="C#" Value="public static void StencilMaskSeparate (MonoMac.OpenGL.StencilFace face, int mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StencilMaskSeparate(valuetype MonoMac.OpenGL.StencilFace face, int32 mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.StencilFace" />
        <Parameter Name="mask" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies whether the front and/or back stencil writemask is updated. Three symbolic constants are valid: GL_FRONT, GL_BACK, and GL_FRONT_AND_BACK.
            </para>
        </param>
        <param name="mask">
          <para>
            Specifies a bit mask to enable and disable writing of individual bits in the stencil planes. Initially, the mask is all 1's.
            </para>
        </param>
        <summary>[requires: v2.0]
            Control the front and/or back writing of individual bits in the stencil planes
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StencilMaskSeparate">
      <MemberSignature Language="C#" Value="public static void StencilMaskSeparate (MonoMac.OpenGL.StencilFace face, uint mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StencilMaskSeparate(valuetype MonoMac.OpenGL.StencilFace face, unsigned int32 mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.StencilFace" />
        <Parameter Name="mask" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies whether the front and/or back stencil writemask is updated. Three symbolic constants are valid: GL_FRONT, GL_BACK, and GL_FRONT_AND_BACK.
            </para>
        </param>
        <param name="mask">
          <para>
            Specifies a bit mask to enable and disable writing of individual bits in the stencil planes. Initially, the mask is all 1's.
            </para>
        </param>
        <summary>[requires: v2.0]
            Control the front and/or back writing of individual bits in the stencil planes
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StencilOp">
      <MemberSignature Language="C#" Value="public static void StencilOp (MonoMac.OpenGL.StencilOp fail, MonoMac.OpenGL.StencilOp zfail, MonoMac.OpenGL.StencilOp zpass);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StencilOp(valuetype MonoMac.OpenGL.StencilOp fail, valuetype MonoMac.OpenGL.StencilOp zfail, valuetype MonoMac.OpenGL.StencilOp zpass) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fail" Type="MonoMac.OpenGL.StencilOp" />
        <Parameter Name="zfail" Type="MonoMac.OpenGL.StencilOp" />
        <Parameter Name="zpass" Type="MonoMac.OpenGL.StencilOp" />
      </Parameters>
      <Docs>
        <param name="fail">To be added.</param>
        <param name="zfail">To be added.</param>
        <param name="zpass">To be added.</param>
        <summary>[requires: v1.0]
            Set front and back stencil test actions
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StencilOpSeparate">
      <MemberSignature Language="C#" Value="public static void StencilOpSeparate (MonoMac.OpenGL.StencilFace face, MonoMac.OpenGL.StencilOp sfail, MonoMac.OpenGL.StencilOp dpfail, MonoMac.OpenGL.StencilOp dppass);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StencilOpSeparate(valuetype MonoMac.OpenGL.StencilFace face, valuetype MonoMac.OpenGL.StencilOp sfail, valuetype MonoMac.OpenGL.StencilOp dpfail, valuetype MonoMac.OpenGL.StencilOp dppass) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="face" Type="MonoMac.OpenGL.StencilFace" />
        <Parameter Name="sfail" Type="MonoMac.OpenGL.StencilOp" />
        <Parameter Name="dpfail" Type="MonoMac.OpenGL.StencilOp" />
        <Parameter Name="dppass" Type="MonoMac.OpenGL.StencilOp" />
      </Parameters>
      <Docs>
        <param name="face">
          <para>
            Specifies whether front and/or back stencil state is updated. Three symbolic constants are valid: GL_FRONT, GL_BACK, and GL_FRONT_AND_BACK.
            </para>
        </param>
        <param name="sfail">
          <para>
            Specifies the action to take when the stencil test fails. Eight symbolic constants are accepted: GL_KEEP, GL_ZERO, GL_REPLACE, GL_INCR, GL_INCR_WRAP, GL_DECR, GL_DECR_WRAP, and GL_INVERT. The initial value is GL_KEEP.
            </para>
        </param>
        <param name="dpfail">
          <para>
            Specifies the stencil action when the stencil test passes, but the depth test fails. dpfail accepts the same symbolic constants as sfail. The initial value is GL_KEEP.
            </para>
        </param>
        <param name="dppass">
          <para>
            Specifies the stencil action when both the stencil test and the depth test pass, or when the stencil test passes and either there is no depth buffer or depth testing is not enabled. dppass accepts the same symbolic constants as sfail. The initial value is GL_KEEP.
            </para>
        </param>
        <summary>[requires: v2.0]
            Set front and/or back stencil test actions
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="protected object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a synchronization token unique for the GL class.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord1">
      <MemberSignature Language="C#" Value="public static void TexCoord1 (double s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord1(float64 s) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord1">
      <MemberSignature Language="C#" Value="public static void TexCoord1 (double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord1(float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord1">
      <MemberSignature Language="C#" Value="public static void TexCoord1 (short s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord1(int16 s) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord1">
      <MemberSignature Language="C#" Value="public static void TexCoord1 (short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord1(int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord1">
      <MemberSignature Language="C#" Value="public static void TexCoord1 (int s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord1(int32 s) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord1">
      <MemberSignature Language="C#" Value="public static void TexCoord1 (int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord1(int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord1">
      <MemberSignature Language="C#" Value="public static void TexCoord1 (float s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord1(float32 s) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord1">
      <MemberSignature Language="C#" Value="public static void TexCoord1 (float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord1(float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (MonoMac.OpenGL.Vector2 v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(valuetype MonoMac.OpenGL.Vector2 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (MonoMac.OpenGL.Vector2d v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(valuetype MonoMac.OpenGL.Vector2d v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (double s, double t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(float64 s, float64 t) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Double" />
        <Parameter Name="t" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (short s, short t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(int16 s, int16 t) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Int16" />
        <Parameter Name="t" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (int s, int t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(int32 s, int32 t) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Int32" />
        <Parameter Name="t" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord2">
      <MemberSignature Language="C#" Value="public static void TexCoord2 (float s, float t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord2(float32 s, float32 t) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Single" />
        <Parameter Name="t" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (MonoMac.OpenGL.Vector3 v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(valuetype MonoMac.OpenGL.Vector3 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector3" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (MonoMac.OpenGL.Vector3d v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(valuetype MonoMac.OpenGL.Vector3d v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector3d" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (double s, double t, double r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(float64 s, float64 t, float64 r) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Double" />
        <Parameter Name="t" Type="System.Double" />
        <Parameter Name="r" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <param name="r">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (short s, short t, short r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(int16 s, int16 t, int16 r) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Int16" />
        <Parameter Name="t" Type="System.Int16" />
        <Parameter Name="r" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <param name="r">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (int s, int t, int r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(int32 s, int32 t, int32 r) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Int32" />
        <Parameter Name="t" Type="System.Int32" />
        <Parameter Name="r" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <param name="r">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord3">
      <MemberSignature Language="C#" Value="public static void TexCoord3 (float s, float t, float r);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord3(float32 s, float32 t, float32 r) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Single" />
        <Parameter Name="t" Type="System.Single" />
        <Parameter Name="r" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <param name="r">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (MonoMac.OpenGL.Vector4 v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(valuetype MonoMac.OpenGL.Vector4 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector4" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (MonoMac.OpenGL.Vector4d v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(valuetype MonoMac.OpenGL.Vector4d v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector4d" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (double s, double t, double r, double q);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(float64 s, float64 t, float64 r, float64 q) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Double" />
        <Parameter Name="t" Type="System.Double" />
        <Parameter Name="r" Type="System.Double" />
        <Parameter Name="q" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <param name="r">To be added.</param>
        <param name="q">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (short s, short t, short r, short q);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(int16 s, int16 t, int16 r, int16 q) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Int16" />
        <Parameter Name="t" Type="System.Int16" />
        <Parameter Name="r" Type="System.Int16" />
        <Parameter Name="q" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <param name="r">To be added.</param>
        <param name="q">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (int s, int t, int r, int q);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(int32 s, int32 t, int32 r, int32 q) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Int32" />
        <Parameter Name="t" Type="System.Int32" />
        <Parameter Name="r" Type="System.Int32" />
        <Parameter Name="q" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <param name="r">To be added.</param>
        <param name="q">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoord4">
      <MemberSignature Language="C#" Value="public static void TexCoord4 (float s, float t, float r, float q);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoord4(float32 s, float32 t, float32 r, float32 q) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Single" />
        <Parameter Name="t" Type="System.Single" />
        <Parameter Name="r" Type="System.Single" />
        <Parameter Name="q" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="s">
          <para>
            Specify s, t, r, and q texture coordinates. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="t">To be added.</param>
        <param name="r">To be added.</param>
        <param name="q">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set the current texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoordPointer">
      <MemberSignature Language="C#" Value="public static void TexCoordPointer (int size, MonoMac.OpenGL.TexCoordPointerType type, int stride, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoordPointer(int32 size, valuetype MonoMac.OpenGL.TexCoordPointerType type, int32 stride, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.TexCoordPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <param name="type">To be added.</param>
        <param name="stride">To be added.</param>
        <param name="offset">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoordPointer">
      <MemberSignature Language="C#" Value="public static void TexCoordPointer (int size, MonoMac.OpenGL.TexCoordPointerType type, int stride, IntPtr pointer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoordPointer(int32 size, valuetype MonoMac.OpenGL.TexCoordPointerType type, int32 stride, native int pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.TexCoordPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="size">
          <para>
            Specifies the number of coordinates per array element. Must be 1, 2, 3, or 4. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each texture coordinate. Symbolic constants GL_SHORT, GL_INT, GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive texture coordinate sets. If stride is 0, the array elements are understood to be tightly packed. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first texture coordinate set in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoordPointer&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void TexCoordPointer&lt;T3&gt; (int size, MonoMac.OpenGL.TexCoordPointerType type, int stride, out T3 pointer) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoordPointer&lt;struct .ctor (class System.ValueType) T3&gt;(int32 size, valuetype MonoMac.OpenGL.TexCoordPointerType type, int32 stride, !!T3 pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.TexCoordPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="size">
          <para>
            Specifies the number of coordinates per array element. Must be 1, 2, 3, or 4. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each texture coordinate. Symbolic constants GL_SHORT, GL_INT, GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive texture coordinate sets. If stride is 0, the array elements are understood to be tightly packed. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first texture coordinate set in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoordPointer&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void TexCoordPointer&lt;T3&gt; (int size, MonoMac.OpenGL.TexCoordPointerType type, int stride, T3[,,] pointer) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoordPointer&lt;struct .ctor (class System.ValueType) T3&gt;(int32 size, valuetype MonoMac.OpenGL.TexCoordPointerType type, int32 stride, !!T3[,,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.TexCoordPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T3[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="size">
          <para>
            Specifies the number of coordinates per array element. Must be 1, 2, 3, or 4. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each texture coordinate. Symbolic constants GL_SHORT, GL_INT, GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive texture coordinate sets. If stride is 0, the array elements are understood to be tightly packed. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first texture coordinate set in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoordPointer&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void TexCoordPointer&lt;T3&gt; (int size, MonoMac.OpenGL.TexCoordPointerType type, int stride, T3[,] pointer) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoordPointer&lt;struct .ctor (class System.ValueType) T3&gt;(int32 size, valuetype MonoMac.OpenGL.TexCoordPointerType type, int32 stride, !!T3[,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.TexCoordPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T3[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="size">
          <para>
            Specifies the number of coordinates per array element. Must be 1, 2, 3, or 4. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each texture coordinate. Symbolic constants GL_SHORT, GL_INT, GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive texture coordinate sets. If stride is 0, the array elements are understood to be tightly packed. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first texture coordinate set in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexCoordPointer&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void TexCoordPointer&lt;T3&gt; (int size, MonoMac.OpenGL.TexCoordPointerType type, int stride, T3[] pointer) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexCoordPointer&lt;struct .ctor (class System.ValueType) T3&gt;(int32 size, valuetype MonoMac.OpenGL.TexCoordPointerType type, int32 stride, !!T3[] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.TexCoordPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T3[]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="size">
          <para>
            Specifies the number of coordinates per array element. Must be 1, 2, 3, or 4. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each texture coordinate. Symbolic constants GL_SHORT, GL_INT, GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive texture coordinate sets. If stride is 0, the array elements are understood to be tightly packed. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first texture coordinate set in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexEnv">
      <MemberSignature Language="C#" Value="public static void TexEnv (MonoMac.OpenGL.TextureEnvTarget target, MonoMac.OpenGL.TextureEnvParameter pname, MonoMac.OpenGL.Color4 color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexEnv(valuetype MonoMac.OpenGL.TextureEnvTarget target, valuetype MonoMac.OpenGL.TextureEnvParameter pname, valuetype MonoMac.OpenGL.Color4 color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureEnvTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureEnvParameter" />
        <Parameter Name="color" Type="MonoMac.OpenGL.Color4" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexEnv">
      <MemberSignature Language="C#" Value="public static void TexEnv (MonoMac.OpenGL.TextureEnvTarget target, MonoMac.OpenGL.TextureEnvParameter pname, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexEnv(valuetype MonoMac.OpenGL.TextureEnvTarget target, valuetype MonoMac.OpenGL.TextureEnvParameter pname, valuetype System.Drawing.Color color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureEnvTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureEnvParameter" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexEnv">
      <MemberSignature Language="C#" Value="public static void TexEnv (MonoMac.OpenGL.TextureEnvTarget target, MonoMac.OpenGL.TextureEnvParameter pname, int param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexEnv(valuetype MonoMac.OpenGL.TextureEnvTarget target, valuetype MonoMac.OpenGL.TextureEnvParameter pname, int32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureEnvTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureEnvParameter" />
        <Parameter Name="param" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies a texture environment. May be GL_TEXTURE_ENV, GL_TEXTURE_FILTER_CONTROL or GL_POINT_SPRITE.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a single-valued texture environment parameter. May be either GL_TEXTURE_ENV_MODE, GL_TEXTURE_LOD_BIAS, GL_COMBINE_RGB, GL_COMBINE_ALPHA, GL_SRC0_RGB, GL_SRC1_RGB, GL_SRC2_RGB, GL_SRC0_ALPHA, GL_SRC1_ALPHA, GL_SRC2_ALPHA, GL_OPERAND0_RGB, GL_OPERAND1_RGB, GL_OPERAND2_RGB, GL_OPERAND0_ALPHA, GL_OPERAND1_ALPHA, GL_OPERAND2_ALPHA, GL_RGB_SCALE, GL_ALPHA_SCALE, or GL_COORD_REPLACE.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies a single symbolic constant, one of GL_ADD, GL_ADD_SIGNED, GL_INTERPOLATE, GL_MODULATE, GL_DECAL, GL_BLEND, GL_REPLACE, GL_SUBTRACT, GL_COMBINE, GL_TEXTURE, GL_CONSTANT, GL_PRIMARY_COLOR, GL_PREVIOUS, GL_SRC_COLOR, GL_ONE_MINUS_SRC_COLOR, GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA, a single boolean value for the point sprite texture coordinate replacement, a single floating-point value for the texture level-of-detail bias, or 1.0, 2.0, or 4.0 when specifying the GL_RGB_SCALE or GL_ALPHA_SCALE.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set texture environment parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexEnv">
      <MemberSignature Language="C#" Value="public static void TexEnv (MonoMac.OpenGL.TextureEnvTarget target, MonoMac.OpenGL.TextureEnvParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexEnv(valuetype MonoMac.OpenGL.TextureEnvTarget target, valuetype MonoMac.OpenGL.TextureEnvParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureEnvTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureEnvParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies a texture environment. May be GL_TEXTURE_ENV, GL_TEXTURE_FILTER_CONTROL or GL_POINT_SPRITE.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a single-valued texture environment parameter. May be either GL_TEXTURE_ENV_MODE, GL_TEXTURE_LOD_BIAS, GL_COMBINE_RGB, GL_COMBINE_ALPHA, GL_SRC0_RGB, GL_SRC1_RGB, GL_SRC2_RGB, GL_SRC0_ALPHA, GL_SRC1_ALPHA, GL_SRC2_ALPHA, GL_OPERAND0_RGB, GL_OPERAND1_RGB, GL_OPERAND2_RGB, GL_OPERAND0_ALPHA, GL_OPERAND1_ALPHA, GL_OPERAND2_ALPHA, GL_RGB_SCALE, GL_ALPHA_SCALE, or GL_COORD_REPLACE.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set texture environment parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexEnv">
      <MemberSignature Language="C#" Value="public static void TexEnv (MonoMac.OpenGL.TextureEnvTarget target, MonoMac.OpenGL.TextureEnvParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexEnv(valuetype MonoMac.OpenGL.TextureEnvTarget target, valuetype MonoMac.OpenGL.TextureEnvParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureEnvTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureEnvParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies a texture environment. May be GL_TEXTURE_ENV, GL_TEXTURE_FILTER_CONTROL or GL_POINT_SPRITE.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a single-valued texture environment parameter. May be either GL_TEXTURE_ENV_MODE, GL_TEXTURE_LOD_BIAS, GL_COMBINE_RGB, GL_COMBINE_ALPHA, GL_SRC0_RGB, GL_SRC1_RGB, GL_SRC2_RGB, GL_SRC0_ALPHA, GL_SRC1_ALPHA, GL_SRC2_ALPHA, GL_OPERAND0_RGB, GL_OPERAND1_RGB, GL_OPERAND2_RGB, GL_OPERAND0_ALPHA, GL_OPERAND1_ALPHA, GL_OPERAND2_ALPHA, GL_RGB_SCALE, GL_ALPHA_SCALE, or GL_COORD_REPLACE.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set texture environment parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexEnv">
      <MemberSignature Language="C#" Value="public static void TexEnv (MonoMac.OpenGL.TextureEnvTarget target, MonoMac.OpenGL.TextureEnvParameter pname, float param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexEnv(valuetype MonoMac.OpenGL.TextureEnvTarget target, valuetype MonoMac.OpenGL.TextureEnvParameter pname, float32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureEnvTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureEnvParameter" />
        <Parameter Name="param" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies a texture environment. May be GL_TEXTURE_ENV, GL_TEXTURE_FILTER_CONTROL or GL_POINT_SPRITE.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a single-valued texture environment parameter. May be either GL_TEXTURE_ENV_MODE, GL_TEXTURE_LOD_BIAS, GL_COMBINE_RGB, GL_COMBINE_ALPHA, GL_SRC0_RGB, GL_SRC1_RGB, GL_SRC2_RGB, GL_SRC0_ALPHA, GL_SRC1_ALPHA, GL_SRC2_ALPHA, GL_OPERAND0_RGB, GL_OPERAND1_RGB, GL_OPERAND2_RGB, GL_OPERAND0_ALPHA, GL_OPERAND1_ALPHA, GL_OPERAND2_ALPHA, GL_RGB_SCALE, GL_ALPHA_SCALE, or GL_COORD_REPLACE.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies a single symbolic constant, one of GL_ADD, GL_ADD_SIGNED, GL_INTERPOLATE, GL_MODULATE, GL_DECAL, GL_BLEND, GL_REPLACE, GL_SUBTRACT, GL_COMBINE, GL_TEXTURE, GL_CONSTANT, GL_PRIMARY_COLOR, GL_PREVIOUS, GL_SRC_COLOR, GL_ONE_MINUS_SRC_COLOR, GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA, a single boolean value for the point sprite texture coordinate replacement, a single floating-point value for the texture level-of-detail bias, or 1.0, 2.0, or 4.0 when specifying the GL_RGB_SCALE or GL_ALPHA_SCALE.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set texture environment parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexEnv">
      <MemberSignature Language="C#" Value="public static void TexEnv (MonoMac.OpenGL.TextureEnvTarget target, MonoMac.OpenGL.TextureEnvParameter pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexEnv(valuetype MonoMac.OpenGL.TextureEnvTarget target, valuetype MonoMac.OpenGL.TextureEnvParameter pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureEnvTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureEnvParameter" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies a texture environment. May be GL_TEXTURE_ENV, GL_TEXTURE_FILTER_CONTROL or GL_POINT_SPRITE.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a single-valued texture environment parameter. May be either GL_TEXTURE_ENV_MODE, GL_TEXTURE_LOD_BIAS, GL_COMBINE_RGB, GL_COMBINE_ALPHA, GL_SRC0_RGB, GL_SRC1_RGB, GL_SRC2_RGB, GL_SRC0_ALPHA, GL_SRC1_ALPHA, GL_SRC2_ALPHA, GL_OPERAND0_RGB, GL_OPERAND1_RGB, GL_OPERAND2_RGB, GL_OPERAND0_ALPHA, GL_OPERAND1_ALPHA, GL_OPERAND2_ALPHA, GL_RGB_SCALE, GL_ALPHA_SCALE, or GL_COORD_REPLACE.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set texture environment parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexEnv">
      <MemberSignature Language="C#" Value="public static void TexEnv (MonoMac.OpenGL.TextureEnvTarget target, MonoMac.OpenGL.TextureEnvParameter pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexEnv(valuetype MonoMac.OpenGL.TextureEnvTarget target, valuetype MonoMac.OpenGL.TextureEnvParameter pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureEnvTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureEnvParameter" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies a texture environment. May be GL_TEXTURE_ENV, GL_TEXTURE_FILTER_CONTROL or GL_POINT_SPRITE.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a single-valued texture environment parameter. May be either GL_TEXTURE_ENV_MODE, GL_TEXTURE_LOD_BIAS, GL_COMBINE_RGB, GL_COMBINE_ALPHA, GL_SRC0_RGB, GL_SRC1_RGB, GL_SRC2_RGB, GL_SRC0_ALPHA, GL_SRC1_ALPHA, GL_SRC2_ALPHA, GL_OPERAND0_RGB, GL_OPERAND1_RGB, GL_OPERAND2_RGB, GL_OPERAND0_ALPHA, GL_OPERAND1_ALPHA, GL_OPERAND2_ALPHA, GL_RGB_SCALE, GL_ALPHA_SCALE, or GL_COORD_REPLACE.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Set texture environment parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexGen">
      <MemberSignature Language="C#" Value="public static void TexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, ref double params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, float64 params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="params" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be one of GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the texture-coordinate generation function. Must be GL_TEXTURE_GEN_MODE.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Control the generation of texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexGen">
      <MemberSignature Language="C#" Value="public static void TexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, double* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, float64* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="params" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be one of GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the texture-coordinate generation function. Must be GL_TEXTURE_GEN_MODE.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Control the generation of texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexGen">
      <MemberSignature Language="C#" Value="public static void TexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, double[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, float64[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="params" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be one of GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the texture-coordinate generation function. Must be GL_TEXTURE_GEN_MODE.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Control the generation of texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexGen">
      <MemberSignature Language="C#" Value="public static void TexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, int param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, int32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="param" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be one of GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the texture-coordinate generation function. Must be GL_TEXTURE_GEN_MODE.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies a single-valued texture generation parameter, one of GL_OBJECT_LINEAR, GL_EYE_LINEAR, GL_SPHERE_MAP, GL_NORMAL_MAP, or GL_REFLECTION_MAP.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Control the generation of texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexGen">
      <MemberSignature Language="C#" Value="public static void TexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be one of GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the texture-coordinate generation function. Must be GL_TEXTURE_GEN_MODE.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Control the generation of texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexGen">
      <MemberSignature Language="C#" Value="public static void TexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be one of GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the texture-coordinate generation function. Must be GL_TEXTURE_GEN_MODE.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Control the generation of texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexGen">
      <MemberSignature Language="C#" Value="public static void TexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, float param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, float32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="param" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be one of GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the texture-coordinate generation function. Must be GL_TEXTURE_GEN_MODE.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies a single-valued texture generation parameter, one of GL_OBJECT_LINEAR, GL_EYE_LINEAR, GL_SPHERE_MAP, GL_NORMAL_MAP, or GL_REFLECTION_MAP.
            </para>
        </param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Control the generation of texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexGen">
      <MemberSignature Language="C#" Value="public static void TexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be one of GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the texture-coordinate generation function. Must be GL_TEXTURE_GEN_MODE.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Control the generation of texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexGen">
      <MemberSignature Language="C#" Value="public static void TexGen (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexGen(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="coord">
          <para>
            Specifies a texture coordinate. Must be one of GL_S, GL_T, GL_R, or GL_Q.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of the texture-coordinate generation function. Must be GL_TEXTURE_GEN_MODE.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Control the generation of texture coordinates
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexGend">
      <MemberSignature Language="C#" Value="public static void TexGend (MonoMac.OpenGL.TextureCoordName coord, MonoMac.OpenGL.TextureGenParameter pname, double param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexGend(valuetype MonoMac.OpenGL.TextureCoordName coord, valuetype MonoMac.OpenGL.TextureGenParameter pname, float64 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="MonoMac.OpenGL.TextureCoordName" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureGenParameter" />
        <Parameter Name="param" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="coord">To be added.</param>
        <param name="pname">To be added.</param>
        <param name="param">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexImage1D">
      <MemberSignature Language="C#" Value="public static void TexImage1D (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int border, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr pixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage1D(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 border, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D or GL_PROXY_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support texture images that are at least 1024 texels wide. The height of the 1D texture image is 1.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Specify a one-dimensional texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexImage1D&lt;T7&gt;">
      <MemberSignature Language="C#" Value="public static void TexImage1D&lt;T7&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int border, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T7 pixels) where T7 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage1D&lt;struct .ctor (class System.ValueType) T7&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 border, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T7 pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T7">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T7&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T7">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D or GL_PROXY_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support texture images that are at least 1024 texels wide. The height of the 1D texture image is 1.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Specify a one-dimensional texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexImage1D&lt;T7&gt;">
      <MemberSignature Language="C#" Value="public static void TexImage1D&lt;T7&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int border, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T7[,,] pixels) where T7 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage1D&lt;struct .ctor (class System.ValueType) T7&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 border, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T7[,,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T7">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T7[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T7">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D or GL_PROXY_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support texture images that are at least 1024 texels wide. The height of the 1D texture image is 1.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Specify a one-dimensional texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexImage1D&lt;T7&gt;">
      <MemberSignature Language="C#" Value="public static void TexImage1D&lt;T7&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int border, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T7[,] pixels) where T7 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage1D&lt;struct .ctor (class System.ValueType) T7&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 border, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T7[,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T7">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T7[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T7">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D or GL_PROXY_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support texture images that are at least 1024 texels wide. The height of the 1D texture image is 1.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Specify a one-dimensional texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexImage1D&lt;T7&gt;">
      <MemberSignature Language="C#" Value="public static void TexImage1D&lt;T7&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int border, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T7[] pixels) where T7 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage1D&lt;struct .ctor (class System.ValueType) T7&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 border, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T7[] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T7">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T7[]" />
      </Parameters>
      <Docs>
        <typeparam name="T7">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D or GL_PROXY_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support texture images that are at least 1024 texels wide. The height of the 1D texture image is 1.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Specify a one-dimensional texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexImage2D">
      <MemberSignature Language="C#" Value="public static void TexImage2D (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int border, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr pixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage2D(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 border, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_PROXY_TEXTURE_2D, GL_TEXTURE_1D_ARRAY, GL_PROXY_TEXTURE_1D_ARRAY, GL_TEXTURE_RECTANGLE, GL_PROXY_TEXTURE_RECTANGLE, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, or GL_PROXY_TEXTURE_CUBE_MAP.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image. If target is GL_TEXTURE_RECTANGLE or GL_PROXY_TEXTURE_RECTANGLE, level must be 0.
            </para>
        </param>
        <param name="internalformat">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support texture images that are at least 1024 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image, or the number of layers in a texture array, in the case of the GL_TEXTURE_1D_ARRAY and GL_PROXY_TEXTURE_1D_ARRAY targets. All implementations support 2D texture images that are at least 1024 texels high, and texture arrays that are at least 256 layers deep.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Specify a two-dimensional texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexImage2D&lt;T8&gt;">
      <MemberSignature Language="C#" Value="public static void TexImage2D&lt;T8&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int border, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T8 pixels) where T8 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage2D&lt;struct .ctor (class System.ValueType) T8&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 border, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T8 pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T8">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T8&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T8">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_PROXY_TEXTURE_2D, GL_TEXTURE_1D_ARRAY, GL_PROXY_TEXTURE_1D_ARRAY, GL_TEXTURE_RECTANGLE, GL_PROXY_TEXTURE_RECTANGLE, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, or GL_PROXY_TEXTURE_CUBE_MAP.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image. If target is GL_TEXTURE_RECTANGLE or GL_PROXY_TEXTURE_RECTANGLE, level must be 0.
            </para>
        </param>
        <param name="internalformat">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support texture images that are at least 1024 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image, or the number of layers in a texture array, in the case of the GL_TEXTURE_1D_ARRAY and GL_PROXY_TEXTURE_1D_ARRAY targets. All implementations support 2D texture images that are at least 1024 texels high, and texture arrays that are at least 256 layers deep.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Specify a two-dimensional texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexImage2D&lt;T8&gt;">
      <MemberSignature Language="C#" Value="public static void TexImage2D&lt;T8&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int border, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T8[,,] pixels) where T8 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage2D&lt;struct .ctor (class System.ValueType) T8&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 border, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T8[,,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T8">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T8[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T8">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_PROXY_TEXTURE_2D, GL_TEXTURE_1D_ARRAY, GL_PROXY_TEXTURE_1D_ARRAY, GL_TEXTURE_RECTANGLE, GL_PROXY_TEXTURE_RECTANGLE, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, or GL_PROXY_TEXTURE_CUBE_MAP.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image. If target is GL_TEXTURE_RECTANGLE or GL_PROXY_TEXTURE_RECTANGLE, level must be 0.
            </para>
        </param>
        <param name="internalformat">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support texture images that are at least 1024 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image, or the number of layers in a texture array, in the case of the GL_TEXTURE_1D_ARRAY and GL_PROXY_TEXTURE_1D_ARRAY targets. All implementations support 2D texture images that are at least 1024 texels high, and texture arrays that are at least 256 layers deep.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Specify a two-dimensional texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexImage2D&lt;T8&gt;">
      <MemberSignature Language="C#" Value="public static void TexImage2D&lt;T8&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int border, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T8[,] pixels) where T8 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage2D&lt;struct .ctor (class System.ValueType) T8&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 border, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T8[,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T8">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T8[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T8">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_PROXY_TEXTURE_2D, GL_TEXTURE_1D_ARRAY, GL_PROXY_TEXTURE_1D_ARRAY, GL_TEXTURE_RECTANGLE, GL_PROXY_TEXTURE_RECTANGLE, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, or GL_PROXY_TEXTURE_CUBE_MAP.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image. If target is GL_TEXTURE_RECTANGLE or GL_PROXY_TEXTURE_RECTANGLE, level must be 0.
            </para>
        </param>
        <param name="internalformat">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support texture images that are at least 1024 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image, or the number of layers in a texture array, in the case of the GL_TEXTURE_1D_ARRAY and GL_PROXY_TEXTURE_1D_ARRAY targets. All implementations support 2D texture images that are at least 1024 texels high, and texture arrays that are at least 256 layers deep.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Specify a two-dimensional texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexImage2D&lt;T8&gt;">
      <MemberSignature Language="C#" Value="public static void TexImage2D&lt;T8&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int border, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T8[] pixels) where T8 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage2D&lt;struct .ctor (class System.ValueType) T8&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 border, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T8[] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T8">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T8[]" />
      </Parameters>
      <Docs>
        <typeparam name="T8">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_PROXY_TEXTURE_2D, GL_TEXTURE_1D_ARRAY, GL_PROXY_TEXTURE_1D_ARRAY, GL_TEXTURE_RECTANGLE, GL_PROXY_TEXTURE_RECTANGLE, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, or GL_PROXY_TEXTURE_CUBE_MAP.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image. If target is GL_TEXTURE_RECTANGLE or GL_PROXY_TEXTURE_RECTANGLE, level must be 0.
            </para>
        </param>
        <param name="internalformat">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support texture images that are at least 1024 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image, or the number of layers in a texture array, in the case of the GL_TEXTURE_1D_ARRAY and GL_PROXY_TEXTURE_1D_ARRAY targets. All implementations support 2D texture images that are at least 1024 texels high, and texture arrays that are at least 256 layers deep.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.0]
            Specify a two-dimensional texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexImage3D">
      <MemberSignature Language="C#" Value="public static void TexImage3D (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int depth, int border, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr pixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage3D(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 depth, int32 border, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture. Must be one of GL_TEXTURE_3D, GL_PROXY_TEXTURE_3D, GL_TEXTURE_2D_ARRAY or GL_PROXY_TEXTURE_2D_ARRAY.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level is the n sup th mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support 3D texture images that are at least 16 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image. All implementations support 3D texture images that are at least 256 texels high.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture image, or the number of layers in a texture array. All implementations support 3D texture images that are at least 256 texels deep, and texture arrays that are at least 256 layers deep.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Specify a three-dimensional texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexImage3D&lt;T9&gt;">
      <MemberSignature Language="C#" Value="public static void TexImage3D&lt;T9&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int depth, int border, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T9 pixels) where T9 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage3D&lt;struct .ctor (class System.ValueType) T9&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 depth, int32 border, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T9 pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T9">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T9&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T9">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be one of GL_TEXTURE_3D, GL_PROXY_TEXTURE_3D, GL_TEXTURE_2D_ARRAY or GL_PROXY_TEXTURE_2D_ARRAY.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level is the n sup th mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support 3D texture images that are at least 16 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image. All implementations support 3D texture images that are at least 256 texels high.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture image, or the number of layers in a texture array. All implementations support 3D texture images that are at least 256 texels deep, and texture arrays that are at least 256 layers deep.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Specify a three-dimensional texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexImage3D&lt;T9&gt;">
      <MemberSignature Language="C#" Value="public static void TexImage3D&lt;T9&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int depth, int border, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T9[,,] pixels) where T9 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage3D&lt;struct .ctor (class System.ValueType) T9&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 depth, int32 border, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T9[,,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T9">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T9[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T9">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be one of GL_TEXTURE_3D, GL_PROXY_TEXTURE_3D, GL_TEXTURE_2D_ARRAY or GL_PROXY_TEXTURE_2D_ARRAY.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level is the n sup th mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support 3D texture images that are at least 16 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image. All implementations support 3D texture images that are at least 256 texels high.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture image, or the number of layers in a texture array. All implementations support 3D texture images that are at least 256 texels deep, and texture arrays that are at least 256 layers deep.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Specify a three-dimensional texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexImage3D&lt;T9&gt;">
      <MemberSignature Language="C#" Value="public static void TexImage3D&lt;T9&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int depth, int border, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T9[,] pixels) where T9 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage3D&lt;struct .ctor (class System.ValueType) T9&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 depth, int32 border, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T9[,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T9">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T9[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T9">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be one of GL_TEXTURE_3D, GL_PROXY_TEXTURE_3D, GL_TEXTURE_2D_ARRAY or GL_PROXY_TEXTURE_2D_ARRAY.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level is the n sup th mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support 3D texture images that are at least 16 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image. All implementations support 3D texture images that are at least 256 texels high.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture image, or the number of layers in a texture array. All implementations support 3D texture images that are at least 256 texels deep, and texture arrays that are at least 256 layers deep.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Specify a three-dimensional texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexImage3D&lt;T9&gt;">
      <MemberSignature Language="C#" Value="public static void TexImage3D&lt;T9&gt; (MonoMac.OpenGL.TextureTarget target, int level, MonoMac.OpenGL.PixelInternalFormat internalformat, int width, int height, int depth, int border, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T9[] pixels) where T9 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage3D&lt;struct .ctor (class System.ValueType) T9&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, valuetype MonoMac.OpenGL.PixelInternalFormat internalformat, int32 width, int32 height, int32 depth, int32 border, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T9[] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T9">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="MonoMac.OpenGL.PixelInternalFormat" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T9[]" />
      </Parameters>
      <Docs>
        <typeparam name="T9">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be one of GL_TEXTURE_3D, GL_PROXY_TEXTURE_3D, GL_TEXTURE_2D_ARRAY or GL_PROXY_TEXTURE_2D_ARRAY.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level is the n sup th mipmap reduction image.
            </para>
        </param>
        <param name="internalformat">To be added.</param>
        <param name="width">
          <para>
            Specifies the width of the texture image. All implementations support 3D texture images that are at least 16 texels wide.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture image. All implementations support 3D texture images that are at least 256 texels high.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture image, or the number of layers in a texture array. All implementations support 3D texture images that are at least 256 texels deep, and texture arrays that are at least 256 layers deep.
            </para>
        </param>
        <param name="border">
          <para>
            This value must be 0.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.2][deprecated: v3.1]
            Specify a three-dimensional texture image
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexParameter">
      <MemberSignature Language="C#" Value="public static void TexParameter (MonoMac.OpenGL.TextureTarget target, MonoMac.OpenGL.TextureParameterName pname, int param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexParameter(valuetype MonoMac.OpenGL.TextureTarget target, valuetype MonoMac.OpenGL.TextureParameterName pname, int32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureParameterName" />
        <Parameter Name="param" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture, which must be either GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, or GL_TEXTURE_CUBE_MAP.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a single-valued texture parameter. pname can be one of the following: GL_TEXTURE_BASE_LEVEL, GL_TEXTURE_COMPARE_FUNC, GL_TEXTURE_COMPARE_MODE, GL_TEXTURE_LOD_BIAS, GL_TEXTURE_MIN_FILTER, GL_TEXTURE_MAG_FILTER, GL_TEXTURE_MIN_LOD, GL_TEXTURE_MAX_LOD, GL_TEXTURE_MAX_LEVEL, GL_TEXTURE_SWIZZLE_R, GL_TEXTURE_SWIZZLE_G, GL_TEXTURE_SWIZZLE_B, GL_TEXTURE_SWIZZLE_A, GL_TEXTURE_WRAP_S, GL_TEXTURE_WRAP_T, or GL_TEXTURE_WRAP_R.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies the value of pname.
            </para>
        </param>
        <summary>[requires: v1.0]
            Set texture parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexParameter">
      <MemberSignature Language="C#" Value="public static void TexParameter (MonoMac.OpenGL.TextureTarget target, MonoMac.OpenGL.TextureParameterName pname, int* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexParameter(valuetype MonoMac.OpenGL.TextureTarget target, valuetype MonoMac.OpenGL.TextureParameterName pname, int32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureParameterName" />
        <Parameter Name="params" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture, which must be either GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, or GL_TEXTURE_CUBE_MAP.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a single-valued texture parameter. pname can be one of the following: GL_TEXTURE_BASE_LEVEL, GL_TEXTURE_COMPARE_FUNC, GL_TEXTURE_COMPARE_MODE, GL_TEXTURE_LOD_BIAS, GL_TEXTURE_MIN_FILTER, GL_TEXTURE_MAG_FILTER, GL_TEXTURE_MIN_LOD, GL_TEXTURE_MAX_LOD, GL_TEXTURE_MAX_LEVEL, GL_TEXTURE_SWIZZLE_R, GL_TEXTURE_SWIZZLE_G, GL_TEXTURE_SWIZZLE_B, GL_TEXTURE_SWIZZLE_A, GL_TEXTURE_WRAP_S, GL_TEXTURE_WRAP_T, or GL_TEXTURE_WRAP_R.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0]
            Set texture parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexParameter">
      <MemberSignature Language="C#" Value="public static void TexParameter (MonoMac.OpenGL.TextureTarget target, MonoMac.OpenGL.TextureParameterName pname, int[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexParameter(valuetype MonoMac.OpenGL.TextureTarget target, valuetype MonoMac.OpenGL.TextureParameterName pname, int32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureParameterName" />
        <Parameter Name="params" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture, which must be either GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, or GL_TEXTURE_CUBE_MAP.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a single-valued texture parameter. pname can be one of the following: GL_TEXTURE_BASE_LEVEL, GL_TEXTURE_COMPARE_FUNC, GL_TEXTURE_COMPARE_MODE, GL_TEXTURE_LOD_BIAS, GL_TEXTURE_MIN_FILTER, GL_TEXTURE_MAG_FILTER, GL_TEXTURE_MIN_LOD, GL_TEXTURE_MAX_LOD, GL_TEXTURE_MAX_LEVEL, GL_TEXTURE_SWIZZLE_R, GL_TEXTURE_SWIZZLE_G, GL_TEXTURE_SWIZZLE_B, GL_TEXTURE_SWIZZLE_A, GL_TEXTURE_WRAP_S, GL_TEXTURE_WRAP_T, or GL_TEXTURE_WRAP_R.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0]
            Set texture parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexParameter">
      <MemberSignature Language="C#" Value="public static void TexParameter (MonoMac.OpenGL.TextureTarget target, MonoMac.OpenGL.TextureParameterName pname, float param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexParameter(valuetype MonoMac.OpenGL.TextureTarget target, valuetype MonoMac.OpenGL.TextureParameterName pname, float32 param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureParameterName" />
        <Parameter Name="param" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture, which must be either GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, or GL_TEXTURE_CUBE_MAP.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a single-valued texture parameter. pname can be one of the following: GL_TEXTURE_BASE_LEVEL, GL_TEXTURE_COMPARE_FUNC, GL_TEXTURE_COMPARE_MODE, GL_TEXTURE_LOD_BIAS, GL_TEXTURE_MIN_FILTER, GL_TEXTURE_MAG_FILTER, GL_TEXTURE_MIN_LOD, GL_TEXTURE_MAX_LOD, GL_TEXTURE_MAX_LEVEL, GL_TEXTURE_SWIZZLE_R, GL_TEXTURE_SWIZZLE_G, GL_TEXTURE_SWIZZLE_B, GL_TEXTURE_SWIZZLE_A, GL_TEXTURE_WRAP_S, GL_TEXTURE_WRAP_T, or GL_TEXTURE_WRAP_R.
            </para>
        </param>
        <param name="param">
          <para>
            Specifies the value of pname.
            </para>
        </param>
        <summary>[requires: v1.0]
            Set texture parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexParameter">
      <MemberSignature Language="C#" Value="public static void TexParameter (MonoMac.OpenGL.TextureTarget target, MonoMac.OpenGL.TextureParameterName pname, float* params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexParameter(valuetype MonoMac.OpenGL.TextureTarget target, valuetype MonoMac.OpenGL.TextureParameterName pname, float32* params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureParameterName" />
        <Parameter Name="params" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture, which must be either GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, or GL_TEXTURE_CUBE_MAP.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a single-valued texture parameter. pname can be one of the following: GL_TEXTURE_BASE_LEVEL, GL_TEXTURE_COMPARE_FUNC, GL_TEXTURE_COMPARE_MODE, GL_TEXTURE_LOD_BIAS, GL_TEXTURE_MIN_FILTER, GL_TEXTURE_MAG_FILTER, GL_TEXTURE_MIN_LOD, GL_TEXTURE_MAX_LOD, GL_TEXTURE_MAX_LEVEL, GL_TEXTURE_SWIZZLE_R, GL_TEXTURE_SWIZZLE_G, GL_TEXTURE_SWIZZLE_B, GL_TEXTURE_SWIZZLE_A, GL_TEXTURE_WRAP_S, GL_TEXTURE_WRAP_T, or GL_TEXTURE_WRAP_R.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0]
            Set texture parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexParameter">
      <MemberSignature Language="C#" Value="public static void TexParameter (MonoMac.OpenGL.TextureTarget target, MonoMac.OpenGL.TextureParameterName pname, float[] params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexParameter(valuetype MonoMac.OpenGL.TextureTarget target, valuetype MonoMac.OpenGL.TextureParameterName pname, float32[] params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="pname" Type="MonoMac.OpenGL.TextureParameterName" />
        <Parameter Name="params" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture, which must be either GL_TEXTURE_1D, GL_TEXTURE_2D, GL_TEXTURE_3D, GL_TEXTURE_1D_ARRAY, GL_TEXTURE_2D_ARRAY, GL_TEXTURE_RECTANGLE, or GL_TEXTURE_CUBE_MAP.
            </para>
        </param>
        <param name="pname">
          <para>
            Specifies the symbolic name of a single-valued texture parameter. pname can be one of the following: GL_TEXTURE_BASE_LEVEL, GL_TEXTURE_COMPARE_FUNC, GL_TEXTURE_COMPARE_MODE, GL_TEXTURE_LOD_BIAS, GL_TEXTURE_MIN_FILTER, GL_TEXTURE_MAG_FILTER, GL_TEXTURE_MIN_LOD, GL_TEXTURE_MAX_LOD, GL_TEXTURE_MAX_LEVEL, GL_TEXTURE_SWIZZLE_R, GL_TEXTURE_SWIZZLE_G, GL_TEXTURE_SWIZZLE_B, GL_TEXTURE_SWIZZLE_A, GL_TEXTURE_WRAP_S, GL_TEXTURE_WRAP_T, or GL_TEXTURE_WRAP_R.
            </para>
        </param>
        <param name="params">To be added.</param>
        <summary>[requires: v1.0]
            Set texture parameters
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexSubImage1D">
      <MemberSignature Language="C#" Value="public static void TexSubImage1D (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int width, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr pixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexSubImage1D(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.1]
            Specify a one-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexSubImage1D&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void TexSubImage1D&lt;T6&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int width, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T6 pixels) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexSubImage1D&lt;struct .ctor (class System.ValueType) T6&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T6 pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T6&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.1]
            Specify a one-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexSubImage1D&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void TexSubImage1D&lt;T6&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int width, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T6[,,] pixels) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexSubImage1D&lt;struct .ctor (class System.ValueType) T6&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T6[,,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T6[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.1]
            Specify a one-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexSubImage1D&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void TexSubImage1D&lt;T6&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int width, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T6[,] pixels) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexSubImage1D&lt;struct .ctor (class System.ValueType) T6&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T6[,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T6[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.1]
            Specify a one-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexSubImage1D&lt;T6&gt;">
      <MemberSignature Language="C#" Value="public static void TexSubImage1D&lt;T6&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int width, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T6[] pixels) where T6 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexSubImage1D&lt;struct .ctor (class System.ValueType) T6&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 width, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T6[] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T6">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T6[]" />
      </Parameters>
      <Docs>
        <typeparam name="T6">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_1D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.1]
            Specify a one-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexSubImage2D">
      <MemberSignature Language="C#" Value="public static void TexSubImage2D (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr pixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexSubImage2D(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, or GL_TEXTURE_CUBE_MAP_NEGATIVE_Z.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.1]
            Specify a two-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexSubImage2D&lt;T8&gt;">
      <MemberSignature Language="C#" Value="public static void TexSubImage2D&lt;T8&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T8 pixels) where T8 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexSubImage2D&lt;struct .ctor (class System.ValueType) T8&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T8 pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T8">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T8&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T8">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, or GL_TEXTURE_CUBE_MAP_NEGATIVE_Z.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.1]
            Specify a two-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexSubImage2D&lt;T8&gt;">
      <MemberSignature Language="C#" Value="public static void TexSubImage2D&lt;T8&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T8[,,] pixels) where T8 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexSubImage2D&lt;struct .ctor (class System.ValueType) T8&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T8[,,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T8">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T8[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T8">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, or GL_TEXTURE_CUBE_MAP_NEGATIVE_Z.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.1]
            Specify a two-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexSubImage2D&lt;T8&gt;">
      <MemberSignature Language="C#" Value="public static void TexSubImage2D&lt;T8&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T8[,] pixels) where T8 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexSubImage2D&lt;struct .ctor (class System.ValueType) T8&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T8[,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T8">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T8[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T8">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, or GL_TEXTURE_CUBE_MAP_NEGATIVE_Z.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.1]
            Specify a two-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexSubImage2D&lt;T8&gt;">
      <MemberSignature Language="C#" Value="public static void TexSubImage2D&lt;T8&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int width, int height, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T8[] pixels) where T8 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexSubImage2D&lt;struct .ctor (class System.ValueType) T8&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 width, int32 height, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T8[] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T8">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T8[]" />
      </Parameters>
      <Docs>
        <typeparam name="T8">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_2D, GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, or GL_TEXTURE_CUBE_MAP_NEGATIVE_Z.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.1]
            Specify a two-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexSubImage3D">
      <MemberSignature Language="C#" Value="public static void TexSubImage3D (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, IntPtr pixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexSubImage3D(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 zoffset, int32 width, int32 height, int32 depth, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, native int pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="zoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_3D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="zoffset">
          <para>
            Specifies a texel offset in the z direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.2]
            Specify a three-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexSubImage3D&lt;T10&gt;">
      <MemberSignature Language="C#" Value="public static void TexSubImage3D&lt;T10&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, out T10 pixels) where T10 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexSubImage3D&lt;struct .ctor (class System.ValueType) T10&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 zoffset, int32 width, int32 height, int32 depth, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T10 pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T10">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="zoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T10&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T10">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_3D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="zoffset">
          <para>
            Specifies a texel offset in the z direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.2]
            Specify a three-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexSubImage3D&lt;T10&gt;">
      <MemberSignature Language="C#" Value="public static void TexSubImage3D&lt;T10&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T10[,,] pixels) where T10 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexSubImage3D&lt;struct .ctor (class System.ValueType) T10&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 zoffset, int32 width, int32 height, int32 depth, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T10[,,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T10">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="zoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T10[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T10">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_3D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="zoffset">
          <para>
            Specifies a texel offset in the z direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.2]
            Specify a three-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexSubImage3D&lt;T10&gt;">
      <MemberSignature Language="C#" Value="public static void TexSubImage3D&lt;T10&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T10[,] pixels) where T10 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexSubImage3D&lt;struct .ctor (class System.ValueType) T10&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 zoffset, int32 width, int32 height, int32 depth, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T10[,] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T10">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="zoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T10[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T10">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_3D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="zoffset">
          <para>
            Specifies a texel offset in the z direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.2]
            Specify a three-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TexSubImage3D&lt;T10&gt;">
      <MemberSignature Language="C#" Value="public static void TexSubImage3D&lt;T10&gt; (MonoMac.OpenGL.TextureTarget target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, MonoMac.OpenGL.PixelFormat format, MonoMac.OpenGL.PixelType type, T10[] pixels) where T10 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexSubImage3D&lt;struct .ctor (class System.ValueType) T10&gt;(valuetype MonoMac.OpenGL.TextureTarget target, int32 level, int32 xoffset, int32 yoffset, int32 zoffset, int32 width, int32 height, int32 depth, valuetype MonoMac.OpenGL.PixelFormat format, valuetype MonoMac.OpenGL.PixelType type, !!T10[] pixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T10">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.TextureTarget" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="zoffset" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="depth" Type="System.Int32" />
        <Parameter Name="format" Type="MonoMac.OpenGL.PixelFormat" />
        <Parameter Name="type" Type="MonoMac.OpenGL.PixelType" />
        <Parameter Name="pixels" Type="T10[]" />
      </Parameters>
      <Docs>
        <typeparam name="T10">To be added.</typeparam>
        <param name="target">
          <para>
            Specifies the target texture. Must be GL_TEXTURE_3D.
            </para>
        </param>
        <param name="level">
          <para>
            Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image.
            </para>
        </param>
        <param name="xoffset">
          <para>
            Specifies a texel offset in the x direction within the texture array.
            </para>
        </param>
        <param name="yoffset">
          <para>
            Specifies a texel offset in the y direction within the texture array.
            </para>
        </param>
        <param name="zoffset">
          <para>
            Specifies a texel offset in the z direction within the texture array.
            </para>
        </param>
        <param name="width">
          <para>
            Specifies the width of the texture subimage.
            </para>
        </param>
        <param name="height">
          <para>
            Specifies the height of the texture subimage.
            </para>
        </param>
        <param name="depth">
          <para>
            Specifies the depth of the texture subimage.
            </para>
        </param>
        <param name="format">
          <para>
            Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, and GL_BGRA.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV.
            </para>
        </param>
        <param name="pixels">To be added.</param>
        <summary>[requires: v1.2]
            Specify a three-dimensional texture subimage
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public static void Translate (MonoMac.OpenGL.Vector3 trans);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Translate(valuetype MonoMac.OpenGL.Vector3 trans) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trans" Type="MonoMac.OpenGL.Vector3" />
      </Parameters>
      <Docs>
        <param name="trans">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public static void Translate (MonoMac.OpenGL.Vector3d trans);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Translate(valuetype MonoMac.OpenGL.Vector3d trans) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trans" Type="MonoMac.OpenGL.Vector3d" />
      </Parameters>
      <Docs>
        <param name="trans">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public static void Translate (double x, double y, double z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Translate(float64 x, float64 y, float64 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="z" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the x, y, and z coordinates of a translation vector.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Multiply the current matrix by a translation matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public static void Translate (float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Translate(float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the x, y, and z coordinates of a translation vector.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Multiply the current matrix by a translation matrix
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform1">
      <MemberSignature Language="C#" Value="public static void Uniform1 (int location, int v0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform1(int32 location, int32 v0) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="v0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="v0">
          <para>
            Specifies the new values to be used for the specified uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform1">
      <MemberSignature Language="C#" Value="public static void Uniform1 (int location, float v0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform1(int32 location, float32 v0) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="v0" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="v0">
          <para>
            Specifies the new values to be used for the specified uniform variable.
            </para>
        </param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform1">
      <MemberSignature Language="C#" Value="public static void Uniform1 (int location, int count, ref int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform1(int32 location, int32 count, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform1">
      <MemberSignature Language="C#" Value="public static void Uniform1 (int location, int count, int* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform1(int32 location, int32 count, int32* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform1">
      <MemberSignature Language="C#" Value="public static void Uniform1 (int location, int count, int[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform1(int32 location, int32 count, int32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform1">
      <MemberSignature Language="C#" Value="public static void Uniform1 (int location, int count, ref float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform1(int32 location, int32 count, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform1">
      <MemberSignature Language="C#" Value="public static void Uniform1 (int location, int count, float* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform1(int32 location, int32 count, float32* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform1">
      <MemberSignature Language="C#" Value="public static void Uniform1 (int location, int count, float[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform1(int32 location, int32 count, float32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform2">
      <MemberSignature Language="C#" Value="public static void Uniform2 (int location, MonoMac.OpenGL.Vector2 vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform2(int32 location, valuetype MonoMac.OpenGL.Vector2 vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform2">
      <MemberSignature Language="C#" Value="public static void Uniform2 (int location, ref MonoMac.OpenGL.Vector2 vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform2(int32 location, valuetype MonoMac.OpenGL.Vector2 vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform2">
      <MemberSignature Language="C#" Value="public static void Uniform2 (int location, int v0, int v1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform2(int32 location, int32 v0, int32 v1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="v0" Type="System.Int32" />
        <Parameter Name="v1" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="v0">
          <para>
            Specifies the new values to be used for the specified uniform variable.
            </para>
        </param>
        <param name="v1">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform2">
      <MemberSignature Language="C#" Value="public static void Uniform2 (int location, int count, int* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform2(int32 location, int32 count, int32* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform2">
      <MemberSignature Language="C#" Value="public static void Uniform2 (int location, int count, int[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform2(int32 location, int32 count, int32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform2">
      <MemberSignature Language="C#" Value="public static void Uniform2 (int location, int count, ref float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform2(int32 location, int32 count, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform2">
      <MemberSignature Language="C#" Value="public static void Uniform2 (int location, int count, float* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform2(int32 location, int32 count, float32* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform2">
      <MemberSignature Language="C#" Value="public static void Uniform2 (int location, int count, float[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform2(int32 location, int32 count, float32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform2">
      <MemberSignature Language="C#" Value="public static void Uniform2 (int location, float v0, float v1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform2(int32 location, float32 v0, float32 v1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="v0" Type="System.Single" />
        <Parameter Name="v1" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="v0">
          <para>
            Specifies the new values to be used for the specified uniform variable.
            </para>
        </param>
        <param name="v1">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform3">
      <MemberSignature Language="C#" Value="public static void Uniform3 (int location, MonoMac.OpenGL.Vector3 vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform3(int32 location, valuetype MonoMac.OpenGL.Vector3 vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector3" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform3">
      <MemberSignature Language="C#" Value="public static void Uniform3 (int location, ref MonoMac.OpenGL.Vector3 vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform3(int32 location, valuetype MonoMac.OpenGL.Vector3 vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector3&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform3">
      <MemberSignature Language="C#" Value="public static void Uniform3 (int location, int count, ref int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform3(int32 location, int32 count, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform3">
      <MemberSignature Language="C#" Value="public static void Uniform3 (int location, int count, int* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform3(int32 location, int32 count, int32* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform3">
      <MemberSignature Language="C#" Value="public static void Uniform3 (int location, int count, int[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform3(int32 location, int32 count, int32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform3">
      <MemberSignature Language="C#" Value="public static void Uniform3 (int location, int count, ref float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform3(int32 location, int32 count, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform3">
      <MemberSignature Language="C#" Value="public static void Uniform3 (int location, int count, float* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform3(int32 location, int32 count, float32* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform3">
      <MemberSignature Language="C#" Value="public static void Uniform3 (int location, int count, float[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform3(int32 location, int32 count, float32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform3">
      <MemberSignature Language="C#" Value="public static void Uniform3 (int location, int v0, int v1, int v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform3(int32 location, int32 v0, int32 v1, int32 v2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="v0" Type="System.Int32" />
        <Parameter Name="v1" Type="System.Int32" />
        <Parameter Name="v2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="v0">
          <para>
            Specifies the new values to be used for the specified uniform variable.
            </para>
        </param>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform3">
      <MemberSignature Language="C#" Value="public static void Uniform3 (int location, float v0, float v1, float v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform3(int32 location, float32 v0, float32 v1, float32 v2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="v0" Type="System.Single" />
        <Parameter Name="v1" Type="System.Single" />
        <Parameter Name="v2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="v0">
          <para>
            Specifies the new values to be used for the specified uniform variable.
            </para>
        </param>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform4">
      <MemberSignature Language="C#" Value="public static void Uniform4 (int location, MonoMac.OpenGL.Color4 color);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform4(int32 location, valuetype MonoMac.OpenGL.Color4 color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="color" Type="MonoMac.OpenGL.Color4" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform4">
      <MemberSignature Language="C#" Value="public static void Uniform4 (int location, MonoMac.OpenGL.Quaternion quaternion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform4(int32 location, valuetype MonoMac.OpenGL.Quaternion quaternion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="quaternion" Type="MonoMac.OpenGL.Quaternion" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="quaternion">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform4">
      <MemberSignature Language="C#" Value="public static void Uniform4 (int location, MonoMac.OpenGL.Vector4 vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform4(int32 location, valuetype MonoMac.OpenGL.Vector4 vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector4" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform4">
      <MemberSignature Language="C#" Value="public static void Uniform4 (int location, ref MonoMac.OpenGL.Vector4 vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform4(int32 location, valuetype MonoMac.OpenGL.Vector4 vector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector4&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="vector">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform4">
      <MemberSignature Language="C#" Value="public static void Uniform4 (int location, int count, ref int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform4(int32 location, int32 count, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform4">
      <MemberSignature Language="C#" Value="public static void Uniform4 (int location, int count, int* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform4(int32 location, int32 count, int32* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform4">
      <MemberSignature Language="C#" Value="public static void Uniform4 (int location, int count, int[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform4(int32 location, int32 count, int32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform4">
      <MemberSignature Language="C#" Value="public static void Uniform4 (int location, int count, ref float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform4(int32 location, int32 count, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform4">
      <MemberSignature Language="C#" Value="public static void Uniform4 (int location, int count, float* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform4(int32 location, int32 count, float32* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform4">
      <MemberSignature Language="C#" Value="public static void Uniform4 (int location, int count, float[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform4(int32 location, int32 count, float32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="count">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform4">
      <MemberSignature Language="C#" Value="public static void Uniform4 (int location, int v0, int v1, int v2, int v3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform4(int32 location, int32 v0, int32 v1, int32 v2, int32 v3) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="v0" Type="System.Int32" />
        <Parameter Name="v1" Type="System.Int32" />
        <Parameter Name="v2" Type="System.Int32" />
        <Parameter Name="v3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="v0">
          <para>
            Specifies the new values to be used for the specified uniform variable.
            </para>
        </param>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <param name="v3">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uniform4">
      <MemberSignature Language="C#" Value="public static void Uniform4 (int location, float v0, float v1, float v2, float v3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uniform4(int32 location, float32 v0, float32 v1, float32 v2, float32 v3) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="v0" Type="System.Single" />
        <Parameter Name="v1" Type="System.Single" />
        <Parameter Name="v2" Type="System.Single" />
        <Parameter Name="v3" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="location">
          <para>
            Specifies the location of the uniform variable to be modified.
            </para>
        </param>
        <param name="v0">
          <para>
            Specifies the new values to be used for the specified uniform variable.
            </para>
        </param>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <param name="v3">To be added.</param>
        <summary>[requires: v2.0]
            Specify the value of a uniform variable for the current program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix2">
      <MemberSignature Language="C#" Value="public static void UniformMatrix2 (int location, int count, bool transpose, ref float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix2(int32 location, int32 count, bool transpose, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix2">
      <MemberSignature Language="C#" Value="public static void UniformMatrix2 (int location, int count, bool transpose, float* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix2(int32 location, int32 count, bool transpose, float32* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix2">
      <MemberSignature Language="C#" Value="public static void UniformMatrix2 (int location, int count, bool transpose, float[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix2(int32 location, int32 count, bool transpose, float32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix2x4">
      <MemberSignature Language="C#" Value="public static void UniformMatrix2x4 (int location, int count, bool transpose, ref float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix2x4(int32 location, int32 count, bool transpose, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix2x4">
      <MemberSignature Language="C#" Value="public static void UniformMatrix2x4 (int location, int count, bool transpose, float* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix2x4(int32 location, int32 count, bool transpose, float32* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix2x4">
      <MemberSignature Language="C#" Value="public static void UniformMatrix2x4 (int location, int count, bool transpose, float[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix2x4(int32 location, int32 count, bool transpose, float32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix3">
      <MemberSignature Language="C#" Value="public static void UniformMatrix3 (int location, int count, bool transpose, ref float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix3(int32 location, int32 count, bool transpose, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix3">
      <MemberSignature Language="C#" Value="public static void UniformMatrix3 (int location, int count, bool transpose, float* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix3(int32 location, int32 count, bool transpose, float32* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix3">
      <MemberSignature Language="C#" Value="public static void UniformMatrix3 (int location, int count, bool transpose, float[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix3(int32 location, int32 count, bool transpose, float32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix3x2">
      <MemberSignature Language="C#" Value="public static void UniformMatrix3x2 (int location, int count, bool transpose, ref float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix3x2(int32 location, int32 count, bool transpose, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix3x2">
      <MemberSignature Language="C#" Value="public static void UniformMatrix3x2 (int location, int count, bool transpose, float* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix3x2(int32 location, int32 count, bool transpose, float32* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix3x2">
      <MemberSignature Language="C#" Value="public static void UniformMatrix3x2 (int location, int count, bool transpose, float[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix3x2(int32 location, int32 count, bool transpose, float32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix3x4">
      <MemberSignature Language="C#" Value="public static void UniformMatrix3x4 (int location, int count, bool transpose, ref float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix3x4(int32 location, int32 count, bool transpose, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix3x4">
      <MemberSignature Language="C#" Value="public static void UniformMatrix3x4 (int location, int count, bool transpose, float[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix3x4(int32 location, int32 count, bool transpose, float32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix4">
      <MemberSignature Language="C#" Value="public static void UniformMatrix4 (int location, bool transpose, ref MonoMac.OpenGL.Matrix4 matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix4(int32 location, bool transpose, valuetype MonoMac.OpenGL.Matrix4 matrix) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="matrix" Type="MonoMac.OpenGL.Matrix4&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="matrix">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix4">
      <MemberSignature Language="C#" Value="public static void UniformMatrix4 (int location, int count, bool transpose, double* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix4(int32 location, int32 count, bool transpose, float64* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v1.2 and ARB_gpu_shader_fp64]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix4">
      <MemberSignature Language="C#" Value="public static void UniformMatrix4 (int location, int count, bool transpose, ref float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix4(int32 location, int32 count, bool transpose, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix4">
      <MemberSignature Language="C#" Value="public static void UniformMatrix4 (int location, int count, bool transpose, float* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix4(int32 location, int32 count, bool transpose, float32* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix4">
      <MemberSignature Language="C#" Value="public static void UniformMatrix4 (int location, int count, bool transpose, float[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix4(int32 location, int32 count, bool transpose, float32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.0]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix4x2">
      <MemberSignature Language="C#" Value="public static void UniformMatrix4x2 (int location, int count, bool transpose, ref float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix4x2(int32 location, int32 count, bool transpose, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix4x2">
      <MemberSignature Language="C#" Value="public static void UniformMatrix4x2 (int location, int count, bool transpose, float* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix4x2(int32 location, int32 count, bool transpose, float32* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix4x2">
      <MemberSignature Language="C#" Value="public static void UniformMatrix4x2 (int location, int count, bool transpose, float[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix4x2(int32 location, int32 count, bool transpose, float32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix4x3">
      <MemberSignature Language="C#" Value="public static void UniformMatrix4x3 (int location, int count, bool transpose, ref float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix4x3(int32 location, int32 count, bool transpose, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix4x3">
      <MemberSignature Language="C#" Value="public static void UniformMatrix4x3 (int location, int count, bool transpose, float* value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix4x3(int32 location, int32 count, bool transpose, float32* value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniformMatrix4x3">
      <MemberSignature Language="C#" Value="public static void UniformMatrix4x3 (int location, int count, bool transpose, float[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UniformMatrix4x3(int32 location, int32 count, bool transpose, float32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="count">To be added.</param>
        <param name="transpose">To be added.</param>
        <param name="value">To be added.</param>
        <summary>[requires: v2.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnmapBuffer">
      <MemberSignature Language="C#" Value="public static bool UnmapBuffer (MonoMac.OpenGL.BufferTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool UnmapBuffer(valuetype MonoMac.OpenGL.BufferTarget target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="MonoMac.OpenGL.BufferTarget" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>[requires: v1.5]</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseProgram">
      <MemberSignature Language="C#" Value="public static void UseProgram (int program);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UseProgram(int32 program) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the handle of the program object whose executables are to be used as part of current rendering state.
            </para>
        </param>
        <summary>[requires: v2.0]
            Installs a program object as part of current rendering state
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseProgram">
      <MemberSignature Language="C#" Value="public static void UseProgram (uint program);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UseProgram(unsigned int32 program) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the handle of the program object whose executables are to be used as part of current rendering state.
            </para>
        </param>
        <summary>[requires: v2.0]
            Installs a program object as part of current rendering state
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateProgram">
      <MemberSignature Language="C#" Value="public static void ValidateProgram (int program);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateProgram(int32 program) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the handle of the program object to be validated.
            </para>
        </param>
        <summary>[requires: v2.0]
            Validates a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateProgram">
      <MemberSignature Language="C#" Value="public static void ValidateProgram (uint program);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateProgram(unsigned int32 program) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="program" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="program">
          <para>
            Specifies the handle of the program object to be validated.
            </para>
        </param>
        <summary>[requires: v2.0]
            Validates a program object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (MonoMac.OpenGL.Vector2 v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(valuetype MonoMac.OpenGL.Vector2 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (MonoMac.OpenGL.Vector2d v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(valuetype MonoMac.OpenGL.Vector2d v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(float64 x, float64 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify x, y, z, and w coordinates of a vertex. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="y">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (short x, short y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(int16 x, int16 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int16" />
        <Parameter Name="y" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify x, y, z, and w coordinates of a vertex. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="y">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(int32 x, int32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify x, y, z, and w coordinates of a vertex. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="y">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex2">
      <MemberSignature Language="C#" Value="public static void Vertex2 (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex2(float32 x, float32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify x, y, z, and w coordinates of a vertex. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="y">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (MonoMac.OpenGL.Vector3 v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(valuetype MonoMac.OpenGL.Vector3 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector3" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (MonoMac.OpenGL.Vector3d v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(valuetype MonoMac.OpenGL.Vector3d v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector3d" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (double x, double y, double z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(float64 x, float64 y, float64 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="z" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify x, y, z, and w coordinates of a vertex. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (short x, short y, short z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(int16 x, int16 y, int16 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int16" />
        <Parameter Name="y" Type="System.Int16" />
        <Parameter Name="z" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify x, y, z, and w coordinates of a vertex. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (int x, int y, int z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(int32 x, int32 y, int32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="z" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify x, y, z, and w coordinates of a vertex. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex3">
      <MemberSignature Language="C#" Value="public static void Vertex3 (float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex3(float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify x, y, z, and w coordinates of a vertex. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (MonoMac.OpenGL.Vector4 v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(valuetype MonoMac.OpenGL.Vector4 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector4" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (MonoMac.OpenGL.Vector4d v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(valuetype MonoMac.OpenGL.Vector4d v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector4d" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (double x, double y, double z, double w);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(float64 x, float64 y, float64 z, float64 w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="z" Type="System.Double" />
        <Parameter Name="w" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify x, y, z, and w coordinates of a vertex. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <param name="w">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (short x, short y, short z, short w);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(int16 x, int16 y, int16 z, int16 w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int16" />
        <Parameter Name="y" Type="System.Int16" />
        <Parameter Name="z" Type="System.Int16" />
        <Parameter Name="w" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify x, y, z, and w coordinates of a vertex. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <param name="w">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (int x, int y, int z, int w);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(int32 x, int32 y, int32 z, int32 w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="z" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify x, y, z, and w coordinates of a vertex. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <param name="w">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertex4">
      <MemberSignature Language="C#" Value="public static void Vertex4 (float x, float y, float z, float w);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Vertex4(float32 x, float32 y, float32 z, float32 w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
        <Parameter Name="w" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify x, y, z, and w coordinates of a vertex. Not all parameters are present in all forms of the command.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <param name="w">To be added.</param>
        <summary>[requires: v1.0][deprecated: v3.1]
            Specify a vertex
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib1">
      <MemberSignature Language="C#" Value="public static void VertexAttrib1 (int index, double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib1(int32 index, float64 x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib1">
      <MemberSignature Language="C#" Value="public static void VertexAttrib1 (int index, double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib1(int32 index, float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib1">
      <MemberSignature Language="C#" Value="public static void VertexAttrib1 (int index, short x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib1(int32 index, int16 x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib1">
      <MemberSignature Language="C#" Value="public static void VertexAttrib1 (int index, short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib1(int32 index, int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib1">
      <MemberSignature Language="C#" Value="public static void VertexAttrib1 (int index, float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib1(int32 index, float32 x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib1">
      <MemberSignature Language="C#" Value="public static void VertexAttrib1 (int index, float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib1(int32 index, float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib1">
      <MemberSignature Language="C#" Value="public static void VertexAttrib1 (uint index, double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib1(unsigned int32 index, float64 x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib1">
      <MemberSignature Language="C#" Value="public static void VertexAttrib1 (uint index, double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib1(unsigned int32 index, float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib1">
      <MemberSignature Language="C#" Value="public static void VertexAttrib1 (uint index, short x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib1(unsigned int32 index, int16 x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="x" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib1">
      <MemberSignature Language="C#" Value="public static void VertexAttrib1 (uint index, short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib1(unsigned int32 index, int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib1">
      <MemberSignature Language="C#" Value="public static void VertexAttrib1 (uint index, float x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib1(unsigned int32 index, float32 x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib1">
      <MemberSignature Language="C#" Value="public static void VertexAttrib1 (uint index, float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib1(unsigned int32 index, float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (int index, MonoMac.OpenGL.Vector2 v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(int32 index, valuetype MonoMac.OpenGL.Vector2 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (int index, ref MonoMac.OpenGL.Vector2 v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(int32 index, valuetype MonoMac.OpenGL.Vector2 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector2&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (int index, MonoMac.OpenGL.Vector2d v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(int32 index, valuetype MonoMac.OpenGL.Vector2d v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (int index, ref MonoMac.OpenGL.Vector2d v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(int32 index, valuetype MonoMac.OpenGL.Vector2d v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (int index, ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(int32 index, float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (int index, double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(int32 index, float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (int index, double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(int32 index, float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (int index, ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(int32 index, int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (int index, short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(int32 index, int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (int index, short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(int32 index, int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (int index, ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(int32 index, float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (int index, float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(int32 index, float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (int index, float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(int32 index, float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (uint index, ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(unsigned int32 index, float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (uint index, double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(unsigned int32 index, float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (uint index, double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(unsigned int32 index, float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (uint index, ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(unsigned int32 index, int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (uint index, short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(unsigned int32 index, int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (uint index, short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(unsigned int32 index, int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (uint index, ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(unsigned int32 index, float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (uint index, float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(unsigned int32 index, float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (uint index, float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(unsigned int32 index, float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (int index, double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(int32 index, float64 x, float64 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (int index, short x, short y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(int32 index, int16 x, int16 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int16" />
        <Parameter Name="y" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (int index, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(int32 index, float32 x, float32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (uint index, double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(unsigned int32 index, float64 x, float64 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (uint index, short x, short y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(unsigned int32 index, int16 x, int16 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="x" Type="System.Int16" />
        <Parameter Name="y" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib2">
      <MemberSignature Language="C#" Value="public static void VertexAttrib2 (uint index, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib2(unsigned int32 index, float32 x, float32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (int index, MonoMac.OpenGL.Vector3 v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(int32 index, valuetype MonoMac.OpenGL.Vector3 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector3" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (int index, ref MonoMac.OpenGL.Vector3 v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(int32 index, valuetype MonoMac.OpenGL.Vector3 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector3&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (int index, MonoMac.OpenGL.Vector3d v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(int32 index, valuetype MonoMac.OpenGL.Vector3d v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector3d" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (int index, ref MonoMac.OpenGL.Vector3d v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(int32 index, valuetype MonoMac.OpenGL.Vector3d v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector3d&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (int index, ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(int32 index, float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (int index, double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(int32 index, float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (int index, double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(int32 index, float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (int index, ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(int32 index, int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (int index, short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(int32 index, int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (int index, short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(int32 index, int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (int index, ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(int32 index, float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (int index, float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(int32 index, float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (int index, float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(int32 index, float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (uint index, ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(unsigned int32 index, float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (uint index, double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(unsigned int32 index, float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (uint index, double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(unsigned int32 index, float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (uint index, ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(unsigned int32 index, int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (uint index, short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(unsigned int32 index, int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (uint index, short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(unsigned int32 index, int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (uint index, ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(unsigned int32 index, float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (uint index, float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(unsigned int32 index, float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (uint index, float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(unsigned int32 index, float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (int index, double x, double y, double z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(int32 index, float64 x, float64 y, float64 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="z" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (int index, short x, short y, short z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(int32 index, int16 x, int16 y, int16 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int16" />
        <Parameter Name="y" Type="System.Int16" />
        <Parameter Name="z" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (int index, float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(int32 index, float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (uint index, double x, double y, double z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(unsigned int32 index, float64 x, float64 y, float64 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="z" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (uint index, short x, short y, short z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(unsigned int32 index, int16 x, int16 y, int16 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="x" Type="System.Int16" />
        <Parameter Name="y" Type="System.Int16" />
        <Parameter Name="z" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib3">
      <MemberSignature Language="C#" Value="public static void VertexAttrib3 (uint index, float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib3(unsigned int32 index, float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, MonoMac.OpenGL.Vector4 v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, valuetype MonoMac.OpenGL.Vector4 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector4" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, ref MonoMac.OpenGL.Vector4 v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, valuetype MonoMac.OpenGL.Vector4 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector4&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, MonoMac.OpenGL.Vector4d v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, valuetype MonoMac.OpenGL.Vector4d v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector4d" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, ref MonoMac.OpenGL.Vector4d v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, valuetype MonoMac.OpenGL.Vector4d v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="MonoMac.OpenGL.Vector4d&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, ref byte v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, unsigned int8 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Byte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, byte* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, unsigned int8* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, byte[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, unsigned int8[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, ref byte v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, unsigned int8 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Byte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, byte* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, unsigned int8* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, byte[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, unsigned int8[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, ref sbyte v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, int8 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.SByte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, sbyte* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, int8* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, sbyte[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, int8[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.SByte[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, ref ushort v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, unsigned int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.UInt16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, ushort* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, unsigned int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, ushort[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, unsigned int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.UInt16[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, ref uint v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, unsigned int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.UInt32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, uint* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, unsigned int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, uint[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, unsigned int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, double x, double y, double z, double w);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, float64 x, float64 y, float64 z, float64 w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="z" Type="System.Double" />
        <Parameter Name="w" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <param name="w">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, short x, short y, short z, short w);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, int16 x, int16 y, int16 z, int16 w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int16" />
        <Parameter Name="y" Type="System.Int16" />
        <Parameter Name="z" Type="System.Int16" />
        <Parameter Name="w" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <param name="w">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (int index, float x, float y, float z, float w);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(int32 index, float32 x, float32 y, float32 z, float32 w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
        <Parameter Name="w" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <param name="w">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, double x, double y, double z, double w);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, float64 x, float64 y, float64 z, float64 w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="z" Type="System.Double" />
        <Parameter Name="w" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <param name="w">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, short x, short y, short z, short w);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, int16 x, int16 y, int16 z, int16 w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="x" Type="System.Int16" />
        <Parameter Name="y" Type="System.Int16" />
        <Parameter Name="z" Type="System.Int16" />
        <Parameter Name="w" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <param name="w">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4 (uint index, float x, float y, float z, float w);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4(unsigned int32 index, float32 x, float32 y, float32 z, float32 w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
        <Parameter Name="w" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <param name="w">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]
            Specifies the value of a generic vertex attribute
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (int index, ref byte v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(int32 index, unsigned int8 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Byte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (int index, byte* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(int32 index, unsigned int8* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (int index, byte[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(int32 index, unsigned int8[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (int index, ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(int32 index, int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (int index, short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(int32 index, int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (int index, short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(int32 index, int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (int index, ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(int32 index, int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (int index, int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(int32 index, int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (int index, int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(int32 index, int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, ref byte v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, unsigned int8 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Byte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, byte* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, unsigned int8* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Byte*" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, byte[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, unsigned int8[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, ref sbyte v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, int8 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.SByte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, sbyte* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, int8* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, sbyte[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, int8[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.SByte[]" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, ref ushort v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, unsigned int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.UInt16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, ushort* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, unsigned int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.UInt16*" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, ushort[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, unsigned int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.UInt16[]" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, ref uint v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, unsigned int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.UInt32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, uint* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, unsigned int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.UInt32*" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, uint[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, unsigned int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="v" Type="System.UInt32[]" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="v">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (int index, byte x, byte y, byte z, byte w);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(int32 index, unsigned int8 x, unsigned int8 y, unsigned int8 z, unsigned int8 w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="x" Type="System.Byte" />
        <Parameter Name="y" Type="System.Byte" />
        <Parameter Name="z" Type="System.Byte" />
        <Parameter Name="w" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <param name="w">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttrib4N">
      <MemberSignature Language="C#" Value="public static void VertexAttrib4N (uint index, byte x, byte y, byte z, byte w);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttrib4N(unsigned int32 index, unsigned int8 x, unsigned int8 y, unsigned int8 z, unsigned int8 w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="x" Type="System.Byte" />
        <Parameter Name="y" Type="System.Byte" />
        <Parameter Name="z" Type="System.Byte" />
        <Parameter Name="w" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <param name="w">To be added.</param>
        <summary>[requires: v2.0][deprecated: v3.1]</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttribPointer">
      <MemberSignature Language="C#" Value="public static void VertexAttribPointer (int index, int size, MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int stride, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttribPointer(int32 index, int32 size, valuetype MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int32 stride, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.VertexAttribPointerType" />
        <Parameter Name="normalized" Type="System.Boolean" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="size">To be added.</param>
        <param name="type">To be added.</param>
        <param name="normalized">To be added.</param>
        <param name="stride">To be added.</param>
        <param name="offset">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttribPointer">
      <MemberSignature Language="C#" Value="public static void VertexAttribPointer (int index, int size, MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int stride, IntPtr pointer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttribPointer(int32 index, int32 size, valuetype MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int32 stride, native int pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.VertexAttribPointerType" />
        <Parameter Name="normalized" Type="System.Boolean" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the number of components per generic vertex attribute. Must be 1, 2, 3, 4. Additionally, the symbolic constant GL_BGRA is accepted by glVertexAttribPointer. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each component in the array. The symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, and GL_UNSIGNED_INT are accepted by both functions. Additionally GL_HALF_FLOAT, GL_FLOAT, GL_DOUBLE, GL_FIXED, GL_INT_2_10_10_10_REV, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted by glVertexAttribPointer. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="normalized">
          <para>
            For glVertexAttribPointer, specifies whether fixed-point data values should be normalized (GL_TRUE) or converted directly as fixed-point values (GL_FALSE) when they are accessed.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive generic vertex attributes. If stride is 0, the generic vertex attributes are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a offset of the first component of the first generic vertex attribute in the array in the data store of the buffer currently bound to the GL_ARRAY_BUFFER target. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v2.0]
            Define an array of generic vertex attribute data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttribPointer">
      <MemberSignature Language="C#" Value="public static void VertexAttribPointer (uint index, int size, MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int stride, IntPtr pointer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttribPointer(unsigned int32 index, int32 size, valuetype MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int32 stride, native int pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.VertexAttribPointerType" />
        <Parameter Name="normalized" Type="System.Boolean" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the number of components per generic vertex attribute. Must be 1, 2, 3, 4. Additionally, the symbolic constant GL_BGRA is accepted by glVertexAttribPointer. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each component in the array. The symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, and GL_UNSIGNED_INT are accepted by both functions. Additionally GL_HALF_FLOAT, GL_FLOAT, GL_DOUBLE, GL_FIXED, GL_INT_2_10_10_10_REV, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted by glVertexAttribPointer. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="normalized">
          <para>
            For glVertexAttribPointer, specifies whether fixed-point data values should be normalized (GL_TRUE) or converted directly as fixed-point values (GL_FALSE) when they are accessed.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive generic vertex attributes. If stride is 0, the generic vertex attributes are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a offset of the first component of the first generic vertex attribute in the array in the data store of the buffer currently bound to the GL_ARRAY_BUFFER target. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v2.0]
            Define an array of generic vertex attribute data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttribPointer&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void VertexAttribPointer&lt;T5&gt; (int index, int size, MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int stride, out T5 pointer) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttribPointer&lt;struct .ctor (class System.ValueType) T5&gt;(int32 index, int32 size, valuetype MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int32 stride, !!T5 pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.VertexAttribPointerType" />
        <Parameter Name="normalized" Type="System.Boolean" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T5&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the number of components per generic vertex attribute. Must be 1, 2, 3, 4. Additionally, the symbolic constant GL_BGRA is accepted by glVertexAttribPointer. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each component in the array. The symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, and GL_UNSIGNED_INT are accepted by both functions. Additionally GL_HALF_FLOAT, GL_FLOAT, GL_DOUBLE, GL_FIXED, GL_INT_2_10_10_10_REV, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted by glVertexAttribPointer. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="normalized">
          <para>
            For glVertexAttribPointer, specifies whether fixed-point data values should be normalized (GL_TRUE) or converted directly as fixed-point values (GL_FALSE) when they are accessed.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive generic vertex attributes. If stride is 0, the generic vertex attributes are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a offset of the first component of the first generic vertex attribute in the array in the data store of the buffer currently bound to the GL_ARRAY_BUFFER target. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v2.0]
            Define an array of generic vertex attribute data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttribPointer&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void VertexAttribPointer&lt;T5&gt; (int index, int size, MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int stride, T5[,,] pointer) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttribPointer&lt;struct .ctor (class System.ValueType) T5&gt;(int32 index, int32 size, valuetype MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int32 stride, !!T5[,,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.VertexAttribPointerType" />
        <Parameter Name="normalized" Type="System.Boolean" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T5[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the number of components per generic vertex attribute. Must be 1, 2, 3, 4. Additionally, the symbolic constant GL_BGRA is accepted by glVertexAttribPointer. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each component in the array. The symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, and GL_UNSIGNED_INT are accepted by both functions. Additionally GL_HALF_FLOAT, GL_FLOAT, GL_DOUBLE, GL_FIXED, GL_INT_2_10_10_10_REV, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted by glVertexAttribPointer. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="normalized">
          <para>
            For glVertexAttribPointer, specifies whether fixed-point data values should be normalized (GL_TRUE) or converted directly as fixed-point values (GL_FALSE) when they are accessed.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive generic vertex attributes. If stride is 0, the generic vertex attributes are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a offset of the first component of the first generic vertex attribute in the array in the data store of the buffer currently bound to the GL_ARRAY_BUFFER target. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v2.0]
            Define an array of generic vertex attribute data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttribPointer&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void VertexAttribPointer&lt;T5&gt; (int index, int size, MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int stride, T5[,] pointer) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttribPointer&lt;struct .ctor (class System.ValueType) T5&gt;(int32 index, int32 size, valuetype MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int32 stride, !!T5[,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.VertexAttribPointerType" />
        <Parameter Name="normalized" Type="System.Boolean" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T5[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the number of components per generic vertex attribute. Must be 1, 2, 3, 4. Additionally, the symbolic constant GL_BGRA is accepted by glVertexAttribPointer. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each component in the array. The symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, and GL_UNSIGNED_INT are accepted by both functions. Additionally GL_HALF_FLOAT, GL_FLOAT, GL_DOUBLE, GL_FIXED, GL_INT_2_10_10_10_REV, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted by glVertexAttribPointer. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="normalized">
          <para>
            For glVertexAttribPointer, specifies whether fixed-point data values should be normalized (GL_TRUE) or converted directly as fixed-point values (GL_FALSE) when they are accessed.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive generic vertex attributes. If stride is 0, the generic vertex attributes are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a offset of the first component of the first generic vertex attribute in the array in the data store of the buffer currently bound to the GL_ARRAY_BUFFER target. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v2.0]
            Define an array of generic vertex attribute data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttribPointer&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void VertexAttribPointer&lt;T5&gt; (int index, int size, MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int stride, T5[] pointer) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttribPointer&lt;struct .ctor (class System.ValueType) T5&gt;(int32 index, int32 size, valuetype MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int32 stride, !!T5[] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.VertexAttribPointerType" />
        <Parameter Name="normalized" Type="System.Boolean" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T5[]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the number of components per generic vertex attribute. Must be 1, 2, 3, 4. Additionally, the symbolic constant GL_BGRA is accepted by glVertexAttribPointer. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each component in the array. The symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, and GL_UNSIGNED_INT are accepted by both functions. Additionally GL_HALF_FLOAT, GL_FLOAT, GL_DOUBLE, GL_FIXED, GL_INT_2_10_10_10_REV, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted by glVertexAttribPointer. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="normalized">
          <para>
            For glVertexAttribPointer, specifies whether fixed-point data values should be normalized (GL_TRUE) or converted directly as fixed-point values (GL_FALSE) when they are accessed.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive generic vertex attributes. If stride is 0, the generic vertex attributes are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a offset of the first component of the first generic vertex attribute in the array in the data store of the buffer currently bound to the GL_ARRAY_BUFFER target. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v2.0]
            Define an array of generic vertex attribute data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttribPointer&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void VertexAttribPointer&lt;T5&gt; (uint index, int size, MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int stride, out T5 pointer) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttribPointer&lt;struct .ctor (class System.ValueType) T5&gt;(unsigned int32 index, int32 size, valuetype MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int32 stride, !!T5 pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.VertexAttribPointerType" />
        <Parameter Name="normalized" Type="System.Boolean" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T5&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the number of components per generic vertex attribute. Must be 1, 2, 3, 4. Additionally, the symbolic constant GL_BGRA is accepted by glVertexAttribPointer. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each component in the array. The symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, and GL_UNSIGNED_INT are accepted by both functions. Additionally GL_HALF_FLOAT, GL_FLOAT, GL_DOUBLE, GL_FIXED, GL_INT_2_10_10_10_REV, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted by glVertexAttribPointer. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="normalized">
          <para>
            For glVertexAttribPointer, specifies whether fixed-point data values should be normalized (GL_TRUE) or converted directly as fixed-point values (GL_FALSE) when they are accessed.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive generic vertex attributes. If stride is 0, the generic vertex attributes are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a offset of the first component of the first generic vertex attribute in the array in the data store of the buffer currently bound to the GL_ARRAY_BUFFER target. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v2.0]
            Define an array of generic vertex attribute data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttribPointer&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void VertexAttribPointer&lt;T5&gt; (uint index, int size, MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int stride, T5[,,] pointer) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttribPointer&lt;struct .ctor (class System.ValueType) T5&gt;(unsigned int32 index, int32 size, valuetype MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int32 stride, !!T5[,,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.VertexAttribPointerType" />
        <Parameter Name="normalized" Type="System.Boolean" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T5[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the number of components per generic vertex attribute. Must be 1, 2, 3, 4. Additionally, the symbolic constant GL_BGRA is accepted by glVertexAttribPointer. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each component in the array. The symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, and GL_UNSIGNED_INT are accepted by both functions. Additionally GL_HALF_FLOAT, GL_FLOAT, GL_DOUBLE, GL_FIXED, GL_INT_2_10_10_10_REV, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted by glVertexAttribPointer. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="normalized">
          <para>
            For glVertexAttribPointer, specifies whether fixed-point data values should be normalized (GL_TRUE) or converted directly as fixed-point values (GL_FALSE) when they are accessed.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive generic vertex attributes. If stride is 0, the generic vertex attributes are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a offset of the first component of the first generic vertex attribute in the array in the data store of the buffer currently bound to the GL_ARRAY_BUFFER target. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v2.0]
            Define an array of generic vertex attribute data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttribPointer&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void VertexAttribPointer&lt;T5&gt; (uint index, int size, MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int stride, T5[,] pointer) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttribPointer&lt;struct .ctor (class System.ValueType) T5&gt;(unsigned int32 index, int32 size, valuetype MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int32 stride, !!T5[,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.VertexAttribPointerType" />
        <Parameter Name="normalized" Type="System.Boolean" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T5[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the number of components per generic vertex attribute. Must be 1, 2, 3, 4. Additionally, the symbolic constant GL_BGRA is accepted by glVertexAttribPointer. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each component in the array. The symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, and GL_UNSIGNED_INT are accepted by both functions. Additionally GL_HALF_FLOAT, GL_FLOAT, GL_DOUBLE, GL_FIXED, GL_INT_2_10_10_10_REV, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted by glVertexAttribPointer. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="normalized">
          <para>
            For glVertexAttribPointer, specifies whether fixed-point data values should be normalized (GL_TRUE) or converted directly as fixed-point values (GL_FALSE) when they are accessed.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive generic vertex attributes. If stride is 0, the generic vertex attributes are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a offset of the first component of the first generic vertex attribute in the array in the data store of the buffer currently bound to the GL_ARRAY_BUFFER target. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v2.0]
            Define an array of generic vertex attribute data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexAttribPointer&lt;T5&gt;">
      <MemberSignature Language="C#" Value="public static void VertexAttribPointer&lt;T5&gt; (uint index, int size, MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int stride, T5[] pointer) where T5 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexAttribPointer&lt;struct .ctor (class System.ValueType) T5&gt;(unsigned int32 index, int32 size, valuetype MonoMac.OpenGL.VertexAttribPointerType type, bool normalized, int32 stride, !!T5[] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T5">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="index" Type="System.UInt32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.VertexAttribPointerType" />
        <Parameter Name="normalized" Type="System.Boolean" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T5[]" />
      </Parameters>
      <Docs>
        <typeparam name="T5">To be added.</typeparam>
        <param name="index">
          <para>
            Specifies the index of the generic vertex attribute to be modified.
            </para>
        </param>
        <param name="size">
          <para>
            Specifies the number of components per generic vertex attribute. Must be 1, 2, 3, 4. Additionally, the symbolic constant GL_BGRA is accepted by glVertexAttribPointer. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each component in the array. The symbolic constants GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, and GL_UNSIGNED_INT are accepted by both functions. Additionally GL_HALF_FLOAT, GL_FLOAT, GL_DOUBLE, GL_FIXED, GL_INT_2_10_10_10_REV, and GL_UNSIGNED_INT_2_10_10_10_REV are accepted by glVertexAttribPointer. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="normalized">
          <para>
            For glVertexAttribPointer, specifies whether fixed-point data values should be normalized (GL_TRUE) or converted directly as fixed-point values (GL_FALSE) when they are accessed.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive generic vertex attributes. If stride is 0, the generic vertex attributes are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a offset of the first component of the first generic vertex attribute in the array in the data store of the buffer currently bound to the GL_ARRAY_BUFFER target. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v2.0]
            Define an array of generic vertex attribute data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexPointer">
      <MemberSignature Language="C#" Value="public static void VertexPointer (int size, MonoMac.OpenGL.VertexPointerType type, int stride, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexPointer(int32 size, valuetype MonoMac.OpenGL.VertexPointerType type, int32 stride, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.VertexPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <param name="type">To be added.</param>
        <param name="stride">To be added.</param>
        <param name="offset">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexPointer">
      <MemberSignature Language="C#" Value="public static void VertexPointer (int size, MonoMac.OpenGL.VertexPointerType type, int stride, IntPtr pointer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexPointer(int32 size, valuetype MonoMac.OpenGL.VertexPointerType type, int32 stride, native int pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.VertexPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="size">
          <para>
            Specifies the number of coordinates per vertex. Must be 2, 3, or 4. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each coordinate in the array. Symbolic constants GL_SHORT, GL_INT, GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive vertices. If stride is 0, the vertices are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first vertex in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of vertex data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexPointer&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void VertexPointer&lt;T3&gt; (int size, MonoMac.OpenGL.VertexPointerType type, int stride, out T3 pointer) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexPointer&lt;struct .ctor (class System.ValueType) T3&gt;(int32 size, valuetype MonoMac.OpenGL.VertexPointerType type, int32 stride, !!T3 pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.VertexPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T3&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="size">
          <para>
            Specifies the number of coordinates per vertex. Must be 2, 3, or 4. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each coordinate in the array. Symbolic constants GL_SHORT, GL_INT, GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive vertices. If stride is 0, the vertices are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first vertex in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of vertex data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexPointer&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void VertexPointer&lt;T3&gt; (int size, MonoMac.OpenGL.VertexPointerType type, int stride, T3[,,] pointer) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexPointer&lt;struct .ctor (class System.ValueType) T3&gt;(int32 size, valuetype MonoMac.OpenGL.VertexPointerType type, int32 stride, !!T3[,,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.VertexPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T3[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="size">
          <para>
            Specifies the number of coordinates per vertex. Must be 2, 3, or 4. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each coordinate in the array. Symbolic constants GL_SHORT, GL_INT, GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive vertices. If stride is 0, the vertices are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first vertex in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of vertex data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexPointer&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void VertexPointer&lt;T3&gt; (int size, MonoMac.OpenGL.VertexPointerType type, int stride, T3[,] pointer) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexPointer&lt;struct .ctor (class System.ValueType) T3&gt;(int32 size, valuetype MonoMac.OpenGL.VertexPointerType type, int32 stride, !!T3[,] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.VertexPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T3[,]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="size">
          <para>
            Specifies the number of coordinates per vertex. Must be 2, 3, or 4. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each coordinate in the array. Symbolic constants GL_SHORT, GL_INT, GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive vertices. If stride is 0, the vertices are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first vertex in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of vertex data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VertexPointer&lt;T3&gt;">
      <MemberSignature Language="C#" Value="public static void VertexPointer&lt;T3&gt; (int size, MonoMac.OpenGL.VertexPointerType type, int stride, T3[] pointer) where T3 : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VertexPointer&lt;struct .ctor (class System.ValueType) T3&gt;(int32 size, valuetype MonoMac.OpenGL.VertexPointerType type, int32 stride, !!T3[] pointer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T3">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="type" Type="MonoMac.OpenGL.VertexPointerType" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="pointer" Type="T3[]" />
      </Parameters>
      <Docs>
        <typeparam name="T3">To be added.</typeparam>
        <param name="size">
          <para>
            Specifies the number of coordinates per vertex. Must be 2, 3, or 4. The initial value is 4.
            </para>
        </param>
        <param name="type">
          <para>
            Specifies the data type of each coordinate in the array. Symbolic constants GL_SHORT, GL_INT, GL_FLOAT, or GL_DOUBLE are accepted. The initial value is GL_FLOAT.
            </para>
        </param>
        <param name="stride">
          <para>
            Specifies the byte offset between consecutive vertices. If stride is 0, the vertices are understood to be tightly packed in the array. The initial value is 0.
            </para>
        </param>
        <param name="pointer">
          <para>
            Specifies a pointer to the first coordinate of the first vertex in the array. The initial value is 0.
            </para>
        </param>
        <summary>[requires: v1.1][deprecated: v3.1]
            Define an array of vertex data
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Viewport">
      <MemberSignature Language="C#" Value="public static void Viewport (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Viewport(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Viewport">
      <MemberSignature Language="C#" Value="public static void Viewport (System.Drawing.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Viewport(valuetype System.Drawing.Size size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Viewport">
      <MemberSignature Language="C#" Value="public static void Viewport (System.Drawing.Point location, System.Drawing.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Viewport(valuetype System.Drawing.Point location, valuetype System.Drawing.Size size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Drawing.Point" />
        <Parameter Name="size" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Viewport">
      <MemberSignature Language="C#" Value="public static void Viewport (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Viewport(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the lower left corner of the viewport rectangle, in pixels. The initial value is (0,0).
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="width">
          <para>
            Specify the width and height of the viewport. When a GL context is first attached to a window, width and height are set to the dimensions of that window.
            </para>
        </param>
        <param name="height">To be added.</param>
        <summary>[requires: v1.0]
            Set the viewport
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos2">
      <MemberSignature Language="C#" Value="public static void WindowPos2 (ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos2(float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos2">
      <MemberSignature Language="C#" Value="public static void WindowPos2 (double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos2(float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos2">
      <MemberSignature Language="C#" Value="public static void WindowPos2 (double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos2(float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos2">
      <MemberSignature Language="C#" Value="public static void WindowPos2 (ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos2(int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos2">
      <MemberSignature Language="C#" Value="public static void WindowPos2 (short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos2(int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos2">
      <MemberSignature Language="C#" Value="public static void WindowPos2 (short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos2(int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos2">
      <MemberSignature Language="C#" Value="public static void WindowPos2 (ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos2(int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos2">
      <MemberSignature Language="C#" Value="public static void WindowPos2 (int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos2(int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos2">
      <MemberSignature Language="C#" Value="public static void WindowPos2 (int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos2(int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos2">
      <MemberSignature Language="C#" Value="public static void WindowPos2 (ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos2(float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos2">
      <MemberSignature Language="C#" Value="public static void WindowPos2 (float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos2(float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos2">
      <MemberSignature Language="C#" Value="public static void WindowPos2 (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos2(float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos2">
      <MemberSignature Language="C#" Value="public static void WindowPos2 (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos2(float64 x, float64 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , coordinates for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos2">
      <MemberSignature Language="C#" Value="public static void WindowPos2 (short x, short y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos2(int16 x, int16 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int16" />
        <Parameter Name="y" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , coordinates for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos2">
      <MemberSignature Language="C#" Value="public static void WindowPos2 (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos2(int32 x, int32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , coordinates for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos2">
      <MemberSignature Language="C#" Value="public static void WindowPos2 (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos2(float32 x, float32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , coordinates for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos3">
      <MemberSignature Language="C#" Value="public static void WindowPos3 (ref double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos3(float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos3">
      <MemberSignature Language="C#" Value="public static void WindowPos3 (double* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos3(float64* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos3">
      <MemberSignature Language="C#" Value="public static void WindowPos3 (double[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos3(float64[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos3">
      <MemberSignature Language="C#" Value="public static void WindowPos3 (ref short v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos3(int16 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos3">
      <MemberSignature Language="C#" Value="public static void WindowPos3 (short* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos3(int16* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos3">
      <MemberSignature Language="C#" Value="public static void WindowPos3 (short[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos3(int16[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos3">
      <MemberSignature Language="C#" Value="public static void WindowPos3 (ref int v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos3(int32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos3">
      <MemberSignature Language="C#" Value="public static void WindowPos3 (int* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos3(int32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos3">
      <MemberSignature Language="C#" Value="public static void WindowPos3 (int[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos3(int32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos3">
      <MemberSignature Language="C#" Value="public static void WindowPos3 (ref float v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos3(float32 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos3">
      <MemberSignature Language="C#" Value="public static void WindowPos3 (float* v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos3(float32* v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single*" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos3">
      <MemberSignature Language="C#" Value="public static void WindowPos3 (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos3(float32[] v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos3">
      <MemberSignature Language="C#" Value="public static void WindowPos3 (double x, double y, double z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos3(float64 x, float64 y, float64 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="z" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , coordinates for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos3">
      <MemberSignature Language="C#" Value="public static void WindowPos3 (short x, short y, short z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos3(int16 x, int16 y, int16 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int16" />
        <Parameter Name="y" Type="System.Int16" />
        <Parameter Name="z" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , coordinates for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos3">
      <MemberSignature Language="C#" Value="public static void WindowPos3 (int x, int y, int z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos3(int32 x, int32 y, int32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="z" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , coordinates for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPos3">
      <MemberSignature Language="C#" Value="public static void WindowPos3 (float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WindowPos3(float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <para>
            Specify the , , coordinates for the raster position.
            </para>
        </param>
        <param name="y">To be added.</param>
        <param name="z">To be added.</param>
        <summary>[requires: v1.4][deprecated: v3.1]
            Specify the raster position in window coordinates for pixel operations
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
