<Type Name="Vector2d" FullName="MonoMac.OpenGL.Vector2d">
  <TypeSignature Language="C#" Value="public struct Vector2d : IEquatable&lt;MonoMac.OpenGL.Vector2d&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Vector2d extends System.ValueType implements class System.IEquatable`1&lt;valuetype MonoMac.OpenGL.Vector2d&gt;" />
  <AssemblyInfo>
    <AssemblyName>MonoMac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;MonoMac.OpenGL.Vector2d&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents a 2D vector using two double-precision floating-point numbers.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector2d (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">The value that will initialize this instance.</param>
        <summary>
            Constructs a new instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector2d (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">The X coordinate.</param>
        <param name="y">The Y coordinate.</param>
        <summary>Constructs left vector with the given coordinates.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (MonoMac.OpenGL.Vector2d right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(valuetype MonoMac.OpenGL.Vector2d right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Add() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="right">Right operand. This parameter is only read from.</param>
        <summary>Add the Vector passed as parameter to this instance.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (ref MonoMac.OpenGL.Vector2d right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(valuetype MonoMac.OpenGL.Vector2d right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Add() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="right">Right operand. This parameter is only read from.</param>
        <summary>Add the Vector passed as parameter to this instance.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d Add (MonoMac.OpenGL.Vector2d a, MonoMac.OpenGL.Vector2d b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2d Add(valuetype MonoMac.OpenGL.Vector2d a, valuetype MonoMac.OpenGL.Vector2d b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="a">Left operand.</param>
        <param name="b">Right operand.</param>
        <summary>
            Adds two vectors.
            </summary>
        <returns>Result of operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static void Add (ref MonoMac.OpenGL.Vector2d a, ref MonoMac.OpenGL.Vector2d b, out MonoMac.OpenGL.Vector2d result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Add(valuetype MonoMac.OpenGL.Vector2d a, valuetype MonoMac.OpenGL.Vector2d b, valuetype MonoMac.OpenGL.Vector2d result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">Left operand.</param>
        <param name="b">Right operand.</param>
        <param name="result">Result of operation.</param>
        <summary>
            Adds two vectors.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaryCentric">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d BaryCentric (MonoMac.OpenGL.Vector2d a, MonoMac.OpenGL.Vector2d b, MonoMac.OpenGL.Vector2d c, double u, double v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2d BaryCentric(valuetype MonoMac.OpenGL.Vector2d a, valuetype MonoMac.OpenGL.Vector2d b, valuetype MonoMac.OpenGL.Vector2d c, float64 u, float64 v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="c" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="u" Type="System.Double" />
        <Parameter Name="v" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">First input Vector</param>
        <param name="b">Second input Vector</param>
        <param name="c">Third input Vector</param>
        <param name="u">First Barycentric Coordinate</param>
        <param name="v">Second Barycentric Coordinate</param>
        <summary>
            Interpolate 3 Vectors using Barycentric coordinates
            </summary>
        <returns>a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaryCentric">
      <MemberSignature Language="C#" Value="public static void BaryCentric (ref MonoMac.OpenGL.Vector2d a, ref MonoMac.OpenGL.Vector2d b, ref MonoMac.OpenGL.Vector2d c, double u, double v, out MonoMac.OpenGL.Vector2d result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BaryCentric(valuetype MonoMac.OpenGL.Vector2d a, valuetype MonoMac.OpenGL.Vector2d b, valuetype MonoMac.OpenGL.Vector2d c, float64 u, float64 v, valuetype MonoMac.OpenGL.Vector2d result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="c" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="u" Type="System.Double" />
        <Parameter Name="v" Type="System.Double" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">First input Vector.</param>
        <param name="b">Second input Vector.</param>
        <param name="c">Third input Vector.</param>
        <param name="u">First Barycentric Coordinate.</param>
        <param name="v">Second Barycentric Coordinate.</param>
        <param name="result">Output Vector. a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise</param>
        <summary>Interpolate 3 Vectors using Barycentric coordinates</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d Clamp (MonoMac.OpenGL.Vector2d vec, MonoMac.OpenGL.Vector2d min, MonoMac.OpenGL.Vector2d max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2d Clamp(valuetype MonoMac.OpenGL.Vector2d vec, valuetype MonoMac.OpenGL.Vector2d min, valuetype MonoMac.OpenGL.Vector2d max) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="min" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="max" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="vec">Input vector</param>
        <param name="min">Minimum vector</param>
        <param name="max">Maximum vector</param>
        <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
        <returns>The clamped vector</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static void Clamp (ref MonoMac.OpenGL.Vector2d vec, ref MonoMac.OpenGL.Vector2d min, ref MonoMac.OpenGL.Vector2d max, out MonoMac.OpenGL.Vector2d result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clamp(valuetype MonoMac.OpenGL.Vector2d vec, valuetype MonoMac.OpenGL.Vector2d min, valuetype MonoMac.OpenGL.Vector2d max, valuetype MonoMac.OpenGL.Vector2d result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="min" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="max" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vec">Input vector</param>
        <param name="min">Minimum vector</param>
        <param name="max">Maximum vector</param>
        <param name="result">The clamped vector</param>
        <summary>
            Clamp a vector to the given minimum and maximum vectors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Div">
      <MemberSignature Language="C#" Value="public void Div (double f);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Div(float64 f) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Divide() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="f">Scalar operand.</param>
        <summary>Divide this instance by a scalar.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Div">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d Div (MonoMac.OpenGL.Vector2d a, double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2d Div(valuetype MonoMac.OpenGL.Vector2d a, float64 d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Divide() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">Vector operand</param>
        <param name="d">Scalar operand</param>
        <summary>
            Divide a vector by a scalar
            </summary>
        <returns>Result of the division</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Div">
      <MemberSignature Language="C#" Value="public static void Div (ref MonoMac.OpenGL.Vector2d a, double d, out MonoMac.OpenGL.Vector2d result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Div(valuetype MonoMac.OpenGL.Vector2d a, float64 d, valuetype MonoMac.OpenGL.Vector2d result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Divide() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="d" Type="System.Double" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">Vector operand</param>
        <param name="d">Scalar operand</param>
        <param name="result">Result of the division</param>
        <summary>
            Divide a vector by a scalar
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d Divide (MonoMac.OpenGL.Vector2d vector, MonoMac.OpenGL.Vector2d scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2d Divide(valuetype MonoMac.OpenGL.Vector2d vector, valuetype MonoMac.OpenGL.Vector2d scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="scale" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="vector">Left operand.</param>
        <param name="scale">Right operand.</param>
        <summary>
            Divides a vector by the components of a vector (scale).
            </summary>
        <returns>Result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d Divide (MonoMac.OpenGL.Vector2d vector, double scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2d Divide(valuetype MonoMac.OpenGL.Vector2d vector, float64 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="scale" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="vector">Left operand.</param>
        <param name="scale">Right operand.</param>
        <summary>
            Divides a vector by a scalar.
            </summary>
        <returns>Result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static void Divide (ref MonoMac.OpenGL.Vector2d vector, ref MonoMac.OpenGL.Vector2d scale, out MonoMac.OpenGL.Vector2d result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Divide(valuetype MonoMac.OpenGL.Vector2d vector, valuetype MonoMac.OpenGL.Vector2d scale, valuetype MonoMac.OpenGL.Vector2d result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="scale" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vector">Left operand.</param>
        <param name="scale">Right operand.</param>
        <param name="result">Result of the operation.</param>
        <summary>
            Divide a vector by the components of a vector (scale).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static void Divide (ref MonoMac.OpenGL.Vector2d vector, double scale, out MonoMac.OpenGL.Vector2d result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Divide(valuetype MonoMac.OpenGL.Vector2d vector, float64 scale, valuetype MonoMac.OpenGL.Vector2d result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="scale" Type="System.Double" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vector">Left operand.</param>
        <param name="scale">Right operand.</param>
        <param name="result">Result of the operation.</param>
        <summary>
            Divides a vector by a scalar.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dot">
      <MemberSignature Language="C#" Value="public static double Dot (MonoMac.OpenGL.Vector2d left, MonoMac.OpenGL.Vector2d right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Dot(valuetype MonoMac.OpenGL.Vector2d left, valuetype MonoMac.OpenGL.Vector2d right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="left">First operand</param>
        <param name="right">Second operand</param>
        <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
        <returns>The dot product of the two inputs</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dot">
      <MemberSignature Language="C#" Value="public static void Dot (ref MonoMac.OpenGL.Vector2d left, ref MonoMac.OpenGL.Vector2d right, out double result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Dot(valuetype MonoMac.OpenGL.Vector2d left, valuetype MonoMac.OpenGL.Vector2d right, float64 result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="result" Type="System.Double&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="left">First operand</param>
        <param name="right">Second operand</param>
        <param name="result">The dot product of the two inputs</param>
        <summary>
            Calculate the dot (scalar) product of two vectors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (MonoMac.OpenGL.Vector2d other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype MonoMac.OpenGL.Vector2d other) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="other">A vector to compare with this vector.</param>
        <summary>Indicates whether the current vector is equal to another vector.</summary>
        <returns>true if the current vector is equal to the vector parameter; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare to.</param>
        <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
        <returns>True if the instances are equal; false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the hashcode for this instance.
            </summary>
        <returns>A System.Int32 containing the unique hashcode for this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public double Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the length (magnitude) of the vector.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:MonoMac.OpenGL.Vector2d.LengthSquared" />
      </Docs>
    </Member>
    <Member MemberName="LengthSquared">
      <MemberSignature Language="C#" Value="public double LengthSquared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LengthSquared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the square of the vector length (magnitude).
            </summary>
        <value>To be added.</value>
        <remarks>
            This property avoids the costly square root operation required by the Length property. This makes it more suitable
            for comparisons.
            </remarks>
        <see cref="P:MonoMac.OpenGL.Vector2d.Length" />
      </Docs>
    </Member>
    <Member MemberName="Lerp">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d Lerp (MonoMac.OpenGL.Vector2d a, MonoMac.OpenGL.Vector2d b, double blend);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2d Lerp(valuetype MonoMac.OpenGL.Vector2d a, valuetype MonoMac.OpenGL.Vector2d b, float64 blend) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="blend" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">First input vector</param>
        <param name="b">Second input vector</param>
        <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
        <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
        <returns>a when blend=0, b when blend=1, and a linear combination otherwise</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lerp">
      <MemberSignature Language="C#" Value="public static void Lerp (ref MonoMac.OpenGL.Vector2d a, ref MonoMac.OpenGL.Vector2d b, double blend, out MonoMac.OpenGL.Vector2d result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Lerp(valuetype MonoMac.OpenGL.Vector2d a, valuetype MonoMac.OpenGL.Vector2d b, float64 blend, valuetype MonoMac.OpenGL.Vector2d result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="blend" Type="System.Double" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">First input vector</param>
        <param name="b">Second input vector</param>
        <param name="blend">The blend factor. a when blend=0, b when blend=1.</param>
        <param name="result">a when blend=0, b when blend=1, and a linear combination otherwise</param>
        <summary>
            Returns a new Vector that is the linear blend of the 2 given Vectors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d Max (MonoMac.OpenGL.Vector2d a, MonoMac.OpenGL.Vector2d b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2d Max(valuetype MonoMac.OpenGL.Vector2d a, valuetype MonoMac.OpenGL.Vector2d b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="a">First operand</param>
        <param name="b">Second operand</param>
        <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
        <returns>The component-wise maximum</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static void Max (ref MonoMac.OpenGL.Vector2d a, ref MonoMac.OpenGL.Vector2d b, out MonoMac.OpenGL.Vector2d result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Max(valuetype MonoMac.OpenGL.Vector2d a, valuetype MonoMac.OpenGL.Vector2d b, valuetype MonoMac.OpenGL.Vector2d result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">First operand</param>
        <param name="b">Second operand</param>
        <param name="result">The component-wise maximum</param>
        <summary>
            Calculate the component-wise maximum of two vectors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d Min (MonoMac.OpenGL.Vector2d a, MonoMac.OpenGL.Vector2d b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2d Min(valuetype MonoMac.OpenGL.Vector2d a, valuetype MonoMac.OpenGL.Vector2d b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="a">First operand</param>
        <param name="b">Second operand</param>
        <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
        <returns>The component-wise minimum</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static void Min (ref MonoMac.OpenGL.Vector2d a, ref MonoMac.OpenGL.Vector2d b, out MonoMac.OpenGL.Vector2d result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Min(valuetype MonoMac.OpenGL.Vector2d a, valuetype MonoMac.OpenGL.Vector2d b, valuetype MonoMac.OpenGL.Vector2d result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">First operand</param>
        <param name="b">Second operand</param>
        <param name="result">The component-wise minimum</param>
        <summary>
            Calculate the component-wise minimum of two vectors
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mult">
      <MemberSignature Language="C#" Value="public void Mult (double f);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Mult(float64 f) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Multiply() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="f">Scalar operand.</param>
        <summary>Multiply this instance by a scalar.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mult">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d Mult (MonoMac.OpenGL.Vector2d a, double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2d Mult(valuetype MonoMac.OpenGL.Vector2d a, float64 d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Multiply() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">Vector operand</param>
        <param name="d">Scalar operand</param>
        <summary>
            Multiply a vector and a scalar
            </summary>
        <returns>Result of the multiplication</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mult">
      <MemberSignature Language="C#" Value="public static void Mult (ref MonoMac.OpenGL.Vector2d a, double d, out MonoMac.OpenGL.Vector2d result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Mult(valuetype MonoMac.OpenGL.Vector2d a, float64 d, valuetype MonoMac.OpenGL.Vector2d result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Multiply() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="d" Type="System.Double" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">Vector operand</param>
        <param name="d">Scalar operand</param>
        <param name="result">Result of the multiplication</param>
        <summary>
            Multiply a vector and a scalar
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d Multiply (MonoMac.OpenGL.Vector2d vector, MonoMac.OpenGL.Vector2d scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2d Multiply(valuetype MonoMac.OpenGL.Vector2d vector, valuetype MonoMac.OpenGL.Vector2d scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="scale" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="vector">Left operand.</param>
        <param name="scale">Right operand.</param>
        <summary>
            Multiplies a vector by the components a vector (scale).
            </summary>
        <returns>Result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d Multiply (MonoMac.OpenGL.Vector2d vector, double scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2d Multiply(valuetype MonoMac.OpenGL.Vector2d vector, float64 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="scale" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="vector">Left operand.</param>
        <param name="scale">Right operand.</param>
        <summary>
            Multiplies a vector by a scalar.
            </summary>
        <returns>Result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static void Multiply (ref MonoMac.OpenGL.Vector2d vector, ref MonoMac.OpenGL.Vector2d scale, out MonoMac.OpenGL.Vector2d result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Multiply(valuetype MonoMac.OpenGL.Vector2d vector, valuetype MonoMac.OpenGL.Vector2d scale, valuetype MonoMac.OpenGL.Vector2d result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="scale" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vector">Left operand.</param>
        <param name="scale">Right operand.</param>
        <param name="result">Result of the operation.</param>
        <summary>
            Multiplies a vector by the components of a vector (scale).
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static void Multiply (ref MonoMac.OpenGL.Vector2d vector, double scale, out MonoMac.OpenGL.Vector2d result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Multiply(valuetype MonoMac.OpenGL.Vector2d vector, float64 scale, valuetype MonoMac.OpenGL.Vector2d result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="scale" Type="System.Double" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vector">Left operand.</param>
        <param name="scale">Right operand.</param>
        <param name="result">Result of the operation.</param>
        <summary>
            Multiplies a vector by a scalar.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public void Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Normalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Scales the Vector2 to unit length.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d Normalize (MonoMac.OpenGL.Vector2d vec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2d Normalize(valuetype MonoMac.OpenGL.Vector2d vec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="vec">The input vector</param>
        <summary>
            Scale a vector to unit length
            </summary>
        <returns>The normalized vector</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static void Normalize (ref MonoMac.OpenGL.Vector2d vec, out MonoMac.OpenGL.Vector2d result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Normalize(valuetype MonoMac.OpenGL.Vector2d vec, valuetype MonoMac.OpenGL.Vector2d result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vec">The input vector</param>
        <param name="result">The normalized vector</param>
        <summary>
            Scale a vector to unit length
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeFast">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d NormalizeFast (MonoMac.OpenGL.Vector2d vec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2d NormalizeFast(valuetype MonoMac.OpenGL.Vector2d vec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="vec">The input vector</param>
        <summary>
            Scale a vector to approximately unit length
            </summary>
        <returns>The normalized vector</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeFast">
      <MemberSignature Language="C#" Value="public static void NormalizeFast (ref MonoMac.OpenGL.Vector2d vec, out MonoMac.OpenGL.Vector2d result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NormalizeFast(valuetype MonoMac.OpenGL.Vector2d vec, valuetype MonoMac.OpenGL.Vector2d result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vec">The input vector</param>
        <param name="result">The normalized vector</param>
        <summary>
            Scale a vector to approximately unit length
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static readonly MonoMac.OpenGL.Vector2d One;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype MonoMac.OpenGL.Vector2d One" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Defines an instance with all components set to 1.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d op_Addition (MonoMac.OpenGL.Vector2d left, MonoMac.OpenGL.Vector2d right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype MonoMac.OpenGL.Vector2d op_Addition(valuetype MonoMac.OpenGL.Vector2d left, valuetype MonoMac.OpenGL.Vector2d right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="left">The left instance.</param>
        <param name="right">The right instance.</param>
        <summary>
            Adds two instances.
            </summary>
        <returns>The result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d op_Division (MonoMac.OpenGL.Vector2d vec, double f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype MonoMac.OpenGL.Vector2d op_Division(valuetype MonoMac.OpenGL.Vector2d vec, float64 f) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="f" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="vec">The instance.</param>
        <param name="f">The scalar.</param>
        <summary>
            Divides an instance by a scalar.
            </summary>
        <returns>The result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (MonoMac.OpenGL.Vector2d left, MonoMac.OpenGL.Vector2d right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype MonoMac.OpenGL.Vector2d left, valuetype MonoMac.OpenGL.Vector2d right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="left">The left instance.</param>
        <param name="right">The right instance.</param>
        <summary>
            Compares two instances for equality.
            </summary>
        <returns>True, if both instances are equal; false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d op_Explicit (MonoMac.OpenGL.Vector2 v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype MonoMac.OpenGL.Vector2d op_Explicit(valuetype MonoMac.OpenGL.Vector2 v2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v2" Type="MonoMac.OpenGL.Vector2" />
      </Parameters>
      <Docs>
        <param name="v2">The Vector2 to convert.</param>
        <summary>Converts OpenTK.Vector2 to OpenTK.Vector2d.</summary>
        <returns>The resulting Vector2d.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2 op_Explicit (MonoMac.OpenGL.Vector2d v2d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype MonoMac.OpenGL.Vector2 op_Explicit(valuetype MonoMac.OpenGL.Vector2d v2d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v2d" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="v2d">The Vector2d to convert.</param>
        <summary>Converts OpenTK.Vector2d to OpenTK.Vector2.</summary>
        <returns>The resulting Vector2.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (MonoMac.OpenGL.Vector2d left, MonoMac.OpenGL.Vector2d right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype MonoMac.OpenGL.Vector2d left, valuetype MonoMac.OpenGL.Vector2d right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="left">The left instance.</param>
        <param name="right">The right instance.</param>
        <summary>
            Compares two instances for ienquality.
            </summary>
        <returns>True, if the instances are not equal; false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d op_Multiply (MonoMac.OpenGL.Vector2d vec, double f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype MonoMac.OpenGL.Vector2d op_Multiply(valuetype MonoMac.OpenGL.Vector2d vec, float64 f) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="f" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="vec">The instance.</param>
        <param name="f">The scalar.</param>
        <summary>
            Multiplies an instance by a scalar.
            </summary>
        <returns>The result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d op_Multiply (double f, MonoMac.OpenGL.Vector2d vec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype MonoMac.OpenGL.Vector2d op_Multiply(float64 f, valuetype MonoMac.OpenGL.Vector2d vec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Double" />
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="f">The scalar.</param>
        <param name="vec">The instance.</param>
        <summary>
            Multiply an instance by a scalar.
            </summary>
        <returns>The result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d op_Subtraction (MonoMac.OpenGL.Vector2d left, MonoMac.OpenGL.Vector2d right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype MonoMac.OpenGL.Vector2d op_Subtraction(valuetype MonoMac.OpenGL.Vector2d left, valuetype MonoMac.OpenGL.Vector2d right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="left">The left instance.</param>
        <param name="right">The right instance.</param>
        <summary>
            Subtracts two instances.
            </summary>
        <returns>The result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d op_UnaryNegation (MonoMac.OpenGL.Vector2d vec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype MonoMac.OpenGL.Vector2d op_UnaryNegation(valuetype MonoMac.OpenGL.Vector2d vec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="vec">The instance.</param>
        <summary>
            Negates an instance.
            </summary>
        <returns>The result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerpendicularLeft">
      <MemberSignature Language="C#" Value="public MonoMac.OpenGL.Vector2d PerpendicularLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoMac.OpenGL.Vector2d PerpendicularLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the perpendicular vector on the left side of this vector.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerpendicularRight">
      <MemberSignature Language="C#" Value="public MonoMac.OpenGL.Vector2d PerpendicularRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoMac.OpenGL.Vector2d PerpendicularRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the perpendicular vector on the right side of this vector.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (MonoMac.OpenGL.Vector2d scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(valuetype MonoMac.OpenGL.Vector2d scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Multiply() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="scale">The scaling of the individual components.</param>
        <summary>Scales this instance by the given parameter.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (ref MonoMac.OpenGL.Vector2d scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(valuetype MonoMac.OpenGL.Vector2d scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Multiply() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scale" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="scale">The scaling of the individual components.</param>
        <summary>Scales this instance by the given parameter.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (double sx, double sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float64 sx, float64 sy) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Multiply() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Double" />
        <Parameter Name="sy" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="sx">The scale of the X component.</param>
        <param name="sy">The scale of the Y component.</param>
        <summary>
            Scales the current Vector2 by the given amounts.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeInBytes">
      <MemberSignature Language="C#" Value="public static readonly int SizeInBytes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SizeInBytes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Defines the size of the Vector2d struct in bytes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sub">
      <MemberSignature Language="C#" Value="public void Sub (MonoMac.OpenGL.Vector2d right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sub(valuetype MonoMac.OpenGL.Vector2d right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Subtract() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="right">Right operand. This parameter is only read from.</param>
        <summary>Subtract the Vector passed as parameter from this instance.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sub">
      <MemberSignature Language="C#" Value="public void Sub (ref MonoMac.OpenGL.Vector2d right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sub(valuetype MonoMac.OpenGL.Vector2d right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Subtract() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="right" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="right">Right operand. This parameter is only read from.</param>
        <summary>Subtract the Vector passed as parameter from this instance.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sub">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d Sub (MonoMac.OpenGL.Vector2d a, MonoMac.OpenGL.Vector2d b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2d Sub(valuetype MonoMac.OpenGL.Vector2d a, valuetype MonoMac.OpenGL.Vector2d b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Subtract() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="a">First operand</param>
        <param name="b">Second operand</param>
        <summary>
            Subtract one Vector from another
            </summary>
        <returns>Result of subtraction</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sub">
      <MemberSignature Language="C#" Value="public static void Sub (ref MonoMac.OpenGL.Vector2d a, ref MonoMac.OpenGL.Vector2d b, out MonoMac.OpenGL.Vector2d result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sub(valuetype MonoMac.OpenGL.Vector2d a, valuetype MonoMac.OpenGL.Vector2d b, valuetype MonoMac.OpenGL.Vector2d result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use static Subtract() method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">First operand</param>
        <param name="b">Second operand</param>
        <param name="result">Result of subtraction</param>
        <summary>
            Subtract one Vector from another
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d Subtract (MonoMac.OpenGL.Vector2d a, MonoMac.OpenGL.Vector2d b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2d Subtract(valuetype MonoMac.OpenGL.Vector2d a, valuetype MonoMac.OpenGL.Vector2d b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2d" />
      </Parameters>
      <Docs>
        <param name="a">First operand</param>
        <param name="b">Second operand</param>
        <summary>
            Subtract one Vector from another
            </summary>
        <returns>Result of subtraction</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static void Subtract (ref MonoMac.OpenGL.Vector2d a, ref MonoMac.OpenGL.Vector2d b, out MonoMac.OpenGL.Vector2d result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Subtract(valuetype MonoMac.OpenGL.Vector2d a, valuetype MonoMac.OpenGL.Vector2d b, valuetype MonoMac.OpenGL.Vector2d result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="b" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">First operand</param>
        <param name="b">Second operand</param>
        <param name="result">Result of subtraction</param>
        <summary>
            Subtract one Vector from another
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a System.String that represents the current instance.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d Transform (MonoMac.OpenGL.Vector2d vec, MonoMac.OpenGL.Quaterniond quat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoMac.OpenGL.Vector2d Transform(valuetype MonoMac.OpenGL.Vector2d vec, valuetype MonoMac.OpenGL.Quaterniond quat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2d" />
        <Parameter Name="quat" Type="MonoMac.OpenGL.Quaterniond" />
      </Parameters>
      <Docs>
        <param name="vec">The vector to transform.</param>
        <param name="quat">The quaternion to rotate the vector by.</param>
        <summary>
            Transforms a vector by a quaternion rotation.
            </summary>
        <returns>The result of the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (ref MonoMac.OpenGL.Vector2d vec, ref MonoMac.OpenGL.Quaterniond quat, out MonoMac.OpenGL.Vector2d result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(valuetype MonoMac.OpenGL.Vector2d vec, valuetype MonoMac.OpenGL.Quaterniond quat, valuetype MonoMac.OpenGL.Vector2d result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vec" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="ref" />
        <Parameter Name="quat" Type="MonoMac.OpenGL.Quaterniond&amp;" RefType="ref" />
        <Parameter Name="result" Type="MonoMac.OpenGL.Vector2d&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="vec">The vector to transform.</param>
        <param name="quat">The quaternion to rotate the vector by.</param>
        <param name="result">The result of the operation.</param>
        <summary>
            Transforms a vector by a quaternion rotation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnitX">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d UnitX;" />
      <MemberSignature Language="ILAsm" Value=".field public static valuetype MonoMac.OpenGL.Vector2d UnitX" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Defines a unit-length Vector2d that points towards the X-axis.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnitY">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d UnitY;" />
      <MemberSignature Language="ILAsm" Value=".field public static valuetype MonoMac.OpenGL.Vector2d UnitY" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Defines a unit-length Vector2d that points towards the Y-axis.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X;" />
      <MemberSignature Language="ILAsm" Value=".field public float64 X" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The X coordinate of this instance.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y;" />
      <MemberSignature Language="ILAsm" Value=".field public float64 Y" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The Y coordinate of this instance.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static MonoMac.OpenGL.Vector2d Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static valuetype MonoMac.OpenGL.Vector2d Zero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.OpenGL.Vector2d</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Defines a zero-length Vector2d.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
