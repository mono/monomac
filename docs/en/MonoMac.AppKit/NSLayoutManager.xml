<Type Name="NSLayoutManager" FullName="MonoMac.AppKit.NSLayoutManager">
  <TypeSignature Language="C#" Value="public class NSLayoutManager : MonoMac.Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSLayoutManager extends MonoMac.Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>MonoMac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoMac.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoMac.Foundation.Register("NSLayoutManager", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSLayoutManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("init")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSLayoutManager (MonoMac.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoMac.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoMac.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSLayoutManager (MonoMac.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoMac.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="MonoMac.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes when the derived class has an [Export] constructor.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they are initialized using an [Export] attribute. The argument value is ignore, typically the chaining would look like this:</para>
          <example>
            <code lang="C#">
public class MyClass : BaseClass {
    [Export ("initWithFoo:")]
    public MyClass (string foo) : base (NSObjectFlag.Empty)
    {
        ...
    }
</code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSLayoutManager (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:MonoMac.ObjCRuntime.GetNSObject (System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    You should not invoke this method directly, instead you should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTemporaryAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddTemporaryAttribute (string attrName, MonoMac.Foundation.NSObject value, MonoMac.Foundation.NSRange charRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTemporaryAttribute(string attrName, class MonoMac.Foundation.NSObject value, valuetype MonoMac.Foundation.NSRange charRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("addTemporaryAttribute:value:forCharacterRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrName" Type="System.String" />
        <Parameter Name="value" Type="MonoMac.Foundation.NSObject" />
        <Parameter Name="charRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="attrName">To be added.</param>
        <param name="value">To be added.</param>
        <param name="charRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTemporaryAttributes">
      <MemberSignature Language="C#" Value="public virtual void AddTemporaryAttributes (MonoMac.Foundation.NSDictionary attrs, MonoMac.Foundation.NSRange charRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTemporaryAttributes(class MonoMac.Foundation.NSDictionary attrs, valuetype MonoMac.Foundation.NSRange charRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("addTemporaryAttributes:forCharacterRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrs" Type="MonoMac.Foundation.NSDictionary" />
        <Parameter Name="charRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="attrs">To be added.</param>
        <param name="charRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTextContainer">
      <MemberSignature Language="C#" Value="public virtual void AddTextContainer (MonoMac.AppKit.NSTextContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTextContainer(class MonoMac.AppKit.NSTextContainer container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("addTextContainer:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowsNonContiguousLayout">
      <MemberSignature Language="C#" Value="public virtual bool AllowsNonContiguousLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsNonContiguousLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("allowsNonContiguousLayout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setAllowsNonContiguousLayout:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachmentSizeForGlyphAt">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.SizeF AttachmentSizeForGlyphAt (int glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.SizeF AttachmentSizeForGlyphAt(int32 glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("attachmentSizeForGlyphAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributedString">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSAttributedString AttributedString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.Foundation.NSAttributedString AttributedString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("attributedString")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSAttributedString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundLayoutEnabled">
      <MemberSignature Language="C#" Value="public virtual bool BackgroundLayoutEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundLayoutEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("backgroundLayoutEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setBackgroundLayoutEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundingRectForGlyphRange">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.RectangleF BoundingRectForGlyphRange (MonoMac.Foundation.NSRange glyphRange, MonoMac.AppKit.NSTextContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.RectangleF BoundingRectForGlyphRange(valuetype MonoMac.Foundation.NSRange glyphRange, class MonoMac.AppKit.NSTextContainer container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("boundingRectForGlyphRange:inTextContainer:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphRange" Type="MonoMac.Foundation.NSRange" />
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
      </Parameters>
      <Docs>
        <param name="glyphRange">To be added.</param>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundsRect">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.RectangleF BoundsRect (MonoMac.AppKit.NSTextBlock block, MonoMac.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.RectangleF BoundsRect(class MonoMac.AppKit.NSTextBlock block, valuetype MonoMac.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("boundsRectForTextBlock:glyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="block" Type="MonoMac.AppKit.NSTextBlock" />
        <Parameter Name="glyphRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="block">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterIndexForGlyphAtIndex">
      <MemberSignature Language="C#" Value="public virtual uint CharacterIndexForGlyphAtIndex (int glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 CharacterIndexForGlyphAtIndex(int32 glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("characterIndexForGlyphAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterIndexForPoint">
      <MemberSignature Language="C#" Value="public virtual uint CharacterIndexForPoint (System.Drawing.PointF point, MonoMac.AppKit.NSTextContainer container, float fractionOfDistanceBetweenInsertionPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 CharacterIndexForPoint(valuetype System.Drawing.PointF point, class MonoMac.AppKit.NSTextContainer container, float32 fractionOfDistanceBetweenInsertionPoints) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
        <Parameter Name="fractionOfDistanceBetweenInsertionPoints" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <param name="container">To be added.</param>
        <param name="fractionOfDistanceBetweenInsertionPoints">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each MonoMac class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAttachmentScaling">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSImageScaling DefaultAttachmentScaling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoMac.AppKit.NSImageScaling DefaultAttachmentScaling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("defaultAttachmentScaling")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setDefaultAttachmentScaling:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSImageScaling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultBaselineOffsetForFont">
      <MemberSignature Language="C#" Value="public virtual float DefaultBaselineOffsetForFont (MonoMac.AppKit.NSFont theFont);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 DefaultBaselineOffsetForFont(class MonoMac.AppKit.NSFont theFont) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("defaultBaselineOffsetForFont:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theFont" Type="MonoMac.AppKit.NSFont" />
      </Parameters>
      <Docs>
        <param name="theFont">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLineHeightForFont">
      <MemberSignature Language="C#" Value="public virtual float DefaultLineHeightForFont (MonoMac.AppKit.NSFont theFont);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 DefaultLineHeightForFont(class MonoMac.AppKit.NSFont theFont) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("defaultLineHeightForFont:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theFont" Type="MonoMac.AppKit.NSFont" />
      </Parameters>
      <Docs>
        <param name="theFont">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegate">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSLayoutManagerDelegate Delegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSLayoutManagerDelegate Delegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSLayoutManagerDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An instance of the MonoMac.AppKit.NSLayoutManagerDelegate model class which acts as the class delegate.</summary>
        <value>The instance of the MonoMac.AppKit.NSLayoutManagerDelegate model class</value>
        <remarks>
          <para>The delegate instance assigned to this object will be used to handle events or provide data on demand to this class.</para>
          <para>When setting the Delegate or WeakDelegate values events will be delivered to the specified instance instead of being delivered to the C#-style events</para>
          <para>This is the strongly typed version of the object, use the WeakDelegate property instead if you want to merely assign a class derived from NSObject that has been decorated with [Export] attributes.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteGlyphs">
      <MemberSignature Language="C#" Value="public virtual void DeleteGlyphs (MonoMac.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteGlyphs(valuetype MonoMac.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("deleteGlyphsInRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawsOutsideLineFragmentForGlyphAt">
      <MemberSignature Language="C#" Value="public virtual bool DrawsOutsideLineFragmentForGlyphAt (int glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DrawsOutsideLineFragmentForGlyphAt(int32 glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("drawsOutsideLineFragmentForGlyphAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureGlyphsForCharacterRange">
      <MemberSignature Language="C#" Value="public virtual void EnsureGlyphsForCharacterRange (MonoMac.Foundation.NSRange charRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureGlyphsForCharacterRange(valuetype MonoMac.Foundation.NSRange charRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("ensureGlyphsForCharacterRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="charRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureGlyphsForGlyphRange">
      <MemberSignature Language="C#" Value="public virtual void EnsureGlyphsForGlyphRange (MonoMac.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureGlyphsForGlyphRange(valuetype MonoMac.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("ensureGlyphsForGlyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureLayoutForBoundingRect">
      <MemberSignature Language="C#" Value="public virtual void EnsureLayoutForBoundingRect (System.Drawing.RectangleF bounds, MonoMac.AppKit.NSTextContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureLayoutForBoundingRect(valuetype System.Drawing.RectangleF bounds, class MonoMac.AppKit.NSTextContainer container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("ensureLayoutForBoundingRect:inTextContainer:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.RectangleF" />
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
      </Parameters>
      <Docs>
        <param name="bounds">To be added.</param>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureLayoutForCharacterRange">
      <MemberSignature Language="C#" Value="public virtual void EnsureLayoutForCharacterRange (MonoMac.Foundation.NSRange charRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureLayoutForCharacterRange(valuetype MonoMac.Foundation.NSRange charRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("ensureLayoutForCharacterRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="charRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureLayoutForGlyphRange">
      <MemberSignature Language="C#" Value="public virtual void EnsureLayoutForGlyphRange (MonoMac.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureLayoutForGlyphRange(valuetype MonoMac.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("ensureLayoutForGlyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureLayoutForTextContainer">
      <MemberSignature Language="C#" Value="public virtual void EnsureLayoutForTextContainer (MonoMac.AppKit.NSTextContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureLayoutForTextContainer(class MonoMac.AppKit.NSTextContainer container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("ensureLayoutForTextContainer:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraLineFragmentRect">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.RectangleF ExtraLineFragmentRect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF ExtraLineFragmentRect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("extraLineFragmentRect")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraLineFragmentTextContainer">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSTextContainer ExtraLineFragmentTextContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextContainer ExtraLineFragmentTextContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("extraLineFragmentTextContainer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraLineFragmentUsedRect">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.RectangleF ExtraLineFragmentUsedRect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF ExtraLineFragmentUsedRect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("extraLineFragmentUsedRect")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstUnlaidCharacterIndex">
      <MemberSignature Language="C#" Value="public virtual int FirstUnlaidCharacterIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstUnlaidCharacterIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("firstUnlaidCharacterIndex")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstUnlaidGlyphIndex">
      <MemberSignature Language="C#" Value="public virtual int FirstUnlaidGlyphIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstUnlaidGlyphIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("firstUnlaidGlyphIndex")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FractionOfDistanceThroughGlyphForPoint">
      <MemberSignature Language="C#" Value="public virtual float FractionOfDistanceThroughGlyphForPoint (System.Drawing.PointF point, MonoMac.AppKit.NSTextContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 FractionOfDistanceThroughGlyphForPoint(valuetype System.Drawing.PointF point, class MonoMac.AppKit.NSTextContainer container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("fractionOfDistanceThroughGlyphForPoint:inTextContainer:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstUnlaidCharacterIndex">
      <MemberSignature Language="C#" Value="public virtual void GetFirstUnlaidCharacterIndex (int charIndex, int glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetFirstUnlaidCharacterIndex(int32 charIndex, int32 glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("getFirstUnlaidCharacterIndex:glyphIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="glyphIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphRange">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSRange GetGlyphRange (MonoMac.AppKit.NSTextContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoMac.Foundation.NSRange GetGlyphRange(class MonoMac.AppKit.NSTextContainer container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("glyphRangeForTextContainer:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineFragmentInsertionPoints">
      <MemberSignature Language="C#" Value="public virtual uint GetLineFragmentInsertionPoints (int charIndex, bool aFlag, bool dFlag, float positions, uint charIndexes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 GetLineFragmentInsertionPoints(int32 charIndex, bool aFlag, bool dFlag, float32 positions, unsigned int32 charIndexes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="aFlag" Type="System.Boolean" />
        <Parameter Name="dFlag" Type="System.Boolean" />
        <Parameter Name="positions" Type="System.Single" />
        <Parameter Name="charIndexes" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="charIndex">To be added.</param>
        <param name="aFlag">To be added.</param>
        <param name="dFlag">To be added.</param>
        <param name="positions">To be added.</param>
        <param name="charIndexes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsedRectForTextContainer">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.RectangleF GetUsedRectForTextContainer (MonoMac.AppKit.NSTextContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.RectangleF GetUsedRectForTextContainer(class MonoMac.AppKit.NSTextContainer container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("usedRectForTextContainer:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphAtIndexisValidIndex">
      <MemberSignature Language="C#" Value="public virtual uint GlyphAtIndexisValidIndex (int glyphIndex, bool isValidIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 GlyphAtIndexisValidIndex(int32 glyphIndex, bool isValidIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("glyphAtIndex:isValidIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.Int32" />
        <Parameter Name="isValidIndex" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">To be added.</param>
        <param name="isValidIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphCount">
      <MemberSignature Language="C#" Value="public virtual uint GlyphCount (int glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 GlyphCount(int32 glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("glyphAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphGenerator">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSGlyphGenerator GlyphGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSGlyphGenerator GlyphGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("glyphGenerator")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setGlyphGenerator:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSGlyphGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphIndexForCharacterAtIndex">
      <MemberSignature Language="C#" Value="public virtual uint GlyphIndexForCharacterAtIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 GlyphIndexForCharacterAtIndex(int32 charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("glyphIndexForCharacterAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphIndexForPoint">
      <MemberSignature Language="C#" Value="public virtual uint GlyphIndexForPoint (System.Drawing.PointF point, MonoMac.AppKit.NSTextContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 GlyphIndexForPoint(valuetype System.Drawing.PointF point, class MonoMac.AppKit.NSTextContainer container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("glyphIndexForPoint:inTextContainer:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphIndexForPointInTextContainer">
      <MemberSignature Language="C#" Value="public virtual uint GlyphIndexForPointInTextContainer (System.Drawing.PointF point, MonoMac.AppKit.NSTextContainer container, float fractionOfDistanceThroughGlyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 GlyphIndexForPointInTextContainer(valuetype System.Drawing.PointF point, class MonoMac.AppKit.NSTextContainer container, float32 fractionOfDistanceThroughGlyph) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
        <Parameter Name="fractionOfDistanceThroughGlyph" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <param name="container">To be added.</param>
        <param name="fractionOfDistanceThroughGlyph">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphRangeForBoundingRect">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSRange GlyphRangeForBoundingRect (System.Drawing.RectangleF bounds, MonoMac.AppKit.NSTextContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoMac.Foundation.NSRange GlyphRangeForBoundingRect(valuetype System.Drawing.RectangleF bounds, class MonoMac.AppKit.NSTextContainer container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("glyphRangeForBoundingRect:inTextContainer:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.RectangleF" />
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
      </Parameters>
      <Docs>
        <param name="bounds">To be added.</param>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphRangeForBoundingRectWithoutAdditionalLayout">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSRange GlyphRangeForBoundingRectWithoutAdditionalLayout (System.Drawing.RectangleF bounds, MonoMac.AppKit.NSTextContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoMac.Foundation.NSRange GlyphRangeForBoundingRectWithoutAdditionalLayout(valuetype System.Drawing.RectangleF bounds, class MonoMac.AppKit.NSTextContainer container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.RectangleF" />
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
      </Parameters>
      <Docs>
        <param name="bounds">To be added.</param>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNonContiguousLayout">
      <MemberSignature Language="C#" Value="public virtual bool HasNonContiguousLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasNonContiguousLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("hasNonContiguousLayout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HyphenationFactor">
      <MemberSignature Language="C#" Value="public virtual float HyphenationFactor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HyphenationFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("hyphenationFactor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setHyphenationFactor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertGlyph">
      <MemberSignature Language="C#" Value="public virtual void InsertGlyph (uint glyph, int glyphIndex, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertGlyph(unsigned int32 glyph, int32 glyphIndex, int32 charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("insertGlyph:atGlyphIndex:characterIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyph" Type="System.UInt32" />
        <Parameter Name="glyphIndex" Type="System.Int32" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="glyph">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertTextContainer">
      <MemberSignature Language="C#" Value="public virtual void InsertTextContainer (MonoMac.AppKit.NSTextContainer container, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertTextContainer(class MonoMac.AppKit.NSTextContainer container, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("insertTextContainer:atIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntAttributeforGlyphAtIndex">
      <MemberSignature Language="C#" Value="public virtual int IntAttributeforGlyphAtIndex (int attributeTag, int glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IntAttributeforGlyphAtIndex(int32 attributeTag, int32 glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("intAttribute:forGlyphAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeTag" Type="System.Int32" />
        <Parameter Name="glyphIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attributeTag">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateDisplayForCharacterRange">
      <MemberSignature Language="C#" Value="public virtual void InvalidateDisplayForCharacterRange (MonoMac.Foundation.NSRange charRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateDisplayForCharacterRange(valuetype MonoMac.Foundation.NSRange charRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("invalidateDisplayForCharacterRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="charRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateDisplayForGlyphRange">
      <MemberSignature Language="C#" Value="public virtual void InvalidateDisplayForGlyphRange (MonoMac.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateDisplayForGlyphRange(valuetype MonoMac.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("invalidateDisplayForGlyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateGlyphsOnLayoutInvalidation">
      <MemberSignature Language="C#" Value="public virtual void InvalidateGlyphsOnLayoutInvalidation (MonoMac.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateGlyphsOnLayoutInvalidation(valuetype MonoMac.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("invalidateGlyphsOnLayoutInvalidationForGlyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidGlyphIndex">
      <MemberSignature Language="C#" Value="public virtual bool IsValidGlyphIndex (int glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidGlyphIndex(int32 glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("isValidGlyphIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutOptions">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSGlyphStorageOptions LayoutOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoMac.AppKit.NSGlyphStorageOptions LayoutOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("layoutOptions")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSGlyphStorageOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutRect">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.RectangleF LayoutRect (MonoMac.AppKit.NSTextBlock block, MonoMac.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.RectangleF LayoutRect(class MonoMac.AppKit.NSTextBlock block, valuetype MonoMac.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("layoutRectForTextBlock:glyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="block" Type="MonoMac.AppKit.NSTextBlock" />
        <Parameter Name="glyphRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="block">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationForGlyphAtIndex">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.PointF LocationForGlyphAtIndex (int glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.PointF LocationForGlyphAtIndex(int32 glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("locationForGlyphAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotShownAttributeForGlyphAtIndex">
      <MemberSignature Language="C#" Value="public virtual bool NotShownAttributeForGlyphAtIndex (int glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NotShownAttributeForGlyphAtIndex(int32 glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("notShownAttributeForGlyphAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfGlyphs">
      <MemberSignature Language="C#" Value="public virtual int NumberOfGlyphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfGlyphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("numberOfGlyphs")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeOfNominallySpacedGlyphsContainingIndex">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSRange RangeOfNominallySpacedGlyphsContainingIndex (int glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoMac.Foundation.NSRange RangeOfNominallySpacedGlyphsContainingIndex(int32 glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("rangeOfNominallySpacedGlyphsContainingIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTemporaryAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveTemporaryAttribute (string attrName, MonoMac.Foundation.NSRange charRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveTemporaryAttribute(string attrName, valuetype MonoMac.Foundation.NSRange charRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("removeTemporaryAttribute:forCharacterRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrName" Type="System.String" />
        <Parameter Name="charRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="attrName">To be added.</param>
        <param name="charRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTextContainer">
      <MemberSignature Language="C#" Value="public virtual void RemoveTextContainer (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveTextContainer(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("removeTextContainerAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceGlyphAtIndex">
      <MemberSignature Language="C#" Value="public virtual void ReplaceGlyphAtIndex (int glyphIndex, uint newGlyph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceGlyphAtIndex(int32 glyphIndex, unsigned int32 newGlyph) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("replaceGlyphAtIndex:withGlyph:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyphIndex" Type="System.Int32" />
        <Parameter Name="newGlyph" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="glyphIndex">To be added.</param>
        <param name="newGlyph">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceTextStorage">
      <MemberSignature Language="C#" Value="public virtual void ReplaceTextStorage (MonoMac.AppKit.NSTextStorage newTextStorage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceTextStorage(class MonoMac.AppKit.NSTextStorage newTextStorage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("replaceTextStorage:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newTextStorage" Type="MonoMac.AppKit.NSTextStorage" />
      </Parameters>
      <Docs>
        <param name="newTextStorage">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttachmentSize">
      <MemberSignature Language="C#" Value="public virtual void SetAttachmentSize (System.Drawing.SizeF attachmentSize, MonoMac.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttachmentSize(valuetype System.Drawing.SizeF attachmentSize, valuetype MonoMac.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setAttachmentSize:forGlyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachmentSize" Type="System.Drawing.SizeF" />
        <Parameter Name="glyphRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="attachmentSize">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsRect">
      <MemberSignature Language="C#" Value="public virtual void SetBoundsRect (System.Drawing.RectangleF boundsRect, MonoMac.AppKit.NSTextBlock forTextBlock, MonoMac.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBoundsRect(valuetype System.Drawing.RectangleF boundsRect, class MonoMac.AppKit.NSTextBlock forTextBlock, valuetype MonoMac.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setBoundsRect:forTextBlock:glyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="boundsRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="forTextBlock" Type="MonoMac.AppKit.NSTextBlock" />
        <Parameter Name="glyphRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="boundsRect">To be added.</param>
        <param name="forTextBlock">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCharacterIndex">
      <MemberSignature Language="C#" Value="public virtual void SetCharacterIndex (int charIndex, int glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCharacterIndex(int32 charIndex, int32 glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setCharacterIndex:forGlyphAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="glyphIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDrawsOutsideLineFragment">
      <MemberSignature Language="C#" Value="public virtual void SetDrawsOutsideLineFragment (bool flag, int glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDrawsOutsideLineFragment(bool flag, int32 glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setDrawsOutsideLineFragment:forGlyphAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
        <Parameter Name="glyphIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="flag">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExtraLineFragmentRect">
      <MemberSignature Language="C#" Value="public virtual void SetExtraLineFragmentRect (System.Drawing.RectangleF fragmentRect, System.Drawing.RectangleF usedRect, MonoMac.AppKit.NSTextContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetExtraLineFragmentRect(valuetype System.Drawing.RectangleF fragmentRect, valuetype System.Drawing.RectangleF usedRect, class MonoMac.AppKit.NSTextContainer container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setExtraLineFragmentRect:usedRect:textContainer:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragmentRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="usedRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
      </Parameters>
      <Docs>
        <param name="fragmentRect">To be added.</param>
        <param name="usedRect">To be added.</param>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIntAttribute">
      <MemberSignature Language="C#" Value="public virtual void SetIntAttribute (int attributeTag, int value, int glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIntAttribute(int32 attributeTag, int32 value, int32 glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setIntAttribute:value:forGlyphAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeTag" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="glyphIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attributeTag">To be added.</param>
        <param name="value">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLayoutRect">
      <MemberSignature Language="C#" Value="public virtual void SetLayoutRect (System.Drawing.RectangleF layoutRect, MonoMac.AppKit.NSTextBlock forTextBlock, MonoMac.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLayoutRect(valuetype System.Drawing.RectangleF layoutRect, class MonoMac.AppKit.NSTextBlock forTextBlock, valuetype MonoMac.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setLayoutRect:forTextBlock:glyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="forTextBlock" Type="MonoMac.AppKit.NSTextBlock" />
        <Parameter Name="glyphRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="layoutRect">To be added.</param>
        <param name="forTextBlock">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineFragmentRect">
      <MemberSignature Language="C#" Value="public virtual void SetLineFragmentRect (System.Drawing.RectangleF fragmentRect, MonoMac.Foundation.NSRange glyphRange, System.Drawing.RectangleF usedRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLineFragmentRect(valuetype System.Drawing.RectangleF fragmentRect, valuetype MonoMac.Foundation.NSRange glyphRange, valuetype System.Drawing.RectangleF usedRect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setLineFragmentRect:forGlyphRange:usedRect:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragmentRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="glyphRange" Type="MonoMac.Foundation.NSRange" />
        <Parameter Name="usedRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="fragmentRect">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <param name="usedRect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLocation">
      <MemberSignature Language="C#" Value="public virtual void SetLocation (System.Drawing.PointF location, MonoMac.Foundation.NSRange forStartOfGlyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLocation(valuetype System.Drawing.PointF location, valuetype MonoMac.Foundation.NSRange forStartOfGlyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setLocation:forStartOfGlyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Drawing.PointF" />
        <Parameter Name="forStartOfGlyphRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <param name="forStartOfGlyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNotShownAttribute">
      <MemberSignature Language="C#" Value="public virtual void SetNotShownAttribute (bool flag, int glyphIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNotShownAttribute(bool flag, int32 glyphIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setNotShownAttribute:forGlyphAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
        <Parameter Name="glyphIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="flag">To be added.</param>
        <param name="glyphIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTemporaryAttributes">
      <MemberSignature Language="C#" Value="public virtual void SetTemporaryAttributes (MonoMac.Foundation.NSDictionary attrs, MonoMac.Foundation.NSRange charRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTemporaryAttributes(class MonoMac.Foundation.NSDictionary attrs, valuetype MonoMac.Foundation.NSRange charRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setTemporaryAttributes:forCharacterRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrs" Type="MonoMac.Foundation.NSDictionary" />
        <Parameter Name="charRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="attrs">To be added.</param>
        <param name="charRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTextContainerForRange">
      <MemberSignature Language="C#" Value="public virtual void SetTextContainerForRange (MonoMac.AppKit.NSTextContainer container, MonoMac.Foundation.NSRange glyphRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTextContainerForRange(class MonoMac.AppKit.NSTextContainer container, valuetype MonoMac.Foundation.NSRange glyphRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setTextContainer:forGlyphRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
        <Parameter Name="glyphRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <param name="glyphRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowsControlCharacters">
      <MemberSignature Language="C#" Value="public virtual bool ShowsControlCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowsControlCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("showsControlCharacters")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setShowsControlCharacters:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowsInvisibleCharacters">
      <MemberSignature Language="C#" Value="public virtual bool ShowsInvisibleCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowsInvisibleCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("showsInvisibleCharacters")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setShowsInvisibleCharacters:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubstituteFontForFont">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSFont SubstituteFontForFont (MonoMac.AppKit.NSFont originalFont);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoMac.AppKit.NSFont SubstituteFontForFont(class MonoMac.AppKit.NSFont originalFont) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("substituteFontForFont:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSFont</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalFont" Type="MonoMac.AppKit.NSFont" />
      </Parameters>
      <Docs>
        <param name="originalFont">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextContainerChangedGeometry">
      <MemberSignature Language="C#" Value="public virtual void TextContainerChangedGeometry (MonoMac.AppKit.NSTextContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TextContainerChangedGeometry(class MonoMac.AppKit.NSTextContainer container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("textContainerChangedGeometry:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextContainerChangedTextView">
      <MemberSignature Language="C#" Value="public virtual void TextContainerChangedTextView (MonoMac.AppKit.NSTextContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TextContainerChangedTextView(class MonoMac.AppKit.NSTextContainer container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("textContainerChangedTextView:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextContainers">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSTextContainer[] TextContainers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextContainer[] TextContainers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("textContainers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextContainer[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextStorage">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSTextStorage TextStorage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextStorage TextStorage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("textStorage")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setTextStorage:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextStorage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextStorageEdited">
      <MemberSignature Language="C#" Value="public virtual void TextStorageEdited (MonoMac.AppKit.NSTextStorage str, MonoMac.AppKit.NSTextStorageEditedFlags editedMask, MonoMac.Foundation.NSRange newCharRange, int changeInLength, MonoMac.Foundation.NSRange invalidatedCharRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TextStorageEdited(class MonoMac.AppKit.NSTextStorage str, valuetype MonoMac.AppKit.NSTextStorageEditedFlags editedMask, valuetype MonoMac.Foundation.NSRange newCharRange, int32 changeInLength, valuetype MonoMac.Foundation.NSRange invalidatedCharRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("textStorage:edited:range:changeInLength:invalidatedRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="MonoMac.AppKit.NSTextStorage" />
        <Parameter Name="editedMask" Type="MonoMac.AppKit.NSTextStorageEditedFlags" />
        <Parameter Name="newCharRange" Type="MonoMac.Foundation.NSRange" />
        <Parameter Name="changeInLength" Type="System.Int32" />
        <Parameter Name="invalidatedCharRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <param name="editedMask">To be added.</param>
        <param name="newCharRange">To be added.</param>
        <param name="changeInLength">To be added.</param>
        <param name="invalidatedCharRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Typesetter">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSTypesetter Typesetter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTypesetter Typesetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("typesetter")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setTypesetter:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTypesetter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypesetterBehavior">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSTypesetterBehavior TypesetterBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoMac.AppKit.NSTypesetterBehavior TypesetterBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("typesetterBehavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setTypesetterBehavior:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTypesetterBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesFontLeading">
      <MemberSignature Language="C#" Value="public virtual bool UsesFontLeading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesFontLeading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("usesFontLeading")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setUsesFontLeading:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesScreenFonts">
      <MemberSignature Language="C#" Value="public virtual bool UsesScreenFonts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesScreenFonts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("usesScreenFonts")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setUsesScreenFonts:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakDelegate">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSObject WeakDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.Foundation.NSObject WeakDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("delegate")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setDelegate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An object that can respond to the delegate protocol for this type</summary>
        <value>The instance that will respond to events and data requests.</value>
        <remarks>
          <para>The delegate instance assigned to this object will be used to handle events or provide data on demand to this class.</para>
          <para>When setting the Delegate or WeakDelegate values events will be delivered to the specified instance instead of being delivered to the C#-style events</para>
          <para>   Methods must be decorated with the [Export ("selectorName")] attribute to respond to each method from the protocol.   Alternatively use the Delegate method which is strongly typed and does not require the [Export] attributes on methods.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
