<Type Name="NSCollectionViewDelegate" FullName="MonoMac.AppKit.NSCollectionViewDelegate">
  <TypeSignature Language="C#" Value="public class NSCollectionViewDelegate : MonoMac.Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>monomac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoMac.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoMac.Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoMac.Foundation.Register("NSCollectionViewDelegate")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSCollectionViewDelegate ();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("init")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSCollectionViewDelegate (MonoMac.Foundation.NSCoder coder);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoMac.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSCollectionViewDelegate (MonoMac.Foundation.NSObjectFlag t);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="MonoMac.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes when the derived class has an [Export] constructor.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they are initialized using an [Export] attribute. The argument value is ignore, typically the chaining would look like this:</para>
          <example>
            <code lang="C#">
public class MyClass : BaseClass {
    [Export ("initWithFoo:")]
    public MyClass (string foo) : base (NSObjectFlag.Empty)
    {
        ...
    }
</code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSCollectionViewDelegate (IntPtr handle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:MonoMac.ObjCRuntime.GetNSObject (System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    You should not invoke this method directly, instead you should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptDrop">
      <MemberSignature Language="C#" Value="public virtual bool AcceptDrop (MonoMac.AppKit.NSCollectionView collectionView, MonoMac.AppKit.NSDraggingInfo draggingInfo, int index, MonoMac.AppKit.NSCollectionViewDropOperation dropOperation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("collectionView:acceptDrop:index:dropOperation:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="MonoMac.AppKit.NSCollectionView" />
        <Parameter Name="draggingInfo" Type="MonoMac.AppKit.NSDraggingInfo" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="dropOperation" Type="MonoMac.AppKit.NSCollectionViewDropOperation" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="draggingInfo">To be added.</param>
        <param name="index">To be added.</param>
        <param name="dropOperation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDragItems">
      <MemberSignature Language="C#" Value="public virtual bool CanDragItems (MonoMac.AppKit.NSCollectionView collectionView, MonoMac.Foundation.NSIndexSet indexes, MonoMac.AppKit.NSEvent evt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("collectionView:canDragItemsAtIndexes:withEvent:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="MonoMac.AppKit.NSCollectionView" />
        <Parameter Name="indexes" Type="MonoMac.Foundation.NSIndexSet" />
        <Parameter Name="evt" Type="MonoMac.AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="indexes">To be added.</param>
        <param name="evt">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamesOfPromisedFilesDroppedAtDestination">
      <MemberSignature Language="C#" Value="public virtual string[] NamesOfPromisedFilesDroppedAtDestination (MonoMac.AppKit.NSCollectionView collectionView, MonoMac.Foundation.NSUrl dropURL, MonoMac.Foundation.NSIndexSet indexes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="MonoMac.AppKit.NSCollectionView" />
        <Parameter Name="dropURL" Type="MonoMac.Foundation.NSUrl" />
        <Parameter Name="indexes" Type="MonoMac.Foundation.NSIndexSet" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="dropURL">To be added.</param>
        <param name="indexes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateDrop">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSDragOperation ValidateDrop (MonoMac.AppKit.NSCollectionView collectionView, MonoMac.AppKit.NSDraggingInfo draggingInfo, int proposedDropIndex, MonoMac.AppKit.NSCollectionViewDropOperation proposedDropOperation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("collectionView:validateDrop:proposedIndex:dropOperation:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSDragOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="MonoMac.AppKit.NSCollectionView" />
        <Parameter Name="draggingInfo" Type="MonoMac.AppKit.NSDraggingInfo" />
        <Parameter Name="proposedDropIndex" Type="System.Int32" />
        <Parameter Name="proposedDropOperation" Type="MonoMac.AppKit.NSCollectionViewDropOperation" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="draggingInfo">To be added.</param>
        <param name="proposedDropIndex">To be added.</param>
        <param name="proposedDropOperation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteItems">
      <MemberSignature Language="C#" Value="public virtual bool WriteItems (MonoMac.AppKit.NSCollectionView collectionView, MonoMac.Foundation.NSIndexSet indexes, MonoMac.AppKit.NSPasteboard toPasteboard);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("collectionView:writeItemsAtIndexes:toPasteboard:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionView" Type="MonoMac.AppKit.NSCollectionView" />
        <Parameter Name="indexes" Type="MonoMac.Foundation.NSIndexSet" />
        <Parameter Name="toPasteboard" Type="MonoMac.AppKit.NSPasteboard" />
      </Parameters>
      <Docs>
        <param name="collectionView">To be added.</param>
        <param name="indexes">To be added.</param>
        <param name="toPasteboard">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
