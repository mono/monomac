<Type Name="NSTextView" FullName="MonoMac.AppKit.NSTextView">
  <TypeSignature Language="C#" Value="public class NSTextView : MonoMac.AppKit.NSText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSTextView extends MonoMac.AppKit.NSText" />
  <AssemblyInfo>
    <AssemblyName>MonoMac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoMac.AppKit.NSText</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoMac.Foundation.Register("NSTextView", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("init")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextView (MonoMac.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoMac.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoMac.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextView (MonoMac.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoMac.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="MonoMac.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes when the derived class has an [Export] constructor.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they are initialized using an [Export] attribute. The argument value is ignore, typically the chaining would look like this:</para>
          <example>
            <code lang="C#">
public class MyClass : BaseClass {
    [Export ("initWithFoo:")]
    public MyClass (string foo) : base (NSObjectFlag.Empty)
    {
        ...
    }
</code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextView (System.Drawing.RectangleF frameRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF frameRect) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("initWithFrame:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="frameRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="frameRect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextView (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:MonoMac.ObjCRuntime.GetNSObject (System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    You should not invoke this method directly, instead you should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextView (System.Drawing.RectangleF frameRect, MonoMac.AppKit.NSTextContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF frameRect, class MonoMac.AppKit.NSTextContainer container) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("initWithFrame:textContainer:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="frameRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="container" Type="MonoMac.AppKit.NSTextContainer" />
      </Parameters>
      <Docs>
        <param name="frameRect">To be added.</param>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptableDragTypes">
      <MemberSignature Language="C#" Value="public virtual string[] AcceptableDragTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] AcceptableDragTypes() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("acceptableDragTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsGlyphInfo">
      <MemberSignature Language="C#" Value="public virtual bool AcceptsGlyphInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsGlyphInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("acceptsGlyphInfo")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setAcceptsGlyphInfo:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignJustified">
      <MemberSignature Language="C#" Value="public virtual void AlignJustified (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AlignJustified(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("alignJustified:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowedInputSourceLocales">
      <MemberSignature Language="C#" Value="public virtual string[] AllowedInputSourceLocales { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllowedInputSourceLocales" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("allowedInputSourceLocales")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setAllowedInputSourceLocales:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowsDocumentBackgroundColorChange">
      <MemberSignature Language="C#" Value="public virtual bool AllowsDocumentBackgroundColorChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsDocumentBackgroundColorChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("allowsDocumentBackgroundColorChange")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setAllowsDocumentBackgroundColorChange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowsImageEditing">
      <MemberSignature Language="C#" Value="public virtual bool AllowsImageEditing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsImageEditing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("allowsImageEditing")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setAllowsImageEditing:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowsUndo">
      <MemberSignature Language="C#" Value="public virtual bool AllowsUndo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsUndo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("allowsUndo")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setAllowsUndo:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticDashSubstitutionEnabled">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticDashSubstitutionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticDashSubstitutionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isAutomaticDashSubstitutionEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setAutomaticDashSubstitutionEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticDataDetectionEnabled">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticDataDetectionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticDataDetectionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isAutomaticDataDetectionEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setAutomaticDataDetectionEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticLinkDetectionEnabled">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticLinkDetectionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticLinkDetectionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isAutomaticLinkDetectionEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setAutomaticLinkDetectionEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticQuoteSubstitutionEnabled">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticQuoteSubstitutionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticQuoteSubstitutionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isAutomaticQuoteSubstitutionEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setAutomaticQuoteSubstitutionEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticSpellingCorrectionEnabled">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticSpellingCorrectionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticSpellingCorrectionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isAutomaticSpellingCorrectionEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setAutomaticSpellingCorrectionEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticTextReplacementEnabled">
      <MemberSignature Language="C#" Value="public virtual bool AutomaticTextReplacementEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticTextReplacementEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isAutomaticTextReplacementEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setAutomaticTextReplacementEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSColor BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSColor BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("backgroundColor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setBackgroundColor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakUndoCoalescing">
      <MemberSignature Language="C#" Value="public virtual void BreakUndoCoalescing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BreakUndoCoalescing() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("breakUndoCoalescing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellClicked">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MonoMac.AppKit.NSTextViewClickedEventArgs&gt; CellClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MonoMac.AppKit.NSTextViewClickedEventArgs&gt; CellClicked" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MonoMac.AppKit.NSTextViewClickedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellDoubleClicked">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MonoMac.AppKit.NSTextViewDoubleClickEventArgs&gt; CellDoubleClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MonoMac.AppKit.NSTextViewDoubleClickEventArgs&gt; CellDoubleClicked" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MonoMac.AppKit.NSTextViewDoubleClickEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeAttributes">
      <MemberSignature Language="C#" Value="public virtual void ChangeAttributes (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeAttributes(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("changeAttributes:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeColor">
      <MemberSignature Language="C#" Value="public virtual void ChangeColor (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeColor(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("changeColor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeDocumentBackgroundColor">
      <MemberSignature Language="C#" Value="public virtual void ChangeDocumentBackgroundColor (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeDocumentBackgroundColor(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("changeDocumentBackgroundColor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterIndex">
      <MemberSignature Language="C#" Value="public virtual uint CharacterIndex (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int32 CharacterIndex(valuetype System.Drawing.PointF point) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("characterIndexForInsertionAtPoint:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckText">
      <MemberSignature Language="C#" Value="public virtual void CheckText (MonoMac.Foundation.NSRange range, MonoMac.Foundation.NSTextCheckingTypes checkingTypes, MonoMac.Foundation.NSDictionary options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckText(valuetype MonoMac.Foundation.NSRange range, valuetype MonoMac.Foundation.NSTextCheckingTypes checkingTypes, class MonoMac.Foundation.NSDictionary options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("checkTextInRange:types:options:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="MonoMac.Foundation.NSRange" />
        <Parameter Name="checkingTypes" Type="MonoMac.Foundation.NSTextCheckingTypes" />
        <Parameter Name="options" Type="MonoMac.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="range">To be added.</param>
        <param name="checkingTypes">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckTextInDocument">
      <MemberSignature Language="C#" Value="public virtual void CheckTextInDocument (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckTextInDocument(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("checkTextInDocument:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckTextInSelection">
      <MemberSignature Language="C#" Value="public virtual void CheckTextInSelection (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckTextInSelection(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("checkTextInSelection:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each MonoMac class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpAfterDragOperation">
      <MemberSignature Language="C#" Value="public virtual void CleanUpAfterDragOperation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpAfterDragOperation() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("cleanUpAfterDragOperation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickedOnLink">
      <MemberSignature Language="C#" Value="public virtual void ClickedOnLink (MonoMac.Foundation.NSObject link, uint charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClickedOnLink(class MonoMac.Foundation.NSObject link, unsigned int32 charIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("clickedOnLink:atIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="link" Type="MonoMac.Foundation.NSObject" />
        <Parameter Name="charIndex" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="link">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public virtual void Complete (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("complete:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletionsForPartialWord">
      <MemberSignature Language="C#" Value="public virtual string[] CompletionsForPartialWord (MonoMac.Foundation.NSRange charRange, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] CompletionsForPartialWord(valuetype MonoMac.Foundation.NSRange charRange, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("completionsForPartialWordRange:indexOfSelectedItem:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charRange" Type="MonoMac.Foundation.NSRange" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charRange">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinuousSpellCheckingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool ContinuousSpellCheckingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContinuousSpellCheckingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isContinuousSpellCheckingEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setContinuousSpellCheckingEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultParagraphStyle">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSParagraphStyle DefaultParagraphStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSParagraphStyle DefaultParagraphStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("defaultParagraphStyle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setDefaultParagraphStyle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSParagraphStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegate">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSTextViewDelegate Delegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextViewDelegate Delegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("delegate")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setDelegate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextViewDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An instance of the MonoMac.AppKit.NSTextViewDelegate model class which acts as the class delegate.</summary>
        <value>The instance of the MonoMac.AppKit.NSTextViewDelegate model class</value>
        <remarks>
          <para>The delegate instance assigned to this object will be used to handle events or provide data on demand to this class.</para>
          <para>When setting the Delegate or WeakDelegate values events will be delivered to the specified instance instead of being delivered to the C#-style events</para>
          <para>This is the strongly typed version of the object, use the WeakDelegate property instead if you want to merely assign a class derived from NSObject that has been decorated with [Export] attributes.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeSelection">
      <MemberSignature Language="C#" Value="public event EventHandler DidChangeSelection;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DidChangeSelection" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeText">
      <MemberSignature Language="C#" Value="public virtual void DidChangeText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidChangeText() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("didChangeText")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangeTypingAttributes">
      <MemberSignature Language="C#" Value="public event EventHandler DidChangeTypingAttributes;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DidChangeTypingAttributes" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidCheckText">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSTextViewTextChecked DidCheckText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextViewTextChecked DidCheckText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextViewTextChecked</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplaysLinkToolTips">
      <MemberSignature Language="C#" Value="public virtual bool DisplaysLinkToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplaysLinkToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("displaysLinkToolTips")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setDisplaysLinkToolTips:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoCommandBySelector">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSTextViewSelectorCommand DoCommandBySelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextViewSelectorCommand DoCommandBySelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextViewSelectorCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DraggedCell">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MonoMac.AppKit.NSTextViewDraggedCellEventArgs&gt; DraggedCell;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MonoMac.AppKit.NSTextViewDraggedCellEventArgs&gt; DraggedCell" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MonoMac.AppKit.NSTextViewDraggedCellEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOperationForDraggingInfotype">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSDragOperation DragOperationForDraggingInfotype (MonoMac.AppKit.NSDraggingInfo dragInfo, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoMac.AppKit.NSDragOperation DragOperationForDraggingInfotype(class MonoMac.AppKit.NSDraggingInfo dragInfo, string type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("dragOperationForDraggingInfo:type:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSDragOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragInfo" Type="MonoMac.AppKit.NSDraggingInfo" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dragInfo">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawInsertionPointInRectcolorturnedOn">
      <MemberSignature Language="C#" Value="public virtual void DrawInsertionPointInRectcolorturnedOn (System.Drawing.RectangleF rect, MonoMac.AppKit.NSColor color, bool turnedOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawInsertionPointInRectcolorturnedOn(valuetype System.Drawing.RectangleF rect, class MonoMac.AppKit.NSColor color, bool turnedOn) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("drawInsertionPointInRect:color:turnedOn:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="color" Type="MonoMac.AppKit.NSColor" />
        <Parameter Name="turnedOn" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="color">To be added.</param>
        <param name="turnedOn">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawsBackground">
      <MemberSignature Language="C#" Value="public virtual bool DrawsBackground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawsBackground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("drawsBackground")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setDrawsBackground:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawViewBackgroundInRect">
      <MemberSignature Language="C#" Value="public virtual void DrawViewBackgroundInRect (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawViewBackgroundInRect(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("drawViewBackgroundInRect:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Editable">
      <MemberSignature Language="C#" Value="public virtual bool Editable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Editable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isEditable")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setEditable:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnabledTextCheckingTypes">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSTextCheckingTypes EnabledTextCheckingTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoMac.Foundation.NSTextCheckingTypes EnabledTextCheckingTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("enabledTextCheckingTypes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setEnabledTextCheckingTypes:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSTextCheckingTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldEditor">
      <MemberSignature Language="C#" Value="public virtual bool FieldEditor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FieldEditor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isFieldEditor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setFieldEditor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompletions">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSTextViewCompletion GetCompletions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextViewCompletion GetCompletions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextViewCompletion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUndoManager">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSTextViewGetUndoManager GetUndoManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextViewGetUndoManager GetUndoManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextViewGetUndoManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWritablePasteboardTypes">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSTextViewCellPosition GetWritablePasteboardTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextViewCellPosition GetWritablePasteboardTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextViewCellPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrammarCheckingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GrammarCheckingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GrammarCheckingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isGrammarCheckingEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setGrammarCheckingEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleTextChecking">
      <MemberSignature Language="C#" Value="public virtual void HandleTextChecking (MonoMac.Foundation.NSTextCheckingResult[] results, MonoMac.Foundation.NSRange range, MonoMac.Foundation.NSTextCheckingTypes checkingTypes, MonoMac.Foundation.NSDictionary options, MonoMac.Foundation.NSOrthography orthography, int wordCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleTextChecking(class MonoMac.Foundation.NSTextCheckingResult[] results, valuetype MonoMac.Foundation.NSRange range, valuetype MonoMac.Foundation.NSTextCheckingTypes checkingTypes, class MonoMac.Foundation.NSDictionary options, class MonoMac.Foundation.NSOrthography orthography, int32 wordCount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("handleTextCheckingResults:forRange:types:options:orthography:wordCount:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="MonoMac.Foundation.NSTextCheckingResult[]" />
        <Parameter Name="range" Type="MonoMac.Foundation.NSRange" />
        <Parameter Name="checkingTypes" Type="MonoMac.Foundation.NSTextCheckingTypes" />
        <Parameter Name="options" Type="MonoMac.Foundation.NSDictionary" />
        <Parameter Name="orthography" Type="MonoMac.Foundation.NSOrthography" />
        <Parameter Name="wordCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="results">To be added.</param>
        <param name="range">To be added.</param>
        <param name="checkingTypes">To be added.</param>
        <param name="options">To be added.</param>
        <param name="orthography">To be added.</param>
        <param name="wordCount">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportsGraphics">
      <MemberSignature Language="C#" Value="public virtual bool ImportsGraphics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ImportsGraphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("importsGraphics")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setImportsGraphics:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCompletionforPartialWord">
      <MemberSignature Language="C#" Value="public virtual void InsertCompletionforPartialWord (string word, MonoMac.Foundation.NSRange charRange, int movement, bool isFinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCompletionforPartialWord(string word, valuetype MonoMac.Foundation.NSRange charRange, int32 movement, bool isFinal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("insertCompletion:forPartialWordRange:movement:isFinal:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="word" Type="System.String" />
        <Parameter Name="charRange" Type="MonoMac.Foundation.NSRange" />
        <Parameter Name="movement" Type="System.Int32" />
        <Parameter Name="isFinal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="word">To be added.</param>
        <param name="charRange">To be added.</param>
        <param name="movement">To be added.</param>
        <param name="isFinal">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertionPointColor">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSColor InsertionPointColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSColor InsertionPointColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("insertionPointColor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setInsertionPointColor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertText">
      <MemberSignature Language="C#" Value="public virtual void InsertText (MonoMac.Foundation.NSObject insertString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertText(class MonoMac.Foundation.NSObject insertString) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("insertText:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insertString" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="insertString">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateTextContainerOrigin">
      <MemberSignature Language="C#" Value="public virtual void InvalidateTextContainerOrigin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateTextContainerOrigin() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("invalidateTextContainerOrigin")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCoalescingUndo">
      <MemberSignature Language="C#" Value="public virtual bool IsCoalescingUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsCoalescingUndo() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("isCoalescingUndo")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutManager">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSLayoutManager LayoutManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSLayoutManager LayoutManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("layoutManager")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSLayoutManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkClicked">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSTextViewLink LinkClicked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextViewLink LinkClicked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextViewLink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkTextAttributes">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSDictionary LinkTextAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.Foundation.NSDictionary LinkTextAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("linkTextAttributes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setLinkTextAttributes:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoosenKerning">
      <MemberSignature Language="C#" Value="public virtual void LoosenKerning (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoosenKerning(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("loosenKerning:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LowerBaseline">
      <MemberSignature Language="C#" Value="public virtual void LowerBaseline (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LowerBaseline(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("lowerBaseline:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkedTextAttributes">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSDictionary MarkedTextAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.Foundation.NSDictionary MarkedTextAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("markedTextAttributes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setMarkedTextAttributes:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuForEvent">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSTextViewEventMenu MenuForEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextViewEventMenu MenuForEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextViewEventMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderFrontLinkPanel">
      <MemberSignature Language="C#" Value="public virtual void OrderFrontLinkPanel (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderFrontLinkPanel(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("orderFrontLinkPanel:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderFrontListPanel">
      <MemberSignature Language="C#" Value="public virtual void OrderFrontListPanel (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderFrontListPanel(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("orderFrontListPanel:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderFrontSpacingPanel">
      <MemberSignature Language="C#" Value="public virtual void OrderFrontSpacingPanel (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderFrontSpacingPanel(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("orderFrontSpacingPanel:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderFrontSubstitutionsPanel">
      <MemberSignature Language="C#" Value="public virtual void OrderFrontSubstitutionsPanel (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderFrontSubstitutionsPanel(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("orderFrontSubstitutionsPanel:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderFrontTablePanel">
      <MemberSignature Language="C#" Value="public virtual void OrderFrontTablePanel (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderFrontTablePanel(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("orderFrontTablePanel:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outline">
      <MemberSignature Language="C#" Value="public virtual void Outline (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Outline(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("outline:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAsPlainText">
      <MemberSignature Language="C#" Value="public virtual void PasteAsPlainText (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAsPlainText(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("pasteAsPlainText:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteAsRichText">
      <MemberSignature Language="C#" Value="public virtual void PasteAsRichText (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteAsRichText(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("pasteAsRichText:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformFindPanelAction">
      <MemberSignature Language="C#" Value="public virtual void PerformFindPanelAction (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformFindPanelAction(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("performFindPanelAction:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredPasteboardTypeFromArrayrestrictedToTypesFromArray">
      <MemberSignature Language="C#" Value="public virtual string PreferredPasteboardTypeFromArrayrestrictedToTypesFromArray (string[] availableTypes, string[] allowedTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string PreferredPasteboardTypeFromArrayrestrictedToTypesFromArray(string[] availableTypes, string[] allowedTypes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("preferredPasteboardTypeFromArray:restrictedToTypesFromArray:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableTypes" Type="System.String[]" />
        <Parameter Name="allowedTypes" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="availableTypes">To be added.</param>
        <param name="allowedTypes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseBaseline">
      <MemberSignature Language="C#" Value="public virtual void RaiseBaseline (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseBaseline(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("raiseBaseline:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeForUserCharacterAttributeChange">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSRange RangeForUserCharacterAttributeChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoMac.Foundation.NSRange RangeForUserCharacterAttributeChange() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("rangeForUserCharacterAttributeChange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeForUserCompletion">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSRange RangeForUserCompletion ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoMac.Foundation.NSRange RangeForUserCompletion() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("rangeForUserCompletion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeForUserParagraphAttributeChange">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSRange RangeForUserParagraphAttributeChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoMac.Foundation.NSRange RangeForUserParagraphAttributeChange() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("rangeForUserParagraphAttributeChange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeForUserTextChange">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSRange RangeForUserTextChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoMac.Foundation.NSRange RangeForUserTextChange() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("rangeForUserTextChange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangesForUserCharacterAttributeChange">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSArray RangesForUserCharacterAttributeChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoMac.Foundation.NSArray RangesForUserCharacterAttributeChange() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("rangesForUserCharacterAttributeChange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSArray</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangesForUserParagraphAttributeChange">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSArray RangesForUserParagraphAttributeChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoMac.Foundation.NSArray RangesForUserParagraphAttributeChange() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("rangesForUserParagraphAttributeChange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSArray</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangesForUserTextChange">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSArray RangesForUserTextChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoMac.Foundation.NSArray RangesForUserTextChange() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("rangesForUserTextChange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSArray</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadablePasteboardTypes">
      <MemberSignature Language="C#" Value="public virtual string[] ReadablePasteboardTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] ReadablePasteboardTypes() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("readablePasteboardTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadSelectionFromPasteboard">
      <MemberSignature Language="C#" Value="public virtual bool ReadSelectionFromPasteboard (MonoMac.AppKit.NSPasteboard pboard);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadSelectionFromPasteboard(class MonoMac.AppKit.NSPasteboard pboard) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("readSelectionFromPasteboard:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pboard" Type="MonoMac.AppKit.NSPasteboard" />
      </Parameters>
      <Docs>
        <param name="pboard">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadSelectionFromPasteboardtype">
      <MemberSignature Language="C#" Value="public virtual bool ReadSelectionFromPasteboardtype (MonoMac.AppKit.NSPasteboard pboard, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadSelectionFromPasteboardtype(class MonoMac.AppKit.NSPasteboard pboard, string type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("readSelectionFromPasteboard:type:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pboard" Type="MonoMac.AppKit.NSPasteboard" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pboard">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterForServices">
      <MemberSignature Language="C#" Value="public virtual void RegisterForServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterForServices() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("registerForServices")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceTextContainer">
      <MemberSignature Language="C#" Value="public virtual void ReplaceTextContainer (MonoMac.AppKit.NSTextContainer newContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceTextContainer(class MonoMac.AppKit.NSTextContainer newContainer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("replaceTextContainer:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newContainer" Type="MonoMac.AppKit.NSTextContainer" />
      </Parameters>
      <Docs>
        <param name="newContainer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RichText">
      <MemberSignature Language="C#" Value="public virtual bool RichText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RichText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isRichText")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setRichText:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewDidAddMarker">
      <MemberSignature Language="C#" Value="public virtual void RulerViewDidAddMarker (MonoMac.AppKit.NSRulerView ruler, MonoMac.AppKit.NSRulerMarker marker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RulerViewDidAddMarker(class MonoMac.AppKit.NSRulerView ruler, class MonoMac.AppKit.NSRulerMarker marker) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("rulerView:didAddMarker:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="MonoMac.AppKit.NSRulerView" />
        <Parameter Name="marker" Type="MonoMac.AppKit.NSRulerMarker" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="marker">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewDidMoveMarker">
      <MemberSignature Language="C#" Value="public virtual void RulerViewDidMoveMarker (MonoMac.AppKit.NSRulerView ruler, MonoMac.AppKit.NSRulerMarker marker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RulerViewDidMoveMarker(class MonoMac.AppKit.NSRulerView ruler, class MonoMac.AppKit.NSRulerMarker marker) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("rulerView:didMoveMarker:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="MonoMac.AppKit.NSRulerView" />
        <Parameter Name="marker" Type="MonoMac.AppKit.NSRulerMarker" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="marker">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewDidRemoveMarker">
      <MemberSignature Language="C#" Value="public virtual void RulerViewDidRemoveMarker (MonoMac.AppKit.NSRulerView ruler, MonoMac.AppKit.NSRulerMarker marker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RulerViewDidRemoveMarker(class MonoMac.AppKit.NSRulerView ruler, class MonoMac.AppKit.NSRulerMarker marker) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("rulerView:didRemoveMarker:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="MonoMac.AppKit.NSRulerView" />
        <Parameter Name="marker" Type="MonoMac.AppKit.NSRulerMarker" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="marker">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewHandleMouseDown">
      <MemberSignature Language="C#" Value="public virtual void RulerViewHandleMouseDown (MonoMac.AppKit.NSRulerView ruler, MonoMac.AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RulerViewHandleMouseDown(class MonoMac.AppKit.NSRulerView ruler, class MonoMac.AppKit.NSEvent theEvent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("rulerView:handleMouseDown:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="MonoMac.AppKit.NSRulerView" />
        <Parameter Name="theEvent" Type="MonoMac.AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewShouldAddMarker">
      <MemberSignature Language="C#" Value="public virtual bool RulerViewShouldAddMarker (MonoMac.AppKit.NSRulerView ruler, MonoMac.AppKit.NSRulerMarker marker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RulerViewShouldAddMarker(class MonoMac.AppKit.NSRulerView ruler, class MonoMac.AppKit.NSRulerMarker marker) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("rulerView:shouldAddMarker:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="MonoMac.AppKit.NSRulerView" />
        <Parameter Name="marker" Type="MonoMac.AppKit.NSRulerMarker" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="marker">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewShouldMoveMarker">
      <MemberSignature Language="C#" Value="public virtual bool RulerViewShouldMoveMarker (MonoMac.AppKit.NSRulerView ruler, MonoMac.AppKit.NSRulerMarker marker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RulerViewShouldMoveMarker(class MonoMac.AppKit.NSRulerView ruler, class MonoMac.AppKit.NSRulerMarker marker) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("rulerView:shouldMoveMarker:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="MonoMac.AppKit.NSRulerView" />
        <Parameter Name="marker" Type="MonoMac.AppKit.NSRulerMarker" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="marker">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewShouldRemoveMarker">
      <MemberSignature Language="C#" Value="public virtual bool RulerViewShouldRemoveMarker (MonoMac.AppKit.NSRulerView ruler, MonoMac.AppKit.NSRulerMarker marker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RulerViewShouldRemoveMarker(class MonoMac.AppKit.NSRulerView ruler, class MonoMac.AppKit.NSRulerMarker marker) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("rulerView:shouldRemoveMarker:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="MonoMac.AppKit.NSRulerView" />
        <Parameter Name="marker" Type="MonoMac.AppKit.NSRulerMarker" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="marker">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewWillAddMarkeratLocation">
      <MemberSignature Language="C#" Value="public virtual float RulerViewWillAddMarkeratLocation (MonoMac.AppKit.NSRulerView ruler, MonoMac.AppKit.NSRulerMarker marker, float location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 RulerViewWillAddMarkeratLocation(class MonoMac.AppKit.NSRulerView ruler, class MonoMac.AppKit.NSRulerMarker marker, float32 location) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("rulerView:willAddMarker:atLocation:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="MonoMac.AppKit.NSRulerView" />
        <Parameter Name="marker" Type="MonoMac.AppKit.NSRulerMarker" />
        <Parameter Name="location" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="marker">To be added.</param>
        <param name="location">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerViewWillMoveMarkertoLocation">
      <MemberSignature Language="C#" Value="public virtual float RulerViewWillMoveMarkertoLocation (MonoMac.AppKit.NSRulerView ruler, MonoMac.AppKit.NSRulerMarker marker, float location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 RulerViewWillMoveMarkertoLocation(class MonoMac.AppKit.NSRulerView ruler, class MonoMac.AppKit.NSRulerMarker marker, float32 location) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("rulerView:willMoveMarker:toLocation:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruler" Type="MonoMac.AppKit.NSRulerView" />
        <Parameter Name="marker" Type="MonoMac.AppKit.NSRulerMarker" />
        <Parameter Name="location" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="ruler">To be added.</param>
        <param name="marker">To be added.</param>
        <param name="location">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RulerVisible">
      <MemberSignature Language="C#" Value="public virtual bool RulerVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RulerVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isRulerVisible")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setRulerVisible:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="public virtual bool Selectable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selectable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isSelectable")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setSelectable:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedRanges">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSArray SelectedRanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.Foundation.NSArray SelectedRanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("selectedRanges")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setSelectedRanges:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedTextAttributes">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSDictionary SelectedTextAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.Foundation.NSDictionary SelectedTextAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("selectedTextAttributes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setSelectedTextAttributes:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionAffinity">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSSelectionAffinity SelectionAffinity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoMac.AppKit.NSSelectionAffinity SelectionAffinity() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("selectionAffinity")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSSelectionAffinity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionGranularity">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSSelectionGranularity SelectionGranularity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoMac.AppKit.NSSelectionGranularity SelectionGranularity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("selectionGranularity")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setSelectionGranularity:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSSelectionGranularity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionRange">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSRange SelectionRange (MonoMac.Foundation.NSRange proposedCharRange, MonoMac.AppKit.NSSelectionGranularity granularity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoMac.Foundation.NSRange SelectionRange(valuetype MonoMac.Foundation.NSRange proposedCharRange, valuetype MonoMac.AppKit.NSSelectionGranularity granularity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("selectionRangeForProposedRange:granularity:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proposedCharRange" Type="MonoMac.Foundation.NSRange" />
        <Parameter Name="granularity" Type="MonoMac.AppKit.NSSelectionGranularity" />
      </Parameters>
      <Docs>
        <param name="proposedCharRange">To be added.</param>
        <param name="granularity">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAlignmentrange">
      <MemberSignature Language="C#" Value="public virtual void SetAlignmentrange (MonoMac.AppKit.NSTextAlignment alignment, MonoMac.Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAlignmentrange(valuetype MonoMac.AppKit.NSTextAlignment alignment, valuetype MonoMac.Foundation.NSRange range) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setAlignment:range:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alignment" Type="MonoMac.AppKit.NSTextAlignment" />
        <Parameter Name="range" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="alignment">To be added.</param>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBaseWritingDirectionrange">
      <MemberSignature Language="C#" Value="public virtual void SetBaseWritingDirectionrange (MonoMac.AppKit.NSWritingDirection writingDirection, MonoMac.Foundation.NSRange range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBaseWritingDirectionrange(valuetype MonoMac.AppKit.NSWritingDirection writingDirection, valuetype MonoMac.Foundation.NSRange range) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setBaseWritingDirection:range:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writingDirection" Type="MonoMac.AppKit.NSWritingDirection" />
        <Parameter Name="range" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="writingDirection">To be added.</param>
        <param name="range">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetConstrainedFrameSize">
      <MemberSignature Language="C#" Value="public virtual void SetConstrainedFrameSize (System.Drawing.SizeF desiredSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetConstrainedFrameSize(valuetype System.Drawing.SizeF desiredSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setConstrainedFrameSize:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredSize" Type="System.Drawing.SizeF" />
      </Parameters>
      <Docs>
        <param name="desiredSize">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNeedsDisplay">
      <MemberSignature Language="C#" Value="public virtual void SetNeedsDisplay (System.Drawing.RectangleF rect, bool avoidAdditionalLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNeedsDisplay(valuetype System.Drawing.RectangleF rect, bool avoidAdditionalLayout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setNeedsDisplayInRect:avoidAdditionalLayout:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="avoidAdditionalLayout" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="avoidAdditionalLayout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedRange">
      <MemberSignature Language="C#" Value="public virtual void SetSelectedRange (MonoMac.Foundation.NSRange charRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSelectedRange(valuetype MonoMac.Foundation.NSRange charRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setSelectedRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="charRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedRange">
      <MemberSignature Language="C#" Value="public virtual void SetSelectedRange (MonoMac.Foundation.NSRange charRange, MonoMac.AppKit.NSSelectionAffinity affinity, bool stillSelectingFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSelectedRange(valuetype MonoMac.Foundation.NSRange charRange, valuetype MonoMac.AppKit.NSSelectionAffinity affinity, bool stillSelectingFlag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setSelectedRange:affinity:stillSelecting:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charRange" Type="MonoMac.Foundation.NSRange" />
        <Parameter Name="affinity" Type="MonoMac.AppKit.NSSelectionAffinity" />
        <Parameter Name="stillSelectingFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="charRange">To be added.</param>
        <param name="affinity">To be added.</param>
        <param name="stillSelectingFlag">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedRangeaffinitystillSelecting">
      <MemberSignature Language="C#" Value="public virtual void SetSelectedRangeaffinitystillSelecting (MonoMac.Foundation.NSRange charRange, MonoMac.AppKit.NSSelectionAffinity affinity, bool stillSelectingFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSelectedRangeaffinitystillSelecting(valuetype MonoMac.Foundation.NSRange charRange, valuetype MonoMac.AppKit.NSSelectionAffinity affinity, bool stillSelectingFlag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setSelectedRange:affinity:stillSelecting:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charRange" Type="MonoMac.Foundation.NSRange" />
        <Parameter Name="affinity" Type="MonoMac.AppKit.NSSelectionAffinity" />
        <Parameter Name="stillSelectingFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="charRange">To be added.</param>
        <param name="affinity">To be added.</param>
        <param name="stillSelectingFlag">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedRangesaffinitystillSelecting">
      <MemberSignature Language="C#" Value="public virtual void SetSelectedRangesaffinitystillSelecting (MonoMac.Foundation.NSArray ranges, MonoMac.AppKit.NSSelectionAffinity affinity, bool stillSelectingFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSelectedRangesaffinitystillSelecting(class MonoMac.Foundation.NSArray ranges, valuetype MonoMac.AppKit.NSSelectionAffinity affinity, bool stillSelectingFlag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setSelectedRanges:affinity:stillSelecting:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ranges" Type="MonoMac.Foundation.NSArray" />
        <Parameter Name="affinity" Type="MonoMac.AppKit.NSSelectionAffinity" />
        <Parameter Name="stillSelectingFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ranges">To be added.</param>
        <param name="affinity">To be added.</param>
        <param name="stillSelectingFlag">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpellingStaterange">
      <MemberSignature Language="C#" Value="public virtual void SetSpellingStaterange (int value, MonoMac.Foundation.NSRange charRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSpellingStaterange(int32 value, valuetype MonoMac.Foundation.NSRange charRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setSpellingState:range:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="charRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="charRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeText">
      <MemberSignature Language="C#" Value="public virtual bool ShouldChangeText (MonoMac.Foundation.NSRange affectedCharRange, string replacementString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldChangeText(valuetype MonoMac.Foundation.NSRange affectedCharRange, string replacementString) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("shouldChangeTextInRange:replacementString:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="affectedCharRange" Type="MonoMac.Foundation.NSRange" />
        <Parameter Name="replacementString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="affectedCharRange">To be added.</param>
        <param name="replacementString">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeTextInRange">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSTextViewChangeText ShouldChangeTextInRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextViewChangeText ShouldChangeTextInRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextViewChangeText</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeTextInRangereplacementString">
      <MemberSignature Language="C#" Value="public virtual bool ShouldChangeTextInRangereplacementString (MonoMac.Foundation.NSRange affectedCharRange, string replacementString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldChangeTextInRangereplacementString(valuetype MonoMac.Foundation.NSRange affectedCharRange, string replacementString) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("shouldChangeTextInRange:replacementString:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="affectedCharRange" Type="MonoMac.Foundation.NSRange" />
        <Parameter Name="replacementString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="affectedCharRange">To be added.</param>
        <param name="replacementString">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeTextInRanges">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSTextViewSelectionShouldChange ShouldChangeTextInRanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextViewSelectionShouldChange ShouldChangeTextInRanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextViewSelectionShouldChange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeTextInRangesreplacementStrings">
      <MemberSignature Language="C#" Value="public virtual bool ShouldChangeTextInRangesreplacementStrings (MonoMac.Foundation.NSArray affectedRanges, string[] replacementStrings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldChangeTextInRangesreplacementStrings(class MonoMac.Foundation.NSArray affectedRanges, string[] replacementStrings) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("shouldChangeTextInRanges:replacementStrings:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="affectedRanges" Type="MonoMac.Foundation.NSArray" />
        <Parameter Name="replacementStrings" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="affectedRanges">To be added.</param>
        <param name="replacementStrings">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldChangeTypingAttributes">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSTextViewTypeAttribute ShouldChangeTypingAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextViewTypeAttribute ShouldChangeTypingAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextViewTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldDrawInsertionPoint">
      <MemberSignature Language="C#" Value="public virtual bool ShouldDrawInsertionPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldDrawInsertionPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("shouldDrawInsertionPoint")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSetSpellingState">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSTextViewSpellingQuery ShouldSetSpellingState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextViewSpellingQuery ShouldSetSpellingState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextViewSpellingQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFindIndicatorForRange">
      <MemberSignature Language="C#" Value="public virtual void ShowFindIndicatorForRange (MonoMac.Foundation.NSRange charRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowFindIndicatorForRange(valuetype MonoMac.Foundation.NSRange charRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("showFindIndicatorForRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="charRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartDeleteRangeForProposedRange">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSRange SmartDeleteRangeForProposedRange (MonoMac.Foundation.NSRange proposedCharRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoMac.Foundation.NSRange SmartDeleteRangeForProposedRange(valuetype MonoMac.Foundation.NSRange proposedCharRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("smartDeleteRangeForProposedRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proposedCharRange" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="proposedCharRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartInsert">
      <MemberSignature Language="C#" Value="public virtual void SmartInsert (string pasteString, MonoMac.Foundation.NSRange charRangeToReplace, string beforeString, string afterString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SmartInsert(string pasteString, valuetype MonoMac.Foundation.NSRange charRangeToReplace, string beforeString, string afterString) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("smartInsertForString:replacingRange:beforeString:afterString:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pasteString" Type="System.String" />
        <Parameter Name="charRangeToReplace" Type="MonoMac.Foundation.NSRange" />
        <Parameter Name="beforeString" Type="System.String" />
        <Parameter Name="afterString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pasteString">To be added.</param>
        <param name="charRangeToReplace">To be added.</param>
        <param name="beforeString">To be added.</param>
        <param name="afterString">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartInsertAfter">
      <MemberSignature Language="C#" Value="public virtual string SmartInsertAfter (string pasteString, MonoMac.Foundation.NSRange charRangeToReplace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SmartInsertAfter(string pasteString, valuetype MonoMac.Foundation.NSRange charRangeToReplace) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("smartInsertAfterStringForString:replacingRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pasteString" Type="System.String" />
        <Parameter Name="charRangeToReplace" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="pasteString">To be added.</param>
        <param name="charRangeToReplace">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartInsertBefore">
      <MemberSignature Language="C#" Value="public virtual string SmartInsertBefore (string pasteString, MonoMac.Foundation.NSRange charRangeToReplace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SmartInsertBefore(string pasteString, valuetype MonoMac.Foundation.NSRange charRangeToReplace) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("smartInsertBeforeStringForString:replacingRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pasteString" Type="System.String" />
        <Parameter Name="charRangeToReplace" Type="MonoMac.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="pasteString">To be added.</param>
        <param name="charRangeToReplace">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartInsertDeleteEnabled">
      <MemberSignature Language="C#" Value="public virtual bool SmartInsertDeleteEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SmartInsertDeleteEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("smartInsertDeleteEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setSmartInsertDeleteEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellCheckerDocumentTag">
      <MemberSignature Language="C#" Value="public virtual int SpellCheckerDocumentTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SpellCheckerDocumentTag() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("spellCheckerDocumentTag")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartSpeaking">
      <MemberSignature Language="C#" Value="public virtual void StartSpeaking (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartSpeaking(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("startSpeaking:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopSpeaking">
      <MemberSignature Language="C#" Value="public virtual void StopSpeaking (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopSpeaking(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("stopSpeaking:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextContainer">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSTextContainer TextContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextContainer TextContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("textContainer")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setTextContainer:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextContainerInset">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.SizeF TextContainerInset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.SizeF TextContainerInset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("textContainerInset")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setTextContainerInset:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextContainerOrigin">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.PointF TextContainerOrigin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF TextContainerOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("textContainerOrigin")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextStorage">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSTextStorage TextStorage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextStorage TextStorage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("textStorage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextStorage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TightenKerning">
      <MemberSignature Language="C#" Value="public virtual void TightenKerning (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TightenKerning(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("tightenKerning:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleAutomaticDashSubstitution">
      <MemberSignature Language="C#" Value="public virtual void ToggleAutomaticDashSubstitution (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleAutomaticDashSubstitution(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("toggleAutomaticDashSubstitution:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleAutomaticDataDetection">
      <MemberSignature Language="C#" Value="public virtual void ToggleAutomaticDataDetection (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleAutomaticDataDetection(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("toggleAutomaticDataDetection:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleAutomaticLinkDetection">
      <MemberSignature Language="C#" Value="public virtual void ToggleAutomaticLinkDetection (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleAutomaticLinkDetection(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("toggleAutomaticLinkDetection:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleAutomaticQuoteSubstitution">
      <MemberSignature Language="C#" Value="public virtual void ToggleAutomaticQuoteSubstitution (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleAutomaticQuoteSubstitution(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("toggleAutomaticQuoteSubstitution:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleAutomaticSpellingCorrection">
      <MemberSignature Language="C#" Value="public virtual void ToggleAutomaticSpellingCorrection (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleAutomaticSpellingCorrection(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("toggleAutomaticSpellingCorrection:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleAutomaticTextReplacement">
      <MemberSignature Language="C#" Value="public virtual void ToggleAutomaticTextReplacement (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleAutomaticTextReplacement(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("toggleAutomaticTextReplacement:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleContinuousSpellChecking">
      <MemberSignature Language="C#" Value="public virtual void ToggleContinuousSpellChecking (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleContinuousSpellChecking(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("toggleContinuousSpellChecking:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleGrammarChecking">
      <MemberSignature Language="C#" Value="public virtual void ToggleGrammarChecking (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleGrammarChecking(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("toggleGrammarChecking:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleSmartInsertDelete">
      <MemberSignature Language="C#" Value="public virtual void ToggleSmartInsertDelete (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleSmartInsertDelete(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("toggleSmartInsertDelete:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleTraditionalCharacterShape">
      <MemberSignature Language="C#" Value="public virtual void ToggleTraditionalCharacterShape (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleTraditionalCharacterShape(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("toggleTraditionalCharacterShape:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TurnOffKerning">
      <MemberSignature Language="C#" Value="public virtual void TurnOffKerning (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TurnOffKerning(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("turnOffKerning:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TurnOffLigatures">
      <MemberSignature Language="C#" Value="public virtual void TurnOffLigatures (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TurnOffLigatures(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("turnOffLigatures:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypingAttributes">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSDictionary TypingAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.Foundation.NSDictionary TypingAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("typingAttributes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setTypingAttributes:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDragTypeRegistration">
      <MemberSignature Language="C#" Value="public virtual void UpdateDragTypeRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateDragTypeRegistration() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("updateDragTypeRegistration")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFontPanel">
      <MemberSignature Language="C#" Value="public virtual void UpdateFontPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateFontPanel() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("updateFontPanel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateInsertionPointStateAndRestartTimer">
      <MemberSignature Language="C#" Value="public virtual void UpdateInsertionPointStateAndRestartTimer (bool restartFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateInsertionPointStateAndRestartTimer(bool restartFlag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("updateInsertionPointStateAndRestartTimer:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restartFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="restartFlag">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateRuler">
      <MemberSignature Language="C#" Value="public virtual void UpdateRuler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateRuler() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("updateRuler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseAllLigatures">
      <MemberSignature Language="C#" Value="public virtual void UseAllLigatures (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UseAllLigatures(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("useAllLigatures:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesFindPanel">
      <MemberSignature Language="C#" Value="public virtual bool UsesFindPanel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesFindPanel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("usesFindPanel")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setUsesFindPanel:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesFontPanel">
      <MemberSignature Language="C#" Value="public virtual bool UsesFontPanel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesFontPanel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("usesFontPanel")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setUsesFontPanel:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesRuler">
      <MemberSignature Language="C#" Value="public virtual bool UsesRuler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesRuler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("usesRuler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setUsesRuler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardKerning">
      <MemberSignature Language="C#" Value="public virtual void UseStandardKerning (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UseStandardKerning(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("useStandardKerning:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardLigatures">
      <MemberSignature Language="C#" Value="public virtual void UseStandardLigatures (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UseStandardLigatures(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("useStandardLigatures:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidRequestorForSendTypereturnType">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSObject ValidRequestorForSendTypereturnType (string sendType, string returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoMac.Foundation.NSObject ValidRequestorForSendTypereturnType(string sendType, string returnType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("validRequestorForSendType:returnType:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sendType" Type="System.String" />
        <Parameter Name="returnType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sendType">To be added.</param>
        <param name="returnType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakDelegate">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSObject WeakDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.Foundation.NSObject WeakDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("delegate")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setDelegate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An object that can respond to the delegate protocol for this type</summary>
        <value>The instance that will respond to events and data requests.</value>
        <remarks>
          <para>The delegate instance assigned to this object will be used to handle events or provide data on demand to this class.</para>
          <para>When setting the Delegate or WeakDelegate values events will be delivered to the specified instance instead of being delivered to the C#-style events</para>
          <para>   Methods must be decorated with the [Export ("selectorName")] attribute to respond to each method from the protocol.   Alternatively use the Delegate method which is strongly typed and does not require the [Export] attributes on methods.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeSelection">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSTextViewSelectionChange WillChangeSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextViewSelectionChange WillChangeSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextViewSelectionChange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeSelectionFromRanges">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSTextViewSelectionWillChange WillChangeSelectionFromRanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextViewSelectionWillChange WillChangeSelectionFromRanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextViewSelectionWillChange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillCheckText">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSTextViewOnTextCheck WillCheckText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextViewOnTextCheck WillCheckText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextViewOnTextCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillDisplayToolTip">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSTextViewTooltip WillDisplayToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextViewTooltip WillDisplayToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextViewTooltip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritablePasteboardTypes">
      <MemberSignature Language="C#" Value="public virtual string[] WritablePasteboardTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] WritablePasteboardTypes() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("writablePasteboardTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteCell">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSTextViewCellPasteboard WriteCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSTextViewCellPasteboard WriteCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextViewCellPasteboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the Delegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteSelectionToPasteboardtype">
      <MemberSignature Language="C#" Value="public virtual bool WriteSelectionToPasteboardtype (MonoMac.AppKit.NSPasteboard pboard, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WriteSelectionToPasteboardtype(class MonoMac.AppKit.NSPasteboard pboard, string type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("writeSelectionToPasteboard:type:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pboard" Type="MonoMac.AppKit.NSPasteboard" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pboard">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteSelectionToPasteboardtypes">
      <MemberSignature Language="C#" Value="public virtual bool WriteSelectionToPasteboardtypes (MonoMac.AppKit.NSPasteboard pboard, string[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WriteSelectionToPasteboardtypes(class MonoMac.AppKit.NSPasteboard pboard, string[] types) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("writeSelectionToPasteboard:types:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pboard" Type="MonoMac.AppKit.NSPasteboard" />
        <Parameter Name="types" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="pboard">To be added.</param>
        <param name="types">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
