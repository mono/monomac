<Type Name="NSTextAttachmentCell" FullName="MonoMac.AppKit.NSTextAttachmentCell">
  <TypeSignature Language="C#" Value="public abstract class NSTextAttachmentCell : MonoMac.AppKit.NSCell" />
  <AssemblyInfo>
    <AssemblyName>monomac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoMac.AppKit.NSCell</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoMac.Foundation.Register("NSTextAttachmentCell")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextAttachmentCell ();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("init")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextAttachmentCell (MonoMac.Foundation.NSCoder coder);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoMac.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextAttachmentCell (MonoMac.Foundation.NSObjectFlag t);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="MonoMac.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes when the derived class has an [Export] constructor.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they are initialized using an [Export] attribute. The argument value is ignore, typically the chaining would look like this:</para>
          <example>
            <code lang="C#">
public class MyClass : BaseClass {
    [Export ("initWithFoo:")]
    public MyClass (string foo) : base (NSObjectFlag.Empty)
    {
        ...
    }
</code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTextAttachmentCell (IntPtr handle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:MonoMac.ObjCRuntime.GetNSObject (System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    You should not invoke this method directly, instead you should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attachment">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSTextAttachment Attachment { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("attachment")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setAttachment:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSTextAttachment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellBaselineOffset">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.PointF CellBaselineOffset { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("cellBaselineOffset")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellFrameForTextContainer">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.RectangleF CellFrameForTextContainer (MonoMac.AppKit.NSTextContainer textContainer, System.Drawing.RectangleF lineFrag, System.Drawing.PointF position, uint charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textContainer" Type="MonoMac.AppKit.NSTextContainer" />
        <Parameter Name="lineFrag" Type="System.Drawing.RectangleF" />
        <Parameter Name="position" Type="System.Drawing.PointF" />
        <Parameter Name="charIndex" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="textContainer">To be added.</param>
        <param name="lineFrag">To be added.</param>
        <param name="position">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.SizeF CellSize { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("cellSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each MonoMac class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawWithFrame">
      <MemberSignature Language="C#" Value="public virtual void DrawWithFrame (System.Drawing.RectangleF cellFrame, MonoMac.AppKit.NSView controlView, uint charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("drawWithFrame:inView:characterIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cellFrame" Type="System.Drawing.RectangleF" />
        <Parameter Name="controlView" Type="MonoMac.AppKit.NSView" />
        <Parameter Name="charIndex" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="cellFrame">To be added.</param>
        <param name="controlView">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawWithFrame">
      <MemberSignature Language="C#" Value="public abstract void DrawWithFrame (System.Drawing.RectangleF cellFrame, MonoMac.AppKit.NSView controlView, uint charIndex, MonoMac.AppKit.NSLayoutManager layoutManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("drawWithFrame:inView:characterIndex:layoutManager:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cellFrame" Type="System.Drawing.RectangleF" />
        <Parameter Name="controlView" Type="MonoMac.AppKit.NSView" />
        <Parameter Name="charIndex" Type="System.UInt32" />
        <Parameter Name="layoutManager" Type="MonoMac.AppKit.NSLayoutManager" />
      </Parameters>
      <Docs>
        <param name="cellFrame">To be added.</param>
        <param name="controlView">To be added.</param>
        <param name="charIndex">To be added.</param>
        <param name="layoutManager">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Highlight">
      <MemberSignature Language="C#" Value="public virtual void Highlight (bool flag, System.Drawing.RectangleF cellFrame, MonoMac.AppKit.NSView controlView);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("highlight:withFrame:inView:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
        <Parameter Name="cellFrame" Type="System.Drawing.RectangleF" />
        <Parameter Name="controlView" Type="MonoMac.AppKit.NSView" />
      </Parameters>
      <Docs>
        <param name="flag">To be added.</param>
        <param name="cellFrame">To be added.</param>
        <param name="controlView">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackMouse">
      <MemberSignature Language="C#" Value="public virtual bool TrackMouse (MonoMac.AppKit.NSEvent theEvent, System.Drawing.RectangleF cellFrame, MonoMac.AppKit.NSView controlView, uint charIndex, bool flag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="MonoMac.AppKit.NSEvent" />
        <Parameter Name="cellFrame" Type="System.Drawing.RectangleF" />
        <Parameter Name="controlView" Type="MonoMac.AppKit.NSView" />
        <Parameter Name="charIndex" Type="System.UInt32" />
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <param name="cellFrame">To be added.</param>
        <param name="controlView">To be added.</param>
        <param name="charIndex">To be added.</param>
        <param name="flag">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackMouseinRectofViewuntilMouseUp">
      <MemberSignature Language="C#" Value="public virtual bool TrackMouseinRectofViewuntilMouseUp (MonoMac.AppKit.NSEvent theEvent, System.Drawing.RectangleF cellFrame, MonoMac.AppKit.NSView controlView, bool flag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("trackMouse:inRect:ofView:untilMouseUp:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="MonoMac.AppKit.NSEvent" />
        <Parameter Name="cellFrame" Type="System.Drawing.RectangleF" />
        <Parameter Name="controlView" Type="MonoMac.AppKit.NSView" />
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <param name="cellFrame">To be added.</param>
        <param name="controlView">To be added.</param>
        <param name="flag">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WantsToTrackMouse">
      <MemberSignature Language="C#" Value="public virtual bool WantsToTrackMouse ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("wantsToTrackMouse")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WantsToTrackMouse">
      <MemberSignature Language="C#" Value="public abstract bool WantsToTrackMouse (MonoMac.AppKit.NSEvent theEvent, System.Drawing.RectangleF cellFrame, MonoMac.AppKit.NSView controlView, uint charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="MonoMac.AppKit.NSEvent" />
        <Parameter Name="cellFrame" Type="System.Drawing.RectangleF" />
        <Parameter Name="controlView" Type="MonoMac.AppKit.NSView" />
        <Parameter Name="charIndex" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <param name="cellFrame">To be added.</param>
        <param name="controlView">To be added.</param>
        <param name="charIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
