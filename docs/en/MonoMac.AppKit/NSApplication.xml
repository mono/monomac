<Type Name="NSApplication" FullName="MonoMac.AppKit.NSApplication">
  <TypeSignature Language="C#" Value="public class NSApplication : MonoMac.AppKit.NSResponder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi NSApplication extends MonoMac.AppKit.NSResponder" />
  <AssemblyInfo>
    <AssemblyName>MonoMac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoMac.AppKit.NSResponder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoMac.Foundation.Register("NSApplication", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("init")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSApplication (MonoMac.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoMac.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoMac.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSApplication (MonoMac.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoMac.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="MonoMac.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes when the derived class has an [Export] constructor.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they are initialized using an [Export] attribute. The argument value is ignore, typically the chaining would look like this:</para>
          <example>
            <code lang="C#">
public class MyClass : BaseClass {
    [Export ("initWithFoo:")]
    public MyClass (string foo) : base (NSObjectFlag.Empty)
    {
        ...
    }
</code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSApplication (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:MonoMac.ObjCRuntime.GetNSObject (System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    You should not invoke this method directly, instead you should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AbortModal">
      <MemberSignature Language="C#" Value="public virtual void AbortModal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AbortModal() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("abortModal")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateIgnoringOtherApps">
      <MemberSignature Language="C#" Value="public virtual void ActivateIgnoringOtherApps (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateIgnoringOtherApps(bool flag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("activateIgnoringOtherApps:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivationPolicy">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSApplicationActivationPolicy ActivationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoMac.AppKit.NSApplicationActivationPolicy ActivationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("activationPolicy")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setActivationPolicy:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationActivationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="public virtual bool Active { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isActive")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddWindowsItem">
      <MemberSignature Language="C#" Value="public virtual void AddWindowsItem (MonoMac.AppKit.NSWindow win, string title, bool isFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddWindowsItem(class MonoMac.AppKit.NSWindow win, string title, bool isFilename) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("addWindowsItem:title:filename:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="win" Type="MonoMac.AppKit.NSWindow" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="isFilename" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="win">To be added.</param>
        <param name="title">To be added.</param>
        <param name="isFilename">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationDockMenu">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSApplicationMenu ApplicationDockMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSApplicationMenu ApplicationDockMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationIconImage">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSImage ApplicationIconImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSImage ApplicationIconImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("applicationIconImage")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setApplicationIconImage:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSImage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationOpenUntitledFile">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSApplicationPredicate ApplicationOpenUntitledFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSApplicationPredicate ApplicationOpenUntitledFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationPredicate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationShouldHandleReopen">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSApplicationReopen ApplicationShouldHandleReopen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSApplicationReopen ApplicationShouldHandleReopen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationReopen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationShouldOpenUntitledFile">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSApplicationPredicate ApplicationShouldOpenUntitledFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSApplicationPredicate ApplicationShouldOpenUntitledFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationPredicate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationShouldTerminate">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSApplicationTermination ApplicationShouldTerminate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSApplicationTermination ApplicationShouldTerminate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationTermination</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationShouldTerminateAfterLastWindowClosed">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSApplicationPredicate ApplicationShouldTerminateAfterLastWindowClosed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSApplicationPredicate ApplicationShouldTerminateAfterLastWindowClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationPredicate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeInFront">
      <MemberSignature Language="C#" Value="public virtual void ArrangeInFront (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ArrangeInFront(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("arrangeInFront:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginModalSession">
      <MemberSignature Language="C#" Value="public virtual IntPtr BeginModalSession (MonoMac.AppKit.NSWindow theWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int BeginModalSession(class MonoMac.AppKit.NSWindow theWindow) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("beginModalSessionForWindow:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theWindow" Type="MonoMac.AppKit.NSWindow" />
      </Parameters>
      <Docs>
        <param name="theWindow">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSheet">
      <MemberSignature Language="C#" Value="public void BeginSheet (MonoMac.AppKit.NSWindow sheet, MonoMac.AppKit.NSWindow docWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginSheet(class MonoMac.AppKit.NSWindow sheet, class MonoMac.AppKit.NSWindow docWindow) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sheet" Type="MonoMac.AppKit.NSWindow" />
        <Parameter Name="docWindow" Type="MonoMac.AppKit.NSWindow" />
      </Parameters>
      <Docs>
        <param name="sheet">To be added.</param>
        <param name="docWindow">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSheet">
      <MemberSignature Language="C#" Value="public void BeginSheet (MonoMac.AppKit.NSWindow sheet, MonoMac.AppKit.NSWindow docWindow, MonoMac.Foundation.NSAction onEnded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginSheet(class MonoMac.AppKit.NSWindow sheet, class MonoMac.AppKit.NSWindow docWindow, class MonoMac.Foundation.NSAction onEnded) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sheet" Type="MonoMac.AppKit.NSWindow" />
        <Parameter Name="docWindow" Type="MonoMac.AppKit.NSWindow" />
        <Parameter Name="onEnded" Type="MonoMac.Foundation.NSAction" />
      </Parameters>
      <Docs>
        <param name="sheet">To be added.</param>
        <param name="docWindow">To be added.</param>
        <param name="onEnded">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSheet">
      <MemberSignature Language="C#" Value="public virtual void BeginSheet (MonoMac.AppKit.NSWindow sheet, MonoMac.AppKit.NSWindow docWindow, MonoMac.Foundation.NSObject modalDelegate, MonoMac.ObjCRuntime.Selector didEndSelector, IntPtr contextInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginSheet(class MonoMac.AppKit.NSWindow sheet, class MonoMac.AppKit.NSWindow docWindow, class MonoMac.Foundation.NSObject modalDelegate, class MonoMac.ObjCRuntime.Selector didEndSelector, native int contextInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sheet" Type="MonoMac.AppKit.NSWindow" />
        <Parameter Name="docWindow" Type="MonoMac.AppKit.NSWindow" />
        <Parameter Name="modalDelegate" Type="MonoMac.Foundation.NSObject" />
        <Parameter Name="didEndSelector" Type="MonoMac.ObjCRuntime.Selector" />
        <Parameter Name="contextInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="sheet">To be added.</param>
        <param name="docWindow">To be added.</param>
        <param name="modalDelegate">To be added.</param>
        <param name="didEndSelector">To be added.</param>
        <param name="contextInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelUserAttentionRequest">
      <MemberSignature Language="C#" Value="public virtual void CancelUserAttentionRequest (int request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelUserAttentionRequest(int32 request) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("cancelUserAttentionRequest:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeWindowsItem">
      <MemberSignature Language="C#" Value="public virtual void ChangeWindowsItem (MonoMac.AppKit.NSWindow win, string title, bool isFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeWindowsItem(class MonoMac.AppKit.NSWindow win, string title, bool isFilename) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("changeWindowsItem:title:filename:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="win" Type="MonoMac.AppKit.NSWindow" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="isFilename" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="win">To be added.</param>
        <param name="title">To be added.</param>
        <param name="isFilename">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each MonoMac class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSGraphicsContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSGraphicsContext Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("context")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSGraphicsContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentEvent">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSEvent CurrentEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSEvent CurrentEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("currentEvent")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentSystemPresentationOptions">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSApplicationPresentationOptions CurrentSystemPresentationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoMac.AppKit.NSApplicationPresentationOptions CurrentSystemPresentationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("currentSystemPresentationOptions")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationPresentationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="public virtual void Deactivate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deactivate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("deactivate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegate">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSApplicationDelegate Delegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSApplicationDelegate Delegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An instance of the MonoMac.AppKit.NSApplicationDelegate model class which acts as the class delegate.</summary>
        <value>The instance of the MonoMac.AppKit.NSApplicationDelegate model class</value>
        <remarks>
          <para>The delegate instance assigned to this object will be used to handle events or provide data on demand to this class.</para>
          <para>When setting the Delegate or WeakDelegate values events will be delivered to the specified instance instead of being delivered to the C#-style events</para>
          <para>This is the strongly typed version of the object, use the WeakDelegate property instead if you want to merely assign a class derived from NSObject that has been decorated with [Export] attributes.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetachDrawingThread">
      <MemberSignature Language="C#" Value="public static void DetachDrawingThread (MonoMac.ObjCRuntime.Selector selector, MonoMac.Foundation.NSObject target, MonoMac.Foundation.NSObject argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DetachDrawingThread(class MonoMac.ObjCRuntime.Selector selector, class MonoMac.Foundation.NSObject target, class MonoMac.Foundation.NSObject argument) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("detachDrawingThread:toTarget:withObject:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="MonoMac.ObjCRuntime.Selector" />
        <Parameter Name="target" Type="MonoMac.Foundation.NSObject" />
        <Parameter Name="argument" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="selector">To be added.</param>
        <param name="target">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidBecomeActive">
      <MemberSignature Language="C#" Value="public event EventHandler DidBecomeActive;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DidBecomeActive" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidFinishLaunching">
      <MemberSignature Language="C#" Value="public event EventHandler DidFinishLaunching;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DidFinishLaunching" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidHide">
      <MemberSignature Language="C#" Value="public event EventHandler DidHide;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DidHide" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidResignActive">
      <MemberSignature Language="C#" Value="public event EventHandler DidResignActive;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DidResignActive" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUnhide">
      <MemberSignature Language="C#" Value="public event EventHandler DidUnhide;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DidUnhide" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUpdate">
      <MemberSignature Language="C#" Value="public event EventHandler DidUpdate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DidUpdate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardEvents">
      <MemberSignature Language="C#" Value="public virtual void DiscardEvents (MonoMac.AppKit.NSEventMask mask, MonoMac.AppKit.NSEvent lastEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscardEvents(valuetype MonoMac.AppKit.NSEventMask mask, class MonoMac.AppKit.NSEvent lastEvent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("discardEventsMatchingMask:beforeEvent:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="MonoMac.AppKit.NSEventMask" />
        <Parameter Name="lastEvent" Type="MonoMac.AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="lastEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DockTile">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSDockTile DockTile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSDockTile DockTile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("dockTile")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSDockTile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndModalSession">
      <MemberSignature Language="C#" Value="public virtual void EndModalSession (IntPtr session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndModalSession(native int session) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("endModalSession:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSheet">
      <MemberSignature Language="C#" Value="public virtual void EndSheet (MonoMac.AppKit.NSWindow sheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSheet(class MonoMac.AppKit.NSWindow sheet) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("endSheet:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sheet" Type="MonoMac.AppKit.NSWindow" />
      </Parameters>
      <Docs>
        <param name="sheet">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSheet">
      <MemberSignature Language="C#" Value="public virtual void EndSheet (MonoMac.AppKit.NSWindow sheet, int returnCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSheet(class MonoMac.AppKit.NSWindow sheet, int32 returnCode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("endSheet:returnCode:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sheet" Type="MonoMac.AppKit.NSWindow" />
        <Parameter Name="returnCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sheet">To be added.</param>
        <param name="returnCode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishLaunching">
      <MemberSignature Language="C#" Value="public virtual void FinishLaunching ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinishLaunching() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("finishLaunching")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullKeyboardAccessEnabled">
      <MemberSignature Language="C#" Value="public virtual bool FullKeyboardAccessEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullKeyboardAccessEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isFullKeyboardAccessEnabled")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpMenu">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSMenu HelpMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSMenu HelpMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("setHelpMenu:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setSetHelpMenu::")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public virtual bool Hidden { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Hidden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isHidden")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public virtual void Hide (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Hide(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("hide:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HideOtherApplications">
      <MemberSignature Language="C#" Value="public virtual void HideOtherApplications (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HideOtherApplications(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("hideOtherApplications:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public static void Init ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Init() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitDrawingBridge">
      <MemberSignature Language="C#" Value="public static void InitDrawingBridge ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitDrawingBridge() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyWindow">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSWindow KeyWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSWindow KeyWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("keyWindow")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Main">
      <MemberSignature Language="C#" Value="public static void Main (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Main(string[] args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MainMenu">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSMenu MainMenu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSMenu MainMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("mainMenu")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MainWindow">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSWindow MainWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSWindow MainWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("mainWindow")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeWindowsPerform">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSWindow MakeWindowsPerform (MonoMac.ObjCRuntime.Selector aSelector, bool inOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoMac.AppKit.NSWindow MakeWindowsPerform(class MonoMac.ObjCRuntime.Selector aSelector, bool inOrder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("makeWindowsPerform:inOrder:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aSelector" Type="MonoMac.ObjCRuntime.Selector" />
        <Parameter Name="inOrder" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="aSelector">To be added.</param>
        <param name="inOrder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MiniaturizeAll">
      <MemberSignature Language="C#" Value="public virtual void MiniaturizeAll (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MiniaturizeAll(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("miniaturizeAll:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModalWindow">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSWindow ModalWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSWindow ModalWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("modalWindow")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextEvent">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSEvent NextEvent (MonoMac.AppKit.NSEventMask mask, MonoMac.Foundation.NSDate expiration, string mode, bool deqFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoMac.AppKit.NSEvent NextEvent(valuetype MonoMac.AppKit.NSEventMask mask, class MonoMac.Foundation.NSDate expiration, string mode, bool deqFlag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("nextEventMatchingMask:untilDate:inMode:dequeue:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="MonoMac.AppKit.NSEventMask" />
        <Parameter Name="expiration" Type="MonoMac.Foundation.NSDate" />
        <Parameter Name="mode" Type="System.String" />
        <Parameter Name="deqFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mask">To be added.</param>
        <param name="expiration">To be added.</param>
        <param name="mode">To be added.</param>
        <param name="deqFlag">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSApplicationFile OpenFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSApplicationFile OpenFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenFiles">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MonoMac.AppKit.NSApplicationFilesEventArgs&gt; OpenFiles;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MonoMac.AppKit.NSApplicationFilesEventArgs&gt; OpenFiles" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MonoMac.AppKit.NSApplicationFilesEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenFileWithoutUI">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSApplicationFileCommand OpenFileWithoutUI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSApplicationFileCommand OpenFileWithoutUI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationFileCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenTempFile">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSApplicationFile OpenTempFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSApplicationFile OpenTempFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderFrontCharacterPalette">
      <MemberSignature Language="C#" Value="public virtual void OrderFrontCharacterPalette (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderFrontCharacterPalette(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("orderFrontCharacterPalette:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderFrontColorPanel">
      <MemberSignature Language="C#" Value="public virtual void OrderFrontColorPanel (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrderFrontColorPanel(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("orderFrontColorPanel:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderFrontStandardAboutPanel">
      <MemberSignature Language="C#" Value="public event EventHandler OrderFrontStandardAboutPanel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler OrderFrontStandardAboutPanel" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderFrontStandardAboutPanelWithOptions">
      <MemberSignature Language="C#" Value="public event EventHandler OrderFrontStandardAboutPanelWithOptions;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler OrderFrontStandardAboutPanelWithOptions" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostEvent">
      <MemberSignature Language="C#" Value="public virtual void PostEvent (MonoMac.AppKit.NSEvent theEvent, bool atStart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostEvent(class MonoMac.AppKit.NSEvent theEvent, bool atStart) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("postEvent:atStart:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="MonoMac.AppKit.NSEvent" />
        <Parameter Name="atStart" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <param name="atStart">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentationOptions">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSApplicationPresentationOptions PresentationOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoMac.AppKit.NSApplicationPresentationOptions PresentationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("presentationOptions")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setPresentationOptions:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationPresentationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreventWindowOrdering">
      <MemberSignature Language="C#" Value="public virtual void PreventWindowOrdering ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreventWindowOrdering() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("preventWindowOrdering")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintFile">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSApplicationFile PrintFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSApplicationFile PrintFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintFiles">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSApplicationPrint PrintFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSApplicationPrint PrintFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationPrint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadSelectionFromPasteboard">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSPasteboardPredicate ReadSelectionFromPasteboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSPasteboardPredicate ReadSelectionFromPasteboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSPasteboardPredicate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterServicesMenu">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MonoMac.AppKit.NSApplicationRegisterEventArgs&gt; RegisterServicesMenu;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MonoMac.AppKit.NSApplicationRegisterEventArgs&gt; RegisterServicesMenu" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MonoMac.AppKit.NSApplicationRegisterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveWindowsItem">
      <MemberSignature Language="C#" Value="public virtual void RemoveWindowsItem (MonoMac.AppKit.NSWindow win);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveWindowsItem(class MonoMac.AppKit.NSWindow win) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("removeWindowsItem:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="win" Type="MonoMac.AppKit.NSWindow" />
      </Parameters>
      <Docs>
        <param name="win">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToApplicationShouldTerminate">
      <MemberSignature Language="C#" Value="public virtual void ReplyToApplicationShouldTerminate (bool shouldTerminate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplyToApplicationShouldTerminate(bool shouldTerminate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("replyToApplicationShouldTerminate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shouldTerminate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="shouldTerminate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToOpenOrPrint">
      <MemberSignature Language="C#" Value="public virtual void ReplyToOpenOrPrint (MonoMac.AppKit.NSApplicationDelegateReply reply);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplyToOpenOrPrint(valuetype MonoMac.AppKit.NSApplicationDelegateReply reply) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("replyToOpenOrPrint:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reply" Type="MonoMac.AppKit.NSApplicationDelegateReply" />
      </Parameters>
      <Docs>
        <param name="reply">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportException">
      <MemberSignature Language="C#" Value="public virtual void ReportException (MonoMac.Foundation.NSException theException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReportException(class MonoMac.Foundation.NSException theException) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("reportException:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theException" Type="MonoMac.Foundation.NSException" />
      </Parameters>
      <Docs>
        <param name="theException">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestUserAttention">
      <MemberSignature Language="C#" Value="public virtual int RequestUserAttention (MonoMac.AppKit.NSRequestUserAttentionType requestType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 RequestUserAttention(valuetype MonoMac.AppKit.NSRequestUserAttentionType requestType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("requestUserAttention:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestType" Type="MonoMac.AppKit.NSRequestUserAttentionType" />
      </Parameters>
      <Docs>
        <param name="requestType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public virtual void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Run() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("run")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunModalForWindow">
      <MemberSignature Language="C#" Value="public virtual int RunModalForWindow (MonoMac.AppKit.NSWindow theWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 RunModalForWindow(class MonoMac.AppKit.NSWindow theWindow) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("runModalForWindow:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theWindow" Type="MonoMac.AppKit.NSWindow" />
      </Parameters>
      <Docs>
        <param name="theWindow">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunModalSession">
      <MemberSignature Language="C#" Value="public virtual int RunModalSession (IntPtr session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 RunModalSession(native int session) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("runModalSession:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Running">
      <MemberSignature Language="C#" Value="public virtual bool Running { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Running" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isRunning")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenParametersChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ScreenParametersChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ScreenParametersChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAction">
      <MemberSignature Language="C#" Value="public virtual bool SendAction (MonoMac.ObjCRuntime.Selector theAction, MonoMac.Foundation.NSObject theTarget, MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SendAction(class MonoMac.ObjCRuntime.Selector theAction, class MonoMac.Foundation.NSObject theTarget, class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("sendAction:to:from:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theAction" Type="MonoMac.ObjCRuntime.Selector" />
        <Parameter Name="theTarget" Type="MonoMac.Foundation.NSObject" />
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="theAction">To be added.</param>
        <param name="theTarget">To be added.</param>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendEvent">
      <MemberSignature Language="C#" Value="public virtual void SendEvent (MonoMac.AppKit.NSEvent theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendEvent(class MonoMac.AppKit.NSEvent theEvent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("sendEvent:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="MonoMac.AppKit.NSEvent" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServicesMenu">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSMenu ServicesMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSMenu ServicesMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("servicesMenu")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setServicesMenu:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServicesProvider">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSObject ServicesProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.Foundation.NSObject ServicesProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("servicesProvider")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setServicesProvider:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMainMenu">
      <MemberSignature Language="C#" Value="public virtual void SetMainMenu (MonoMac.AppKit.NSMenu aMenu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMainMenu(class MonoMac.AppKit.NSMenu aMenu) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setMainMenu:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aMenu" Type="MonoMac.AppKit.NSMenu" />
      </Parameters>
      <Docs>
        <param name="aMenu">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWindowsNeedUpdate">
      <MemberSignature Language="C#" Value="public virtual void SetWindowsNeedUpdate (bool needUpdate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWindowsNeedUpdate(bool needUpdate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("setWindowsNeedUpdate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="needUpdate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="needUpdate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedApplication">
      <MemberSignature Language="C#" Value="public static MonoMac.AppKit.NSApplication SharedApplication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class MonoMac.AppKit.NSApplication SharedApplication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("sharedApplication")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public virtual void Stop (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("stop:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopModal">
      <MemberSignature Language="C#" Value="public virtual void StopModal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopModal() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("stopModal")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopModalWithCode">
      <MemberSignature Language="C#" Value="public virtual void StopModalWithCode (int returnCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopModalWithCode(int32 returnCode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("stopModalWithCode:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="returnCode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetForAction">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSObject TargetForAction (MonoMac.ObjCRuntime.Selector theAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoMac.Foundation.NSObject TargetForAction(class MonoMac.ObjCRuntime.Selector theAction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("targetForAction:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theAction" Type="MonoMac.ObjCRuntime.Selector" />
      </Parameters>
      <Docs>
        <param name="theAction">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetForAction">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSObject TargetForAction (MonoMac.ObjCRuntime.Selector theAction, MonoMac.Foundation.NSObject theTarget, MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoMac.Foundation.NSObject TargetForAction(class MonoMac.ObjCRuntime.Selector theAction, class MonoMac.Foundation.NSObject theTarget, class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("targetForAction:to:from:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theAction" Type="MonoMac.ObjCRuntime.Selector" />
        <Parameter Name="theTarget" Type="MonoMac.Foundation.NSObject" />
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="theAction">To be added.</param>
        <param name="theTarget">To be added.</param>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public virtual void Terminate (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Terminate(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("terminate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryToPerform">
      <MemberSignature Language="C#" Value="public virtual bool TryToPerform (MonoMac.ObjCRuntime.Selector anAction, MonoMac.Foundation.NSObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryToPerform(class MonoMac.ObjCRuntime.Selector anAction, class MonoMac.Foundation.NSObject target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("tryToPerform:with:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anAction" Type="MonoMac.ObjCRuntime.Selector" />
        <Parameter Name="target" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="anAction">To be added.</param>
        <param name="target">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unhide">
      <MemberSignature Language="C#" Value="public virtual void Unhide (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unhide(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("unhide:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhideAllApplications">
      <MemberSignature Language="C#" Value="public virtual void UnhideAllApplications (MonoMac.Foundation.NSObject sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnhideAllApplications(class MonoMac.Foundation.NSObject sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("unhideAllApplications:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="MonoMac.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhideWithoutActivation">
      <MemberSignature Language="C#" Value="public virtual void UnhideWithoutActivation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnhideWithoutActivation() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("unhideWithoutActivation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateWindows">
      <MemberSignature Language="C#" Value="public virtual void UpdateWindows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateWindows() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("updateWindows")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateWindowsItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateWindowsItem (MonoMac.AppKit.NSWindow win);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateWindowsItem(class MonoMac.AppKit.NSWindow win) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("updateWindowsItem:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="win" Type="MonoMac.AppKit.NSWindow" />
      </Parameters>
      <Docs>
        <param name="win">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserInterfaceLayoutDirection">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSApplicationLayoutDirection UserInterfaceLayoutDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoMac.AppKit.NSApplicationLayoutDirection UserInterfaceLayoutDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("userInterfaceLayoutDirection")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationLayoutDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidRequestor">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSObject ValidRequestor (string sendType, string returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoMac.Foundation.NSObject ValidRequestor(string sendType, string returnType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("validRequestorForSendType:returnType:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sendType" Type="System.String" />
        <Parameter Name="returnType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sendType">To be added.</param>
        <param name="returnType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakDelegate">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSObject WeakDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.Foundation.NSObject WeakDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("delegate", MonoMac.ObjCRuntime.ArgumentSemantic.Assign)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setDelegate:", MonoMac.ObjCRuntime.ArgumentSemantic.Assign)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An object that can respond to the delegate protocol for this type</summary>
        <value>The instance that will respond to events and data requests.</value>
        <remarks>
          <para>The delegate instance assigned to this object will be used to handle events or provide data on demand to this class.</para>
          <para>When setting the Delegate or WeakDelegate values events will be delivered to the specified instance instead of being delivered to the C#-style events</para>
          <para>   Methods must be decorated with the [Export ("selectorName")] attribute to respond to each method from the protocol.   Alternatively use the Delegate method which is strongly typed and does not require the [Export] attributes on methods.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WillBecomeActive">
      <MemberSignature Language="C#" Value="public event EventHandler WillBecomeActive;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler WillBecomeActive" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillFinishLaunching">
      <MemberSignature Language="C#" Value="public event EventHandler WillFinishLaunching;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler WillFinishLaunching" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillHide">
      <MemberSignature Language="C#" Value="public event EventHandler WillHide;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler WillHide" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillPresentError">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSApplicationError WillPresentError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSApplicationError WillPresentError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillResignActive">
      <MemberSignature Language="C#" Value="public event EventHandler WillResignActive;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler WillResignActive" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillTerminate">
      <MemberSignature Language="C#" Value="public event EventHandler WillTerminate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler WillTerminate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillUnhide">
      <MemberSignature Language="C#" Value="public event EventHandler WillUnhide;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler WillUnhide" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillUpdate">
      <MemberSignature Language="C#" Value="public event EventHandler WillUpdate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler WillUpdate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Event raised by the object.</summary>
        <remarks>If you assign a value to this event, this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSWindow[] Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSWindow[] Windows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("windows")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSWindow[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsMenu">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSMenu WindowsMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSMenu WindowsMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("windowsMenu")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setWindowsMenu:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowWithWindowNumber">
      <MemberSignature Language="C#" Value="public virtual MonoMac.AppKit.NSWindow WindowWithWindowNumber (int windowNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoMac.AppKit.NSWindow WindowWithWindowNumber(int32 windowNum) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("windowWithWindowNumber:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="windowNum">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteSelectionToPasteboard">
      <MemberSignature Language="C#" Value="public MonoMac.AppKit.NSApplicationSelection WriteSelectionToPasteboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoMac.AppKit.NSApplicationSelection WriteSelectionToPasteboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.AppKit.NSApplicationSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegate invoked by the object to get a value.</summary>
        <value>To be added.</value>
        <remarks>You assign a function, delegate or anonymous method to this property to return a value to the object.   If you assign a value to this property, it this will reset the value for the WeakDelegate property to an internal handler that maps delegates to events.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
