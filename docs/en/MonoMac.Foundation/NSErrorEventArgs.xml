<Type Name="NSErrorEventArgs" FullName="MonoMac.Foundation.NSErrorEventArgs">
  <TypeSignature Language="C#" Value="public class NSErrorEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>monomac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides data for the <see cref="E:MonoMac.Foundation.NSErrorEventArgs.Failed" /> event.</summary>
    <remarks>
      <para>Use this class when you want to create event handlers that get an NSError.  </para>
      <para>
For example, you coudl use:

<example><code lang="C#">
public class Sample {
    public event EventHandler&lt;NSErrorEventArgs&gt; Failed;
}
  </code></example></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSErrorEventArgs (MonoMac.Foundation.NSError error);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="error" Type="MonoMac.Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="error">The underlying error.</param>
        <summary>Initializes a new instance of the NSErrorEventArgs class.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public MonoMac.Foundation.NSError Error { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves the NSError value.</summary>
        <value />
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
