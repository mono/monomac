<Type Name="NSTimer" FullName="MonoMac.Foundation.NSTimer">
  <TypeSignature Language="C#" Value="public class NSTimer : MonoMac.Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>monomac</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoMac.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoMac.Foundation.Register("NSTimer")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The timer can trigger actions at certain time intervals.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTimer ();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("init")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTimer (MonoMac.Foundation.NSCoder coder);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoMac.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">The unarchiver object.</param>
        <summary>A constructor that initializes the object from the data stored in the unarchiver object.</summary>
        <remarks>This constructor is provided to allow the class to be initialized from an unarchiver (for example, during NIB deserialization).</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTimer (MonoMac.Foundation.NSObjectFlag t);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="MonoMac.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes when the derived class has an [Export] constructor.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they are initialized using an [Export] attribute. The argument value is ignore, typically the chaining would look like this:</para>
          <example>
            <code lang="C#">
public class MyClass : BaseClass {
    [Export ("initWithFoo:")]
    public MyClass (string foo) : base (NSObjectFlag.Empty)
    {
        ...
    }
</code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTimer (IntPtr handle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:MonoMac.ObjCRuntime.GetNSObject (System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    You should not invoke this method directly, instead you should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTimer (MonoMac.Foundation.NSDate date, TimeSpan when, MonoMac.Foundation.NSAction action, bool repeats);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="date" Type="MonoMac.Foundation.NSDate" />
        <Parameter Name="when" Type="System.TimeSpan" />
        <Parameter Name="action" Type="MonoMac.Foundation.NSAction" />
        <Parameter Name="repeats" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="date">To be added.</param>
        <param name="when">To be added.</param>
        <param name="action">To be added.</param>
        <param name="repeats">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSTimer (MonoMac.Foundation.NSDate date, double seconds, MonoMac.Foundation.NSObject target, MonoMac.ObjCRuntime.Selector selector, MonoMac.Foundation.NSObject userInfo, bool repeats);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("initWithFireDate:interval:target:selector:userInfo:repeats:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="date" Type="MonoMac.Foundation.NSDate" />
        <Parameter Name="seconds" Type="System.Double" />
        <Parameter Name="target" Type="MonoMac.Foundation.NSObject" />
        <Parameter Name="selector" Type="MonoMac.ObjCRuntime.Selector" />
        <Parameter Name="userInfo" Type="MonoMac.Foundation.NSObject" />
        <Parameter Name="repeats" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="date">To be added.</param>
        <param name="seconds">To be added.</param>
        <param name="target">To be added.</param>
        <param name="selector">To be added.</param>
        <param name="userInfo">To be added.</param>
        <param name="repeats">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each MonoMac class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRepeatingScheduledTimer">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSTimer CreateRepeatingScheduledTimer (double seconds, MonoMac.Foundation.NSAction action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSTimer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Double" />
        <Parameter Name="action" Type="MonoMac.Foundation.NSAction" />
      </Parameters>
      <Docs>
        <param name="seconds">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRepeatingScheduledTimer">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSTimer CreateRepeatingScheduledTimer (TimeSpan when, MonoMac.Foundation.NSAction action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSTimer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="when" Type="System.TimeSpan" />
        <Parameter Name="action" Type="MonoMac.Foundation.NSAction" />
      </Parameters>
      <Docs>
        <param name="when">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRepeatingTimer">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSTimer CreateRepeatingTimer (double seconds, MonoMac.Foundation.NSAction action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSTimer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Double" />
        <Parameter Name="action" Type="MonoMac.Foundation.NSAction" />
      </Parameters>
      <Docs>
        <param name="seconds">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRepeatingTimer">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSTimer CreateRepeatingTimer (TimeSpan when, MonoMac.Foundation.NSAction action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSTimer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="when" Type="System.TimeSpan" />
        <Parameter Name="action" Type="MonoMac.Foundation.NSAction" />
      </Parameters>
      <Docs>
        <param name="when">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScheduledTimer">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSTimer CreateScheduledTimer (double seconds, MonoMac.Foundation.NSAction action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSTimer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Double" />
        <Parameter Name="action" Type="MonoMac.Foundation.NSAction" />
      </Parameters>
      <Docs>
        <param name="seconds">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScheduledTimer">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSTimer CreateScheduledTimer (TimeSpan when, MonoMac.Foundation.NSAction action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSTimer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="when" Type="System.TimeSpan" />
        <Parameter Name="action" Type="MonoMac.Foundation.NSAction" />
      </Parameters>
      <Docs>
        <param name="when">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateScheduledTimer">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSTimer CreateScheduledTimer (double seconds, MonoMac.Foundation.NSObject target, MonoMac.ObjCRuntime.Selector selector, MonoMac.Foundation.NSObject userInfo, bool repeats);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSTimer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Double" />
        <Parameter Name="target" Type="MonoMac.Foundation.NSObject" />
        <Parameter Name="selector" Type="MonoMac.ObjCRuntime.Selector" />
        <Parameter Name="userInfo" Type="MonoMac.Foundation.NSObject" />
        <Parameter Name="repeats" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="seconds">To be added.</param>
        <param name="target">To be added.</param>
        <param name="selector">To be added.</param>
        <param name="userInfo">To be added.</param>
        <param name="repeats">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTimer">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSTimer CreateTimer (double seconds, MonoMac.Foundation.NSAction action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSTimer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Double" />
        <Parameter Name="action" Type="MonoMac.Foundation.NSAction" />
      </Parameters>
      <Docs>
        <param name="seconds">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTimer">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSTimer CreateTimer (TimeSpan when, MonoMac.Foundation.NSAction action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSTimer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="when" Type="System.TimeSpan" />
        <Parameter Name="action" Type="MonoMac.Foundation.NSAction" />
      </Parameters>
      <Docs>
        <param name="when">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTimer">
      <MemberSignature Language="C#" Value="public static MonoMac.Foundation.NSTimer CreateTimer (double seconds, MonoMac.Foundation.NSObject target, MonoMac.ObjCRuntime.Selector selector, MonoMac.Foundation.NSObject userInfo, bool repeats);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("timerWithTimeInterval:target:selector:userInfo:repeats:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSTimer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seconds" Type="System.Double" />
        <Parameter Name="target" Type="MonoMac.Foundation.NSObject" />
        <Parameter Name="selector" Type="MonoMac.ObjCRuntime.Selector" />
        <Parameter Name="userInfo" Type="MonoMac.Foundation.NSObject" />
        <Parameter Name="repeats" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="seconds">To be added.</param>
        <param name="target">To be added.</param>
        <param name="selector">To be added.</param>
        <param name="userInfo">To be added.</param>
        <param name="repeats">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resourced used by the NSTimer object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the NSTimer class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposting <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when you are finished using the NSTimer ensures that all external resources used by this managed object are released as soon as possible.  Once you have invoked the Dispose method, the object is no longer useful and you should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fire">
      <MemberSignature Language="C#" Value="public virtual void Fire ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("fire")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FireDate">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSDate FireDate { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSDate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("fireDate")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoMac.Foundation.Export("setFireDate:")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public virtual void Invalidate ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoMac.Foundation.Export("invalidate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("isValid")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="TimeInterval">
      <MemberSignature Language="C#" Value="public virtual double TimeInterval { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("timeInterval")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="UserInfo">
      <MemberSignature Language="C#" Value="public virtual MonoMac.Foundation.NSObject UserInfo { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoMac.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoMac.Foundation.Export("userInfo")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
  </Members>
</Type>
